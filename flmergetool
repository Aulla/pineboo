#!/bin/bash

# FLMERGETOOL.
# To add this tool to git, do the following:
# flmergetool INSTALL

thisprg=`realpath $0`
thisdir=`dirname $thisprg`
if test "$1" = "INSTALL"
then
    sudo ln -s $thisprg /usr/local/bin/flmergetool
    git config --global mergetool.flmergetool.cmd \
                        "flmergetool \$MERGED \$BASE \$LOCAL \$REMOTE"
    git config --global mergetool.flmergetool.trustExitCode true
    exit 0
fi
if [[ $1 == "--debug" ]]; then
    DEBUG="--debug"
    shift
else
    DEBUG=""
fi
MERGE=$1
BASE=$2
LOCAL=$4
REMOTE=$3
if test -f $LOCAL 
then
    OK=1
else
    echo "File $LOCAL does not exist."
    exit 1
fi

if test -f $REMOTE
then
    OK=1
else
    echo "File $REMOTE does not exist."
    exit 1
fi

if test -f $BASE 
then
    OK=1
else
    if kdiff3 $LOCAL $REMOTE -o $MERGE >/dev/null 2>&1
    then
        #echo "KDIFF3 OK"
        OK=1
        exit 0
    else
        echo "KDIFF3 FAILED"
        exit 1
    fi
fi

if echo $MERGE | grep -E '\.qs' 
then
    OK=1
else 
    echo "File $MERGE does not have .qs"
    exit 1
fi

for file1 in "$BASE" "$LOCAL" "$REMOTE"; do
    is_done=1
    until [[ $is_done == 0 ]]
    do
        if python $thisdir/flscriptparse.py -O file "$file1" && test -f "$file1.xml"
        then
            #echo "FLScriptParse OK" 
            is_done=0
        else
            patched=0
            for kpatch in /tmp/knownpatch.*; do
                [[ $kpatch == "/tmp/knownpatch.*" ]] && break
                patch "$file1" "$kpatch" -f -F4 -l && {
                    patched=1
                }
            done
            if [[ $patched == 0 ]]; then
                read -p "Fallo en el parseo del fichero, desea abrir un editor para corregirlo manualmente? [Y/n]:" editor
                [[ $editor == "n" ]] && {
                echo "FLScriptParse FAILED"
                exit 1
                }
                bname=$(basename "$file1")
                [[ $editor ]] || editor="medit"
                [[ $editor == "Y" ]] || editor="medit"
                [[ $editor == "y" ]] || editor="medit"
                cp $file1 /tmp/$bname.orig
                "$editor" "$file1"
                read -p "Pulse Intro si ha terminado." 
                diff -U6 -p --minimal -d /tmp/$bname.orig $file1 >/tmp/knownpatch.$bname.patch.tmp && \
                    mv /tmp/knownpatch.$bname.patch.tmp /tmp/knownpatch.$bname.patch
            fi        
        fi
    done
done

    
if python $thisdir/flpremerge.py $DEBUG $BASE $LOCAL $REMOTE 
then
    #echo "FLPreMerge OK"
    OK=1
else
    echo "FLPreMerge FAILED"
    exit 1
fi

if python $thisdir/flalign.py $DEBUG $BASE $LOCAL $REMOTE 
then
    #echo "FLAlign OK"
    OK=1
else
    echo "FLAlign FAILED"
    exit 1
fi

if test -f $BASE.aligned && test -f $LOCAL.aligned && test -f $REMOTE.aligned
then
    OK=1
else
    echo "FLAlign FAILED"
    exit 1
fi
unlink $MERGE
#echo "kdiff3 $BASE.aligned $LOCAL.aligned $REMOTE.aligned -o $MERGE --auto"
if kdiff3 --auto $BASE.aligned $LOCAL.aligned $REMOTE.aligned -o $MERGE >/dev/null 2>&1
then
    #echo "KDIFF3 OK"
    OK=1
else
    echo "KDIFF3 FAILED"
    exit 1
fi