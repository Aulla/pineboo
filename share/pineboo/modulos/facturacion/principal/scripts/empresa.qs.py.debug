0007Source: begin-gen
0007 Class: begin-gen
0007  Class: line: 'class interna(object):'
0007<-Source: line: 'class interna(object):'
0008  Class: begin: 'block-class-interna'
0008<-Source: begin: 'block-class-interna'
0008  Source: begin-gen
0008   DeclarationBlock: begin-gen
0008    Variable: begin-gen
0008     Variable: expr: 'ctx'
0008     Variable: expr: '='
0008     Variable: expr: 'qsatype.Object()'
0008    Variable: end-gen
0008    DeclarationBlock: line: 'ctx = qsatype.Object()'
0008  <-Source: line: 'ctx = qsatype.Object()'
0008 <--Class: line: 'ctx = qsatype.Object()'
0008<---Source: line: 'ctx = qsatype.Object()'
0009   DeclarationBlock: end-gen
0009   Function: begin-gen
0009    Variable: begin-gen
0009     Variable: expr: 'context'
0009    Variable: end-gen
0009    Function: line: 'def __init__(self, context = None):'
0009  <-Source: line: 'def __init__(self, context = None):'
0009 <--Class: line: 'def __init__(self, context = None):'
0009<---Source: line: 'def __init__(self, context = None):'
0010    Function: begin: 'block-def-__init__'
0010  <-Source: begin: 'block-def-__init__'
0010 <--Class: begin: 'block-def-__init__'
0010<---Source: begin: 'block-def-__init__'
0010    Source: begin-gen
0010     InstructionUpdate: begin-gen
0010      Member: begin-gen
0010       Identifier: begin-gen
0010        Identifier: expr: 'self'
0010       Identifier: end-gen
0010       Identifier: begin-gen
0010        Identifier: expr: 'ctx'
0010       Identifier: end-gen
0010       Member: expr: 'self.ctx'
0010      Member: end-gen
0010      OpUpdate: begin-gen
0010       OpUpdate: expr: '='
0010      OpUpdate: end-gen
0010      Value: begin-gen
0010       Identifier: begin-gen
0010        Identifier: expr: 'context'
0010      <-Value: expr: 'context'
0010       Identifier: end-gen
0010      Value: end-gen
0010      InstructionUpdate: line: 'self.ctx = context'
0010    <-Source: line: 'self.ctx = context'
0010   <--Function: line: 'self.ctx = context'
0010  <---Source: line: 'self.ctx = context'
0010 <----Class: line: 'self.ctx = context'
0010<-----Source: line: 'self.ctx = context'
0011     InstructionUpdate: end-gen
0011    Source: end-gen
0011    Function: end: 'block-def-__init__'
0011  <-Source: end: 'block-def-__init__'
0011 <--Class: end: 'block-def-__init__'
0011<---Source: end: 'block-def-__init__'
0012   Function: end-gen
0012   Function: begin-gen
0012    Function: line: 'def main(self):'
0012  <-Source: line: 'def main(self):'
0012 <--Class: line: 'def main(self):'
0012<---Source: line: 'def main(self):'
0013    Function: begin: 'block-def-main'
0013  <-Source: begin: 'block-def-main'
0013 <--Class: begin: 'block-def-main'
0013<---Source: begin: 'block-def-main'
0013    Source: begin-gen
0013     InstructionCall: begin-gen
0013      Member: begin-gen
0013       Identifier: begin-gen
0013        Identifier: expr: 'self'
0013       Identifier: end-gen
0013       Identifier: begin-gen
0013        Identifier: expr: 'ctx'
0013       Identifier: end-gen
0013       FunctionCall: begin-gen
0013        FunctionCall: expr: 'interna_main()'
0013       FunctionCall: end-gen
0013       Member: expr: 'self.ctx.interna_main()'
0013      Member: end-gen
0013      InstructionCall: line: 'self.ctx.interna_main()'
0013    <-Source: line: 'self.ctx.interna_main()'
0013   <--Function: line: 'self.ctx.interna_main()'
0013  <---Source: line: 'self.ctx.interna_main()'
0013 <----Class: line: 'self.ctx.interna_main()'
0013<-----Source: line: 'self.ctx.interna_main()'
0014     InstructionCall: end-gen
0014    Source: end-gen
0014    Function: end: 'block-def-main'
0014  <-Source: end: 'block-def-main'
0014 <--Class: end: 'block-def-main'
0014<---Source: end: 'block-def-main'
0015   Function: end-gen
0015   Function: begin-gen
0015    Function: line: 'def init(self):'
0015  <-Source: line: 'def init(self):'
0015 <--Class: line: 'def init(self):'
0015<---Source: line: 'def init(self):'
0016    Function: begin: 'block-def-init'
0016  <-Source: begin: 'block-def-init'
0016 <--Class: begin: 'block-def-init'
0016<---Source: begin: 'block-def-init'
0016    Source: begin-gen
0016     InstructionCall: begin-gen
0016      Member: begin-gen
0016       Identifier: begin-gen
0016        Identifier: expr: 'self'
0016       Identifier: end-gen
0016       Identifier: begin-gen
0016        Identifier: expr: 'ctx'
0016       Identifier: end-gen
0016       FunctionCall: begin-gen
0016        FunctionCall: expr: 'interna_init()'
0016       FunctionCall: end-gen
0016       Member: expr: 'self.ctx.interna_init()'
0016      Member: end-gen
0016      InstructionCall: line: 'self.ctx.interna_init()'
0016    <-Source: line: 'self.ctx.interna_init()'
0016   <--Function: line: 'self.ctx.interna_init()'
0016  <---Source: line: 'self.ctx.interna_init()'
0016 <----Class: line: 'self.ctx.interna_init()'
0016<-----Source: line: 'self.ctx.interna_init()'
0017     InstructionCall: end-gen
0017    Source: end-gen
0017    Function: end: 'block-def-init'
0017  <-Source: end: 'block-def-init'
0017 <--Class: end: 'block-def-init'
0017<---Source: end: 'block-def-init'
0018   Function: end-gen
0018   Function: begin-gen
0018    Function: line: 'def validateForm(self):'
0018  <-Source: line: 'def validateForm(self):'
0018 <--Class: line: 'def validateForm(self):'
0018<---Source: line: 'def validateForm(self):'
0019    Function: begin: 'block-def-validateForm'
0019  <-Source: begin: 'block-def-validateForm'
0019 <--Class: begin: 'block-def-validateForm'
0019<---Source: begin: 'block-def-validateForm'
0019    Source: begin-gen
0019     InstructionFlow: begin-gen
0019      Value: begin-gen
0019       Member: begin-gen
0019        Identifier: begin-gen
0019         Identifier: expr: 'self'
0019        Identifier: end-gen
0019        Identifier: begin-gen
0019         Identifier: expr: 'ctx'
0019        Identifier: end-gen
0019        FunctionCall: begin-gen
0019         FunctionCall: expr: 'interna_validateForm()'
0019        FunctionCall: end-gen
0019        Member: expr: 'self.ctx.interna_validateForm()'
0019      <-Value: expr: 'self.ctx.interna_validateForm()'
0019       Member: end-gen
0019      Value: end-gen
0019      InstructionFlow: line: 'return self.ctx.interna_validateForm()'
0019    <-Source: line: 'return self.ctx.interna_validateForm()'
0019   <--Function: line: 'return self.ctx.interna_validateForm()'
0019  <---Source: line: 'return self.ctx.interna_validateForm()'
0019 <----Class: line: 'return self.ctx.interna_validateForm()'
0019<-----Source: line: 'return self.ctx.interna_validateForm()'
0020     InstructionFlow: end-gen
0020    Source: end-gen
0020    Function: end: 'block-def-validateForm'
0020  <-Source: end: 'block-def-validateForm'
0020 <--Class: end: 'block-def-validateForm'
0020<---Source: end: 'block-def-validateForm'
0021   Function: end-gen
0021  Source: end-gen
0021  Class: end: 'block-class-interna'
0021<-Source: end: 'block-class-interna'
0022 Class: end-gen
0022 Class: begin-gen
0022  Class: line: 'class oficial(interna):'
0022<-Source: line: 'class oficial(interna):'
0023  Class: begin: 'block-class-oficial'
0023<-Source: begin: 'block-class-oficial'
0023  Source: begin-gen
0023   DeclarationBlock: begin-gen
0023    Variable: begin-gen
0023     Variable: expr: 'pbnCambiarEjercicioActual'
0023     Variable: expr: '='
0023     Variable: expr: 'qsatype.Object()'
0023    Variable: end-gen
0023    DeclarationBlock: line: 'pbnCambiarEjercicioActual = qsatype.Object()'
0023  <-Source: line: 'pbnCambiarEjercicioActual = qsatype.Object()'
0023 <--Class: line: 'pbnCambiarEjercicioActual = qsatype.Object()'
0023<---Source: line: 'pbnCambiarEjercicioActual = qsatype.Object()'
0024   DeclarationBlock: end-gen
0024   DeclarationBlock: begin-gen
0024    Variable: begin-gen
0024     Variable: expr: 'bloqueoProvincia'
0024     Variable: expr: '='
0024     Variable: expr: 'qsatype.Boolean()'
0024    Variable: end-gen
0024    DeclarationBlock: line: 'bloqueoProvincia = qsatype.Boolean()'
0024  <-Source: line: 'bloqueoProvincia = qsatype.Boolean()'
0024 <--Class: line: 'bloqueoProvincia = qsatype.Boolean()'
0024<---Source: line: 'bloqueoProvincia = qsatype.Boolean()'
0025   DeclarationBlock: end-gen
0025   Function: begin-gen
0025    Variable: begin-gen
0025     Variable: expr: 'context'
0025    Variable: end-gen
0025    Function: line: 'def __init__(self, context = None):'
0025  <-Source: line: 'def __init__(self, context = None):'
0025 <--Class: line: 'def __init__(self, context = None):'
0025<---Source: line: 'def __init__(self, context = None):'
0026    Function: begin: 'block-def-__init__'
0026  <-Source: begin: 'block-def-__init__'
0026 <--Class: begin: 'block-def-__init__'
0026<---Source: begin: 'block-def-__init__'
0026    Source: begin-gen
0026     InstructionCall: begin-gen
0026      FunctionCall: begin-gen
0026       Value: begin-gen
0026        Identifier: begin-gen
0026         Identifier: expr: 'context'
0026       <-Value: expr: 'context'
0026        Identifier: end-gen
0026       Value: end-gen
0026       FunctionCall: expr: 'super(oficial, self).__init__(context)'
0026      FunctionCall: end-gen
0026      InstructionCall: line: 'super(oficial, self).__init__(context)'
0026    <-Source: line: 'super(oficial, self).__init__(context)'
0026   <--Function: line: 'super(oficial, self).__init__(context)'
0026  <---Source: line: 'super(oficial, self).__init__(context)'
0026 <----Class: line: 'super(oficial, self).__init__(context)'
0026<-----Source: line: 'super(oficial, self).__init__(context)'
0027     InstructionCall: end-gen
0027    Source: end-gen
0027    Function: end: 'block-def-__init__'
0027  <-Source: end: 'block-def-__init__'
0027 <--Class: end: 'block-def-__init__'
0027<---Source: end: 'block-def-__init__'
0028   Function: end-gen
0028   Function: begin-gen
0028    Function: line: 'def pbnCambiarEjercicioActual_clicked(self):'
0028  <-Source: line: 'def pbnCambiarEjercicioActual_clicked(self):'
0028 <--Class: line: 'def pbnCambiarEjercicioActual_clicked(self):'
0028<---Source: line: 'def pbnCambiarEjercicioActual_clicked(self):'
0029    Function: begin: 'block-def-pbnCambiarEjercicioActual_clicked'
0029  <-Source: begin: 'block-def-pbnCambiarEjercicioActual_clicked'
0029 <--Class: begin: 'block-def-pbnCambiarEjercicioActual_clicked'
0029<---Source: begin: 'block-def-pbnCambiarEjercicioActual_clicked'
0029    Source: begin-gen
0029     InstructionFlow: begin-gen
0029      Value: begin-gen
0029       Member: begin-gen
0029        Identifier: begin-gen
0029         Identifier: expr: 'self'
0029        Identifier: end-gen
0029        Identifier: begin-gen
0029         Identifier: expr: 'ctx'
0029        Identifier: end-gen
0029        FunctionCall: begin-gen
0029         FunctionCall: expr: 'oficial_pbnCambiarEjercicioActual_clicked()'
0029        FunctionCall: end-gen
0029        Member: expr: 'self.ctx.oficial_pbnCambiarEjercicioActual_clicked()'
0029      <-Value: expr: 'self.ctx.oficial_pbnCambiarEjercicioActual_clicked()'
0029       Member: end-gen
0029      Value: end-gen
0029      InstructionFlow: line: 'return self.ctx.oficial_pbnCambiarEjercicioActual_clicked()'
0029    <-Source: line: 'return self.ctx.oficial_pbnCambiarEjercicioActual_clicked()'
0029   <--Function: line: 'return self.ctx.oficial_pbnCambiarEjercicioActual_clicked()'
0029  <---Source: line: 'return self.ctx.oficial_pbnCambiarEjercicioActual_clicked()'
0029 <----Class: line: 'return self.ctx.oficial_pbnCambiarEjercicioActual_clicked()'
0029<-----Source: line: 'return self.ctx.oficial_pbnCambiarEjercicioActual_clicked()'
0030     InstructionFlow: end-gen
0030    Source: end-gen
0030    Function: end: 'block-def-pbnCambiarEjercicioActual_clicked'
0030  <-Source: end: 'block-def-pbnCambiarEjercicioActual_clicked'
0030 <--Class: end: 'block-def-pbnCambiarEjercicioActual_clicked'
0030<---Source: end: 'block-def-pbnCambiarEjercicioActual_clicked'
0031   Function: end-gen
0031   Function: begin-gen
0031    Function: line: 'def mostrarEjercicioActual(self):'
0031  <-Source: line: 'def mostrarEjercicioActual(self):'
0031 <--Class: line: 'def mostrarEjercicioActual(self):'
0031<---Source: line: 'def mostrarEjercicioActual(self):'
0032    Function: begin: 'block-def-mostrarEjercicioActual'
0032  <-Source: begin: 'block-def-mostrarEjercicioActual'
0032 <--Class: begin: 'block-def-mostrarEjercicioActual'
0032<---Source: begin: 'block-def-mostrarEjercicioActual'
0032    Source: begin-gen
0032     InstructionFlow: begin-gen
0032      Value: begin-gen
0032       Member: begin-gen
0032        Identifier: begin-gen
0032         Identifier: expr: 'self'
0032        Identifier: end-gen
0032        Identifier: begin-gen
0032         Identifier: expr: 'ctx'
0032        Identifier: end-gen
0032        FunctionCall: begin-gen
0032         FunctionCall: expr: 'oficial_mostrarEjercicioActual()'
0032        FunctionCall: end-gen
0032        Member: expr: 'self.ctx.oficial_mostrarEjercicioActual()'
0032      <-Value: expr: 'self.ctx.oficial_mostrarEjercicioActual()'
0032       Member: end-gen
0032      Value: end-gen
0032      InstructionFlow: line: 'return self.ctx.oficial_mostrarEjercicioActual()'
0032    <-Source: line: 'return self.ctx.oficial_mostrarEjercicioActual()'
0032   <--Function: line: 'return self.ctx.oficial_mostrarEjercicioActual()'
0032  <---Source: line: 'return self.ctx.oficial_mostrarEjercicioActual()'
0032 <----Class: line: 'return self.ctx.oficial_mostrarEjercicioActual()'
0032<-----Source: line: 'return self.ctx.oficial_mostrarEjercicioActual()'
0033     InstructionFlow: end-gen
0033    Source: end-gen
0033    Function: end: 'block-def-mostrarEjercicioActual'
0033  <-Source: end: 'block-def-mostrarEjercicioActual'
0033 <--Class: end: 'block-def-mostrarEjercicioActual'
0033<---Source: end: 'block-def-mostrarEjercicioActual'
0034   Function: end-gen
0034   Function: begin-gen
0034    Function: line: 'def cambiarEjercicioActual(self):'
0034  <-Source: line: 'def cambiarEjercicioActual(self):'
0034 <--Class: line: 'def cambiarEjercicioActual(self):'
0034<---Source: line: 'def cambiarEjercicioActual(self):'
0035    Function: begin: 'block-def-cambiarEjercicioActual'
0035  <-Source: begin: 'block-def-cambiarEjercicioActual'
0035 <--Class: begin: 'block-def-cambiarEjercicioActual'
0035<---Source: begin: 'block-def-cambiarEjercicioActual'
0035    Source: begin-gen
0035     InstructionFlow: begin-gen
0035      Value: begin-gen
0035       Member: begin-gen
0035        Identifier: begin-gen
0035         Identifier: expr: 'self'
0035        Identifier: end-gen
0035        Identifier: begin-gen
0035         Identifier: expr: 'ctx'
0035        Identifier: end-gen
0035        FunctionCall: begin-gen
0035         FunctionCall: expr: 'oficial_cambiarEjercicioActual()'
0035        FunctionCall: end-gen
0035        Member: expr: 'self.ctx.oficial_cambiarEjercicioActual()'
0035      <-Value: expr: 'self.ctx.oficial_cambiarEjercicioActual()'
0035       Member: end-gen
0035      Value: end-gen
0035      InstructionFlow: line: 'return self.ctx.oficial_cambiarEjercicioActual()'
0035    <-Source: line: 'return self.ctx.oficial_cambiarEjercicioActual()'
0035   <--Function: line: 'return self.ctx.oficial_cambiarEjercicioActual()'
0035  <---Source: line: 'return self.ctx.oficial_cambiarEjercicioActual()'
0035 <----Class: line: 'return self.ctx.oficial_cambiarEjercicioActual()'
0035<-----Source: line: 'return self.ctx.oficial_cambiarEjercicioActual()'
0036     InstructionFlow: end-gen
0036    Source: end-gen
0036    Function: end: 'block-def-cambiarEjercicioActual'
0036  <-Source: end: 'block-def-cambiarEjercicioActual'
0036 <--Class: end: 'block-def-cambiarEjercicioActual'
0036<---Source: end: 'block-def-cambiarEjercicioActual'
0037   Function: end-gen
0037   Function: begin-gen
0037    Variable: begin-gen
0037     Variable: expr: 'fN'
0037    Variable: end-gen
0037    Function: line: 'def bufferChanged(self, fN = None):'
0037  <-Source: line: 'def bufferChanged(self, fN = None):'
0037 <--Class: line: 'def bufferChanged(self, fN = None):'
0037<---Source: line: 'def bufferChanged(self, fN = None):'
0038    Function: begin: 'block-def-bufferChanged'
0038  <-Source: begin: 'block-def-bufferChanged'
0038 <--Class: begin: 'block-def-bufferChanged'
0038<---Source: begin: 'block-def-bufferChanged'
0038    Source: begin-gen
0038     InstructionFlow: begin-gen
0038      Value: begin-gen
0038       Member: begin-gen
0038        Identifier: begin-gen
0038         Identifier: expr: 'self'
0038        Identifier: end-gen
0038        Identifier: begin-gen
0038         Identifier: expr: 'ctx'
0038        Identifier: end-gen
0038        FunctionCall: begin-gen
0038         Value: begin-gen
0038          Identifier: begin-gen
0038           Identifier: expr: 'fN'
0038         <-Value: expr: 'fN'
0038          Identifier: end-gen
0038         Value: end-gen
0038         FunctionCall: expr: 'oficial_bufferChanged(fN)'
0038        FunctionCall: end-gen
0038        Member: expr: 'self.ctx.oficial_bufferChanged(fN)'
0038      <-Value: expr: 'self.ctx.oficial_bufferChanged(fN)'
0038       Member: end-gen
0038      Value: end-gen
0038      InstructionFlow: line: 'return self.ctx.oficial_bufferChanged(fN)'
0038    <-Source: line: 'return self.ctx.oficial_bufferChanged(fN)'
0038   <--Function: line: 'return self.ctx.oficial_bufferChanged(fN)'
0038  <---Source: line: 'return self.ctx.oficial_bufferChanged(fN)'
0038 <----Class: line: 'return self.ctx.oficial_bufferChanged(fN)'
0038<-----Source: line: 'return self.ctx.oficial_bufferChanged(fN)'
0039     InstructionFlow: end-gen
0039    Source: end-gen
0039    Function: end: 'block-def-bufferChanged'
0039  <-Source: end: 'block-def-bufferChanged'
0039 <--Class: end: 'block-def-bufferChanged'
0039<---Source: end: 'block-def-bufferChanged'
0040   Function: end-gen
0040  Source: end-gen
0040  Class: end: 'block-class-oficial'
0040<-Source: end: 'block-class-oficial'
0041 Class: end-gen
0041 Class: begin-gen
0041  Class: line: 'class navegador(oficial):'
0041<-Source: line: 'class navegador(oficial):'
0042  Class: begin: 'block-class-navegador'
0042<-Source: begin: 'block-class-navegador'
0042  Source: begin-gen
0042   Function: begin-gen
0042    Variable: begin-gen
0042     Variable: expr: 'context'
0042    Variable: end-gen
0042    Function: line: 'def __init__(self, context = None):'
0042  <-Source: line: 'def __init__(self, context = None):'
0042 <--Class: line: 'def __init__(self, context = None):'
0042<---Source: line: 'def __init__(self, context = None):'
0043    Function: begin: 'block-def-__init__'
0043  <-Source: begin: 'block-def-__init__'
0043 <--Class: begin: 'block-def-__init__'
0043<---Source: begin: 'block-def-__init__'
0043    Source: begin-gen
0043     InstructionCall: begin-gen
0043      FunctionCall: begin-gen
0043       Value: begin-gen
0043        Identifier: begin-gen
0043         Identifier: expr: 'context'
0043       <-Value: expr: 'context'
0043        Identifier: end-gen
0043       Value: end-gen
0043       FunctionCall: expr: 'super(navegador, self).__init__(context)'
0043      FunctionCall: end-gen
0043      InstructionCall: line: 'super(navegador, self).__init__(context)'
0043    <-Source: line: 'super(navegador, self).__init__(context)'
0043   <--Function: line: 'super(navegador, self).__init__(context)'
0043  <---Source: line: 'super(navegador, self).__init__(context)'
0043 <----Class: line: 'super(navegador, self).__init__(context)'
0043<-----Source: line: 'super(navegador, self).__init__(context)'
0044     InstructionCall: end-gen
0044    Source: end-gen
0044    Function: end: 'block-def-__init__'
0044  <-Source: end: 'block-def-__init__'
0044 <--Class: end: 'block-def-__init__'
0044<---Source: end: 'block-def-__init__'
0045   Function: end-gen
0045   Function: begin-gen
0045    Function: line: 'def init(self):'
0045  <-Source: line: 'def init(self):'
0045 <--Class: line: 'def init(self):'
0045<---Source: line: 'def init(self):'
0046    Function: begin: 'block-def-init'
0046  <-Source: begin: 'block-def-init'
0046 <--Class: begin: 'block-def-init'
0046<---Source: begin: 'block-def-init'
0046    Source: begin-gen
0046     InstructionFlow: begin-gen
0046      Value: begin-gen
0046       Member: begin-gen
0046        Identifier: begin-gen
0046         Identifier: expr: 'self'
0046        Identifier: end-gen
0046        Identifier: begin-gen
0046         Identifier: expr: 'ctx'
0046        Identifier: end-gen
0046        FunctionCall: begin-gen
0046         FunctionCall: expr: 'navegador_init()'
0046        FunctionCall: end-gen
0046        Member: expr: 'self.ctx.navegador_init()'
0046      <-Value: expr: 'self.ctx.navegador_init()'
0046       Member: end-gen
0046      Value: end-gen
0046      InstructionFlow: line: 'return self.ctx.navegador_init()'
0046    <-Source: line: 'return self.ctx.navegador_init()'
0046   <--Function: line: 'return self.ctx.navegador_init()'
0046  <---Source: line: 'return self.ctx.navegador_init()'
0046 <----Class: line: 'return self.ctx.navegador_init()'
0046<-----Source: line: 'return self.ctx.navegador_init()'
0047     InstructionFlow: end-gen
0047    Source: end-gen
0047    Function: end: 'block-def-init'
0047  <-Source: end: 'block-def-init'
0047 <--Class: end: 'block-def-init'
0047<---Source: end: 'block-def-init'
0048   Function: end-gen
0048   Function: begin-gen
0048    Function: line: 'def cambiarNavegador(self):'
0048  <-Source: line: 'def cambiarNavegador(self):'
0048 <--Class: line: 'def cambiarNavegador(self):'
0048<---Source: line: 'def cambiarNavegador(self):'
0049    Function: begin: 'block-def-cambiarNavegador'
0049  <-Source: begin: 'block-def-cambiarNavegador'
0049 <--Class: begin: 'block-def-cambiarNavegador'
0049<---Source: begin: 'block-def-cambiarNavegador'
0049    Source: begin-gen
0049     InstructionFlow: begin-gen
0049      Value: begin-gen
0049       Member: begin-gen
0049        Identifier: begin-gen
0049         Identifier: expr: 'self'
0049        Identifier: end-gen
0049        Identifier: begin-gen
0049         Identifier: expr: 'ctx'
0049        Identifier: end-gen
0049        FunctionCall: begin-gen
0049         FunctionCall: expr: 'navegador_cambiarNavegador()'
0049        FunctionCall: end-gen
0049        Member: expr: 'self.ctx.navegador_cambiarNavegador()'
0049      <-Value: expr: 'self.ctx.navegador_cambiarNavegador()'
0049       Member: end-gen
0049      Value: end-gen
0049      InstructionFlow: line: 'return self.ctx.navegador_cambiarNavegador()'
0049    <-Source: line: 'return self.ctx.navegador_cambiarNavegador()'
0049   <--Function: line: 'return self.ctx.navegador_cambiarNavegador()'
0049  <---Source: line: 'return self.ctx.navegador_cambiarNavegador()'
0049 <----Class: line: 'return self.ctx.navegador_cambiarNavegador()'
0049<-----Source: line: 'return self.ctx.navegador_cambiarNavegador()'
0050     InstructionFlow: end-gen
0050    Source: end-gen
0050    Function: end: 'block-def-cambiarNavegador'
0050  <-Source: end: 'block-def-cambiarNavegador'
0050 <--Class: end: 'block-def-cambiarNavegador'
0050<---Source: end: 'block-def-cambiarNavegador'
0051   Function: end-gen
0051  Source: end-gen
0051  Class: end: 'block-class-navegador'
0051<-Source: end: 'block-class-navegador'
0052 Class: end-gen
0052 Class: begin-gen
0052  Class: line: 'class envioMail(navegador):'
0052<-Source: line: 'class envioMail(navegador):'
0053  Class: begin: 'block-class-envioMail'
0053<-Source: begin: 'block-class-envioMail'
0053  Source: begin-gen
0053   Function: begin-gen
0053    Variable: begin-gen
0053     Variable: expr: 'context'
0053    Variable: end-gen
0053    Function: line: 'def __init__(self, context = None):'
0053  <-Source: line: 'def __init__(self, context = None):'
0053 <--Class: line: 'def __init__(self, context = None):'
0053<---Source: line: 'def __init__(self, context = None):'
0054    Function: begin: 'block-def-__init__'
0054  <-Source: begin: 'block-def-__init__'
0054 <--Class: begin: 'block-def-__init__'
0054<---Source: begin: 'block-def-__init__'
0054    Source: begin-gen
0054     InstructionCall: begin-gen
0054      FunctionCall: begin-gen
0054       Value: begin-gen
0054        Identifier: begin-gen
0054         Identifier: expr: 'context'
0054       <-Value: expr: 'context'
0054        Identifier: end-gen
0054       Value: end-gen
0054       FunctionCall: expr: 'super(envioMail, self).__init__(context)'
0054      FunctionCall: end-gen
0054      InstructionCall: line: 'super(envioMail, self).__init__(context)'
0054    <-Source: line: 'super(envioMail, self).__init__(context)'
0054   <--Function: line: 'super(envioMail, self).__init__(context)'
0054  <---Source: line: 'super(envioMail, self).__init__(context)'
0054 <----Class: line: 'super(envioMail, self).__init__(context)'
0054<-----Source: line: 'super(envioMail, self).__init__(context)'
0055     InstructionCall: end-gen
0055    Source: end-gen
0055    Function: end: 'block-def-__init__'
0055  <-Source: end: 'block-def-__init__'
0055 <--Class: end: 'block-def-__init__'
0055<---Source: end: 'block-def-__init__'
0056   Function: end-gen
0056   Function: begin-gen
0056    Function: line: 'def init(self):'
0056  <-Source: line: 'def init(self):'
0056 <--Class: line: 'def init(self):'
0056<---Source: line: 'def init(self):'
0057    Function: begin: 'block-def-init'
0057  <-Source: begin: 'block-def-init'
0057 <--Class: begin: 'block-def-init'
0057<---Source: begin: 'block-def-init'
0057    Source: begin-gen
0057     InstructionFlow: begin-gen
0057      Value: begin-gen
0057       Member: begin-gen
0057        Identifier: begin-gen
0057         Identifier: expr: 'self'
0057        Identifier: end-gen
0057        Identifier: begin-gen
0057         Identifier: expr: 'ctx'
0057        Identifier: end-gen
0057        FunctionCall: begin-gen
0057         FunctionCall: expr: 'envioMail_init()'
0057        FunctionCall: end-gen
0057        Member: expr: 'self.ctx.envioMail_init()'
0057      <-Value: expr: 'self.ctx.envioMail_init()'
0057       Member: end-gen
0057      Value: end-gen
0057      InstructionFlow: line: 'return self.ctx.envioMail_init()'
0057    <-Source: line: 'return self.ctx.envioMail_init()'
0057   <--Function: line: 'return self.ctx.envioMail_init()'
0057  <---Source: line: 'return self.ctx.envioMail_init()'
0057 <----Class: line: 'return self.ctx.envioMail_init()'
0057<-----Source: line: 'return self.ctx.envioMail_init()'
0058     InstructionFlow: end-gen
0058    Source: end-gen
0058    Function: end: 'block-def-init'
0058  <-Source: end: 'block-def-init'
0058 <--Class: end: 'block-def-init'
0058<---Source: end: 'block-def-init'
0059   Function: end-gen
0059   Function: begin-gen
0059    Function: line: 'def cambiarClienteCorreo(self):'
0059  <-Source: line: 'def cambiarClienteCorreo(self):'
0059 <--Class: line: 'def cambiarClienteCorreo(self):'
0059<---Source: line: 'def cambiarClienteCorreo(self):'
0060    Function: begin: 'block-def-cambiarClienteCorreo'
0060  <-Source: begin: 'block-def-cambiarClienteCorreo'
0060 <--Class: begin: 'block-def-cambiarClienteCorreo'
0060<---Source: begin: 'block-def-cambiarClienteCorreo'
0060    Source: begin-gen
0060     InstructionFlow: begin-gen
0060      Value: begin-gen
0060       Member: begin-gen
0060        Identifier: begin-gen
0060         Identifier: expr: 'self'
0060        Identifier: end-gen
0060        Identifier: begin-gen
0060         Identifier: expr: 'ctx'
0060        Identifier: end-gen
0060        FunctionCall: begin-gen
0060         FunctionCall: expr: 'envioMail_cambiarClienteCorreo()'
0060        FunctionCall: end-gen
0060        Member: expr: 'self.ctx.envioMail_cambiarClienteCorreo()'
0060      <-Value: expr: 'self.ctx.envioMail_cambiarClienteCorreo()'
0060       Member: end-gen
0060      Value: end-gen
0060      InstructionFlow: line: 'return self.ctx.envioMail_cambiarClienteCorreo()'
0060    <-Source: line: 'return self.ctx.envioMail_cambiarClienteCorreo()'
0060   <--Function: line: 'return self.ctx.envioMail_cambiarClienteCorreo()'
0060  <---Source: line: 'return self.ctx.envioMail_cambiarClienteCorreo()'
0060 <----Class: line: 'return self.ctx.envioMail_cambiarClienteCorreo()'
0060<-----Source: line: 'return self.ctx.envioMail_cambiarClienteCorreo()'
0061     InstructionFlow: end-gen
0061    Source: end-gen
0061    Function: end: 'block-def-cambiarClienteCorreo'
0061  <-Source: end: 'block-def-cambiarClienteCorreo'
0061 <--Class: end: 'block-def-cambiarClienteCorreo'
0061<---Source: end: 'block-def-cambiarClienteCorreo'
0062   Function: end-gen
0062   Function: begin-gen
0062    Function: line: 'def cambiarNombreCorreo(self):'
0062  <-Source: line: 'def cambiarNombreCorreo(self):'
0062 <--Class: line: 'def cambiarNombreCorreo(self):'
0062<---Source: line: 'def cambiarNombreCorreo(self):'
0063    Function: begin: 'block-def-cambiarNombreCorreo'
0063  <-Source: begin: 'block-def-cambiarNombreCorreo'
0063 <--Class: begin: 'block-def-cambiarNombreCorreo'
0063<---Source: begin: 'block-def-cambiarNombreCorreo'
0063    Source: begin-gen
0063     InstructionFlow: begin-gen
0063      Value: begin-gen
0063       Member: begin-gen
0063        Identifier: begin-gen
0063         Identifier: expr: 'self'
0063        Identifier: end-gen
0063        Identifier: begin-gen
0063         Identifier: expr: 'ctx'
0063        Identifier: end-gen
0063        FunctionCall: begin-gen
0063         FunctionCall: expr: 'envioMail_cambiarNombreCorreo()'
0063        FunctionCall: end-gen
0063        Member: expr: 'self.ctx.envioMail_cambiarNombreCorreo()'
0063      <-Value: expr: 'self.ctx.envioMail_cambiarNombreCorreo()'
0063       Member: end-gen
0063      Value: end-gen
0063      InstructionFlow: line: 'return self.ctx.envioMail_cambiarNombreCorreo()'
0063    <-Source: line: 'return self.ctx.envioMail_cambiarNombreCorreo()'
0063   <--Function: line: 'return self.ctx.envioMail_cambiarNombreCorreo()'
0063  <---Source: line: 'return self.ctx.envioMail_cambiarNombreCorreo()'
0063 <----Class: line: 'return self.ctx.envioMail_cambiarNombreCorreo()'
0063<-----Source: line: 'return self.ctx.envioMail_cambiarNombreCorreo()'
0064     InstructionFlow: end-gen
0064    Source: end-gen
0064    Function: end: 'block-def-cambiarNombreCorreo'
0064  <-Source: end: 'block-def-cambiarNombreCorreo'
0064 <--Class: end: 'block-def-cambiarNombreCorreo'
0064<---Source: end: 'block-def-cambiarNombreCorreo'
0065   Function: end-gen
0065   Function: begin-gen
0065    Function: line: 'def cambiarDirIntermedia(self):'
0065  <-Source: line: 'def cambiarDirIntermedia(self):'
0065 <--Class: line: 'def cambiarDirIntermedia(self):'
0065<---Source: line: 'def cambiarDirIntermedia(self):'
0066    Function: begin: 'block-def-cambiarDirIntermedia'
0066  <-Source: begin: 'block-def-cambiarDirIntermedia'
0066 <--Class: begin: 'block-def-cambiarDirIntermedia'
0066<---Source: begin: 'block-def-cambiarDirIntermedia'
0066    Source: begin-gen
0066     InstructionFlow: begin-gen
0066      Value: begin-gen
0066       Member: begin-gen
0066        Identifier: begin-gen
0066         Identifier: expr: 'self'
0066        Identifier: end-gen
0066        Identifier: begin-gen
0066         Identifier: expr: 'ctx'
0066        Identifier: end-gen
0066        FunctionCall: begin-gen
0066         FunctionCall: expr: 'envioMail_cambiarDirIntermedia()'
0066        FunctionCall: end-gen
0066        Member: expr: 'self.ctx.envioMail_cambiarDirIntermedia()'
0066      <-Value: expr: 'self.ctx.envioMail_cambiarDirIntermedia()'
0066       Member: end-gen
0066      Value: end-gen
0066      InstructionFlow: line: 'return self.ctx.envioMail_cambiarDirIntermedia()'
0066    <-Source: line: 'return self.ctx.envioMail_cambiarDirIntermedia()'
0066   <--Function: line: 'return self.ctx.envioMail_cambiarDirIntermedia()'
0066  <---Source: line: 'return self.ctx.envioMail_cambiarDirIntermedia()'
0066 <----Class: line: 'return self.ctx.envioMail_cambiarDirIntermedia()'
0066<-----Source: line: 'return self.ctx.envioMail_cambiarDirIntermedia()'
0067     InstructionFlow: end-gen
0067    Source: end-gen
0067    Function: end: 'block-def-cambiarDirIntermedia'
0067  <-Source: end: 'block-def-cambiarDirIntermedia'
0067 <--Class: end: 'block-def-cambiarDirIntermedia'
0067<---Source: end: 'block-def-cambiarDirIntermedia'
0068   Function: end-gen
0068  Source: end-gen
0068  Class: end: 'block-class-envioMail'
0068<-Source: end: 'block-class-envioMail'
0069 Class: end-gen
0069 Class: begin-gen
0069  Class: line: 'class head(envioMail):'
0069<-Source: line: 'class head(envioMail):'
0070  Class: begin: 'block-class-head'
0070<-Source: begin: 'block-class-head'
0070  Source: begin-gen
0070   Function: begin-gen
0070    Variable: begin-gen
0070     Variable: expr: 'context'
0070    Variable: end-gen
0070    Function: line: 'def __init__(self, context = None):'
0070  <-Source: line: 'def __init__(self, context = None):'
0070 <--Class: line: 'def __init__(self, context = None):'
0070<---Source: line: 'def __init__(self, context = None):'
0071    Function: begin: 'block-def-__init__'
0071  <-Source: begin: 'block-def-__init__'
0071 <--Class: begin: 'block-def-__init__'
0071<---Source: begin: 'block-def-__init__'
0071    Source: begin-gen
0071     InstructionCall: begin-gen
0071      FunctionCall: begin-gen
0071       Value: begin-gen
0071        Identifier: begin-gen
0071         Identifier: expr: 'context'
0071       <-Value: expr: 'context'
0071        Identifier: end-gen
0071       Value: end-gen
0071       FunctionCall: expr: 'super(head, self).__init__(context)'
0071      FunctionCall: end-gen
0071      InstructionCall: line: 'super(head, self).__init__(context)'
0071    <-Source: line: 'super(head, self).__init__(context)'
0071   <--Function: line: 'super(head, self).__init__(context)'
0071  <---Source: line: 'super(head, self).__init__(context)'
0071 <----Class: line: 'super(head, self).__init__(context)'
0071<-----Source: line: 'super(head, self).__init__(context)'
0072     InstructionCall: end-gen
0072    Source: end-gen
0072    Function: end: 'block-def-__init__'
0072  <-Source: end: 'block-def-__init__'
0072 <--Class: end: 'block-def-__init__'
0072<---Source: end: 'block-def-__init__'
0073   Function: end-gen
0073  Source: end-gen
0073  Class: end: 'block-class-head'
0073<-Source: end: 'block-class-head'
0074 Class: end-gen
0074 Class: begin-gen
0074  Class: line: 'class ifaceCtx(head):'
0074<-Source: line: 'class ifaceCtx(head):'
0075  Class: begin: 'block-class-ifaceCtx'
0075<-Source: begin: 'block-class-ifaceCtx'
0075  Source: begin-gen
0075   Function: begin-gen
0075    Variable: begin-gen
0075     Variable: expr: 'context'
0075    Variable: end-gen
0075    Function: line: 'def __init__(self, context = None):'
0075  <-Source: line: 'def __init__(self, context = None):'
0075 <--Class: line: 'def __init__(self, context = None):'
0075<---Source: line: 'def __init__(self, context = None):'
0076    Function: begin: 'block-def-__init__'
0076  <-Source: begin: 'block-def-__init__'
0076 <--Class: begin: 'block-def-__init__'
0076<---Source: begin: 'block-def-__init__'
0076    Source: begin-gen
0076     InstructionCall: begin-gen
0076      FunctionCall: begin-gen
0076       Value: begin-gen
0076        Identifier: begin-gen
0076         Identifier: expr: 'context'
0076       <-Value: expr: 'context'
0076        Identifier: end-gen
0076       Value: end-gen
0076       FunctionCall: expr: 'super(ifaceCtx, self).__init__(context)'
0076      FunctionCall: end-gen
0076      InstructionCall: line: 'super(ifaceCtx, self).__init__(context)'
0076    <-Source: line: 'super(ifaceCtx, self).__init__(context)'
0076   <--Function: line: 'super(ifaceCtx, self).__init__(context)'
0076  <---Source: line: 'super(ifaceCtx, self).__init__(context)'
0076 <----Class: line: 'super(ifaceCtx, self).__init__(context)'
0076<-----Source: line: 'super(ifaceCtx, self).__init__(context)'
0077     InstructionCall: end-gen
0077    Source: end-gen
0077    Function: end: 'block-def-__init__'
0077  <-Source: end: 'block-def-__init__'
0077 <--Class: end: 'block-def-__init__'
0077<---Source: end: 'block-def-__init__'
0078   Function: end-gen
0078   Function: begin-gen
0078    Function: line: 'def pub_cambiarEjercicioActual(self):'
0078  <-Source: line: 'def pub_cambiarEjercicioActual(self):'
0078 <--Class: line: 'def pub_cambiarEjercicioActual(self):'
0078<---Source: line: 'def pub_cambiarEjercicioActual(self):'
0079    Function: begin: 'block-def-pub_cambiarEjercicioActual'
0079  <-Source: begin: 'block-def-pub_cambiarEjercicioActual'
0079 <--Class: begin: 'block-def-pub_cambiarEjercicioActual'
0079<---Source: begin: 'block-def-pub_cambiarEjercicioActual'
0079    Source: begin-gen
0079     InstructionFlow: begin-gen
0079      Value: begin-gen
0079       Member: begin-gen
0079        Identifier: begin-gen
0079         Identifier: expr: 'self'
0079        Identifier: end-gen
0079        FunctionCall: begin-gen
0079         FunctionCall: expr: 'cambiarEjercicioActual()'
0079        FunctionCall: end-gen
0079        Member: expr: 'self.cambiarEjercicioActual()'
0079      <-Value: expr: 'self.cambiarEjercicioActual()'
0079       Member: end-gen
0079      Value: end-gen
0079      InstructionFlow: line: 'return self.cambiarEjercicioActual()'
0079    <-Source: line: 'return self.cambiarEjercicioActual()'
0079   <--Function: line: 'return self.cambiarEjercicioActual()'
0079  <---Source: line: 'return self.cambiarEjercicioActual()'
0079 <----Class: line: 'return self.cambiarEjercicioActual()'
0079<-----Source: line: 'return self.cambiarEjercicioActual()'
0080     InstructionFlow: end-gen
0080    Source: end-gen
0080    Function: end: 'block-def-pub_cambiarEjercicioActual'
0080  <-Source: end: 'block-def-pub_cambiarEjercicioActual'
0080 <--Class: end: 'block-def-pub_cambiarEjercicioActual'
0080<---Source: end: 'block-def-pub_cambiarEjercicioActual'
0081   Function: end-gen
0081  Source: end-gen
0081  Class: end: 'block-class-ifaceCtx'
0081<-Source: end: 'block-class-ifaceCtx'
0082 Class: end-gen
0082 Class: begin-gen
0082  Class: line: 'class FormInternalObj(qsatype.FormDBWidget):'
0082<-Source: line: 'class FormInternalObj(qsatype.FormDBWidget):'
0083  Class: begin: 'block-class-FormInternalObj'
0083<-Source: begin: 'block-class-FormInternalObj'
0083  Source: begin-gen
0083   Function: begin-gen
0083    Function: line: 'def _class_init(self):'
0083  <-Source: line: 'def _class_init(self):'
0083 <--Class: line: 'def _class_init(self):'
0083<---Source: line: 'def _class_init(self):'
0084    Function: begin: 'block-def-_class_init'
0084  <-Source: begin: 'block-def-_class_init'
0084 <--Class: begin: 'block-def-_class_init'
0084<---Source: begin: 'block-def-_class_init'
0084    Source: begin-gen
0084     DeclarationBlock: begin-gen
0084      Variable: begin-gen
0084       Variable: expr: 'iface'
0084       Variable: expr: '='
0084       Value: begin-gen
0084        New: begin-gen
0084         FunctionCall: begin-gen
0084          Value: begin-gen
0084           Identifier: begin-gen
0084            Identifier: expr: 'self'
0084          <-Value: expr: 'self'
0084           Identifier: end-gen
0084          Value: end-gen
0084          FunctionCall: expr: 'ifaceCtx(self)'
0084        <-New: expr: 'ifaceCtx(self)'
0084       <--Value: expr: 'ifaceCtx(self)'
0084      <---Variable: expr: 'ifaceCtx(self)'
0084         FunctionCall: end-gen
0084        New: end-gen
0084       Value: end-gen
0084      Variable: end-gen
0084      DeclarationBlock: line: 'self.iface = ifaceCtx(self)'
0084    <-Source: line: 'self.iface = ifaceCtx(self)'
0084   <--Function: line: 'self.iface = ifaceCtx(self)'
0084  <---Source: line: 'self.iface = ifaceCtx(self)'
0084 <----Class: line: 'self.iface = ifaceCtx(self)'
0084<-----Source: line: 'self.iface = ifaceCtx(self)'
0085     DeclarationBlock: end-gen
0085    Source: end-gen
0085    Function: end: 'block-def-_class_init'
0085  <-Source: end: 'block-def-_class_init'
0085 <--Class: end: 'block-def-_class_init'
0085<---Source: end: 'block-def-_class_init'
0086   Function: end-gen
0086   Function: begin-gen
0086    Function: line: 'def interna_init(self):'
0086  <-Source: line: 'def interna_init(self):'
0086 <--Class: line: 'def interna_init(self):'
0086<---Source: line: 'def interna_init(self):'
0087    Function: begin: 'block-def-interna_init'
0087  <-Source: begin: 'block-def-interna_init'
0087 <--Class: begin: 'block-def-interna_init'
0087<---Source: begin: 'block-def-interna_init'
0087    Source: begin-gen
0087     DeclarationBlock: begin-gen
0087      Variable: begin-gen
0087       Variable: expr: 'cursor'
0087       Variable: expr: '='
0087       Value: begin-gen
0087        Member: begin-gen
0087         Identifier: begin-gen
0087          Identifier: expr: 'self'
0087         Identifier: end-gen
0087         FunctionCall: begin-gen
0087          FunctionCall: expr: 'cursor()'
0087         FunctionCall: end-gen
0087         Member: expr: 'self.cursor()'
0087       <-Value: expr: 'self.cursor()'
0087      <--Variable: expr: 'self.cursor()'
0087        Member: end-gen
0087       Value: end-gen
0087      Variable: end-gen
0087      DeclarationBlock: line: 'cursor = self.cursor()'
0087    <-Source: line: 'cursor = self.cursor()'
0087   <--Function: line: 'cursor = self.cursor()'
0087  <---Source: line: 'cursor = self.cursor()'
0087 <----Class: line: 'cursor = self.cursor()'
0087<-----Source: line: 'cursor = self.cursor()'
0088     DeclarationBlock: end-gen
0088     InstructionUpdate: begin-gen
0088      Member: begin-gen
0088       Identifier: begin-gen
0088        Identifier: expr: 'self'
0088       Identifier: end-gen
0088       Identifier: begin-gen
0088        Identifier: expr: 'iface'
0088       Identifier: end-gen
0088       Identifier: begin-gen
0088        Identifier: expr: 'pbnCambiarEjercicioActual'
0088       Identifier: end-gen
0088       Member: expr: 'self.iface.pbnCambiarEjercicioActual'
0088      Member: end-gen
0088      OpUpdate: begin-gen
0088       OpUpdate: expr: '='
0088      OpUpdate: end-gen
0088      Value: begin-gen
0088       Member: begin-gen
0088        Identifier: begin-gen
0088         Identifier: expr: 'self'
0088        Identifier: end-gen
0088        FunctionCall: begin-gen
0088         Value: begin-gen
0088          Constant: begin-gen
0088           Constant: ctype: 'String' -> 'pbnCambiarEjercicioActual'
0088           Constant: expr: 'u"pbnCambiarEjercicioActual"'
0088         <-Value: expr: 'u"pbnCambiarEjercicioActual"'
0088          Constant: end-gen
0088         Value: end-gen
0088         FunctionCall: expr: 'child(u"pbnCambiarEjercicioActual")'
0088        FunctionCall: end-gen
0088        Member: expr: 'self.child(u"pbnCambiarEjercicioActual")'
0088      <-Value: expr: 'self.child(u"pbnCambiarEjercicioActual")'
0088       Member: end-gen
0088      Value: end-gen
0088      InstructionUpdate: line: 'self.iface.pbnCambiarEjercicioActual = self.child(u"pbnCambiarEjercicioActual")'
0088    <-Source: line: 'self.iface.pbnCambiarEjercicioActual = self.child(u"pbnCambiarEjercicioActual")'
0088   <--Function: line: 'self.iface.pbnCambiarEjercicioActual = self.child(u"pbnCambiarEjercicioActual")'
0088  <---Source: line: 'self.iface.pbnCambiarEjercicioActual = self.child(u"pbnCambiarEjercicioActual")'
0088 <----Class: line: 'self.iface.pbnCambiarEjercicioActual = self.child(u"pbnCambiarEjercicioActual")'
0088<-----Source: line: 'self.iface.pbnCambiarEjercicioActual = self.child(u"pbnCambiarEjercicioActual")'
0089     InstructionUpdate: end-gen
0089     InstructionUpdate: begin-gen
0089      Member: begin-gen
0089       Identifier: begin-gen
0089        Identifier: expr: 'self'
0089       Identifier: end-gen
0089       Identifier: begin-gen
0089        Identifier: expr: 'iface'
0089       Identifier: end-gen
0089       Identifier: begin-gen
0089        Identifier: expr: 'bloqueoProvincia'
0089       Identifier: end-gen
0089       Member: expr: 'self.iface.bloqueoProvincia'
0089      Member: end-gen
0089      OpUpdate: begin-gen
0089       OpUpdate: expr: '='
0089      OpUpdate: end-gen
0089      Value: begin-gen
0089       Identifier: begin-gen
0089        Identifier: expr: 'False'
0089      <-Value: expr: 'False'
0089       Identifier: end-gen
0089      Value: end-gen
0089      InstructionUpdate: line: 'self.iface.bloqueoProvincia = False'
0089    <-Source: line: 'self.iface.bloqueoProvincia = False'
0089   <--Function: line: 'self.iface.bloqueoProvincia = False'
0089  <---Source: line: 'self.iface.bloqueoProvincia = False'
0089 <----Class: line: 'self.iface.bloqueoProvincia = False'
0089<-----Source: line: 'self.iface.bloqueoProvincia = False'
0090     InstructionUpdate: end-gen
0090     InstructionCall: begin-gen
0090      FunctionCall: begin-gen
0090       Value: begin-gen
0090        Member: begin-gen
0090         Identifier: begin-gen
0090          Identifier: expr: 'self'
0090         Identifier: end-gen
0090         Identifier: begin-gen
0090          Identifier: expr: 'iface'
0090         Identifier: end-gen
0090         Identifier: begin-gen
0090          Identifier: expr: 'pbnCambiarEjercicioActual'
0090         Identifier: end-gen
0090         Member: expr: 'self.iface.pbnCambiarEjercicioActual'
0090       <-Value: expr: 'self.iface.pbnCambiarEjercicioActual'
0090        Member: end-gen
0090       Value: end-gen
0090       Value: begin-gen
0090        Constant: begin-gen
0090         Constant: ctype: 'String' -> 'clicked()'
0090         Constant: expr: 'u"clicked()"'
0090       <-Value: expr: 'u"clicked()"'
0090        Constant: end-gen
0090       Value: end-gen
0090       Value: begin-gen
0090        Identifier: begin-gen
0090         Identifier: expr: 'self'
0090       <-Value: expr: 'self'
0090        Identifier: end-gen
0090       Value: end-gen
0090       Value: begin-gen
0090        Constant: begin-gen
0090         Constant: ctype: 'String' -> 'iface.pbnCambiarEjercicioActual_clicked'
0090         Constant: expr: 'u"iface.pbnCambiarEjercicioActual_clicked"'
0090       <-Value: expr: 'u"iface.pbnCambiarEjercicioActual_clicked"'
0090        Constant: end-gen
0090       Value: end-gen
0090       FunctionCall: expr: 'connect(self.iface.pbnCambiarEjercicioActual, u"clicked()", self, u"iface.pbnCambiarEjercicioActual_clicked")'
0090      FunctionCall: end-gen
0090      InstructionCall: line: 'connect(self.iface.pbnCambiarEjercicioActual, u"clicked()", self, u"iface.pbnCambiarEjercicioActual_clicked")'
0090    <-Source: line: 'connect(self.iface.pbnCambiarEjercicioActual, u"clicked()", self, u"iface.pbnCambiarEjercicioActual_clicked")'
0090   <--Function: line: 'connect(self.iface.pbnCambiarEjercicioActual, u"clicked()", self, u"iface.pbnCambiarEjercicioActual_clicked")'
0090  <---Source: line: 'connect(self.iface.pbnCambiarEjercicioActual, u"clicked()", self, u"iface.pbnCambiarEjercicioActual_clicked")'
0090 <----Class: line: 'connect(self.iface.pbnCambiarEjercicioActual, u"clicked()", self, u"iface.pbnCambiarEjercicioActual_clicked")'
0090<-----Source: line: 'connect(self.iface.pbnCambiarEjercicioActual, u"clicked()", self, u"iface.pbnCambiarEjercicioActual_clicked")'
0091     InstructionCall: end-gen
0091     InstructionCall: begin-gen
0091      FunctionCall: begin-gen
0091       Value: begin-gen
0091        Identifier: begin-gen
0091         Identifier: expr: 'cursor'
0091       <-Value: expr: 'cursor'
0091        Identifier: end-gen
0091       Value: end-gen
0091       Value: begin-gen
0091        Constant: begin-gen
0091         Constant: ctype: 'String' -> 'bufferChanged(QString)'
0091         Constant: expr: 'u"bufferChanged(QString)"'
0091       <-Value: expr: 'u"bufferChanged(QString)"'
0091        Constant: end-gen
0091       Value: end-gen
0091       Value: begin-gen
0091        Identifier: begin-gen
0091         Identifier: expr: 'self'
0091       <-Value: expr: 'self'
0091        Identifier: end-gen
0091       Value: end-gen
0091       Value: begin-gen
0091        Constant: begin-gen
0091         Constant: ctype: 'String' -> 'iface.bufferChanged'
0091         Constant: expr: 'u"iface.bufferChanged"'
0091       <-Value: expr: 'u"iface.bufferChanged"'
0091        Constant: end-gen
0091       Value: end-gen
0091       FunctionCall: expr: 'connect(cursor, u"bufferChanged(QString)", self, u"iface.bufferChanged")'
0091      FunctionCall: end-gen
0091      InstructionCall: line: 'connect(cursor, u"bufferChanged(QString)", self, u"iface.bufferChanged")'
0091    <-Source: line: 'connect(cursor, u"bufferChanged(QString)", self, u"iface.bufferChanged")'
0091   <--Function: line: 'connect(cursor, u"bufferChanged(QString)", self, u"iface.bufferChanged")'
0091  <---Source: line: 'connect(cursor, u"bufferChanged(QString)", self, u"iface.bufferChanged")'
0091 <----Class: line: 'connect(cursor, u"bufferChanged(QString)", self, u"iface.bufferChanged")'
0091<-----Source: line: 'connect(cursor, u"bufferChanged(QString)", self, u"iface.bufferChanged")'
0092     InstructionCall: end-gen
0092     If: begin-gen
0092      Value: begin-gen
0092       OpUnary: begin-gen
0092        OpUnary: expr: 'not'
0092      <-Value: expr: 'not'
0092        Member: begin-gen
0092         Identifier: begin-gen
0092          Identifier: expr: 'flfactppal'
0092         Identifier: end-gen
0092         Identifier: begin-gen
0092          Identifier: expr: 'iface'
0092         Identifier: end-gen
0092         FunctionCall: begin-gen
0092          FunctionCall: expr: 'pub_ejercicioActual()'
0092         FunctionCall: end-gen
0092         Member: expr: 'flfactppal.iface.pub_ejercicioActual()'
0092       <-OpUnary: expr: 'flfactppal.iface.pub_ejercicioActual()'
0092      <--Value: expr: 'flfactppal.iface.pub_ejercicioActual()'
0092        Member: end-gen
0092       OpUnary: end-gen
0092      Value: end-gen
0092      If: line: 'if not flfactppal.iface.pub_ejercicioActual():'
0092    <-Source: line: 'if not flfactppal.iface.pub_ejercicioActual():'
0092   <--Function: line: 'if not flfactppal.iface.pub_ejercicioActual():'
0092  <---Source: line: 'if not flfactppal.iface.pub_ejercicioActual():'
0092 <----Class: line: 'if not flfactppal.iface.pub_ejercicioActual():'
0092<-----Source: line: 'if not flfactppal.iface.pub_ejercicioActual():'
0093      If: begin: 'block-if'
0093    <-Source: begin: 'block-if'
0093   <--Function: begin: 'block-if'
0093  <---Source: begin: 'block-if'
0093 <----Class: begin: 'block-if'
0093<-----Source: begin: 'block-if'
0093      Source: begin-gen
0093       InstructionCall: begin-gen
0093        Member: begin-gen
0093         Identifier: begin-gen
0093          Identifier: expr: 'flfactppal'
0093         Identifier: end-gen
0093         Identifier: begin-gen
0093          Identifier: expr: 'iface'
0093         Identifier: end-gen
0093         FunctionCall: begin-gen
0093          Value: begin-gen
0093           Member: begin-gen
0093            Identifier: begin-gen
0093             Identifier: expr: 'self'
0093            Identifier: end-gen
0093            FunctionCall: begin-gen
0093             FunctionCall: expr: 'cursor()'
0093            FunctionCall: end-gen
0093            FunctionCall: begin-gen
0093             Value: begin-gen
0093              Constant: begin-gen
0093               Constant: ctype: 'String' -> 'codejercicio'
0093               Constant: expr: 'u"codejercicio"'
0093             <-Value: expr: 'u"codejercicio"'
0093              Constant: end-gen
0093             Value: end-gen
0093             FunctionCall: expr: 'valueBuffer(u"codejercicio")'
0093            FunctionCall: end-gen
0093            Member: expr: 'self.cursor().valueBuffer(u"codejercicio")'
0093          <-Value: expr: 'self.cursor().valueBuffer(u"codejercicio")'
0093           Member: end-gen
0093          Value: end-gen
0093          FunctionCall: expr: 'pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093         FunctionCall: end-gen
0093         Member: expr: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093        Member: end-gen
0093        InstructionCall: line: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093      <-Source: line: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093     <--If: line: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093    <---Source: line: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093   <----Function: line: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093  <-----Source: line: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093 <------Class: line: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0093<-------Source: line: 'flfactppal.iface.pub_cambiarEjercicioActual(self.cursor().valueBuffer(u"codejercicio"))'
0094       InstructionCall: end-gen
0094      Source: end-gen
0094      If: end: 'block-if'
0094    <-Source: end: 'block-if'
0094   <--Function: end: 'block-if'
0094  <---Source: end: 'block-if'
0094 <----Class: end: 'block-if'
0094<-----Source: end: 'block-if'
0094     If: end-gen
0094     InstructionCall: begin-gen
0094      Member: begin-gen
0094       Identifier: begin-gen
0094        Identifier: expr: 'self'
0094       Identifier: end-gen
0094       FunctionCall: begin-gen
0094        Value: begin-gen
0094         Constant: begin-gen
0094          Constant: ctype: 'String' -> 'fdbCodEjercicio'
0094          Constant: expr: 'u"fdbCodEjercicio"'
0094        <-Value: expr: 'u"fdbCodEjercicio"'
0094         Constant: end-gen
0094        Value: end-gen
0094        FunctionCall: expr: 'child(u"fdbCodEjercicio")'
0094       FunctionCall: end-gen
0094       FunctionCall: begin-gen
0094        FunctionCall: expr: 'close()'
0094       FunctionCall: end-gen
0094       Member: expr: 'self.child(u"fdbCodEjercicio").close()'
0094      Member: end-gen
0094      InstructionCall: line: 'self.child(u"fdbCodEjercicio").close()'
0094    <-Source: line: 'self.child(u"fdbCodEjercicio").close()'
0094   <--Function: line: 'self.child(u"fdbCodEjercicio").close()'
0094  <---Source: line: 'self.child(u"fdbCodEjercicio").close()'
0094 <----Class: line: 'self.child(u"fdbCodEjercicio").close()'
0094<-----Source: line: 'self.child(u"fdbCodEjercicio").close()'
0095     InstructionCall: end-gen
0095     InstructionCall: begin-gen
0095      Member: begin-gen
0095       Identifier: begin-gen
0095        Identifier: expr: 'self'
0095       Identifier: end-gen
0095       FunctionCall: begin-gen
0095        Value: begin-gen
0095         Constant: begin-gen
0095          Constant: ctype: 'String' -> 'fdbNombreEjercicio'
0095          Constant: expr: 'u"fdbNombreEjercicio"'
0095        <-Value: expr: 'u"fdbNombreEjercicio"'
0095         Constant: end-gen
0095        Value: end-gen
0095        FunctionCall: expr: 'child(u"fdbNombreEjercicio")'
0095       FunctionCall: end-gen
0095       FunctionCall: begin-gen
0095        FunctionCall: expr: 'close()'
0095       FunctionCall: end-gen
0095       Member: expr: 'self.child(u"fdbNombreEjercicio").close()'
0095      Member: end-gen
0095      InstructionCall: line: 'self.child(u"fdbNombreEjercicio").close()'
0095    <-Source: line: 'self.child(u"fdbNombreEjercicio").close()'
0095   <--Function: line: 'self.child(u"fdbNombreEjercicio").close()'
0095  <---Source: line: 'self.child(u"fdbNombreEjercicio").close()'
0095 <----Class: line: 'self.child(u"fdbNombreEjercicio").close()'
0095<-----Source: line: 'self.child(u"fdbNombreEjercicio").close()'
0096     InstructionCall: end-gen
0096     InstructionCall: begin-gen
0096      Member: begin-gen
0096       Identifier: begin-gen
0096        Identifier: expr: 'self'
0096       Identifier: end-gen
0096       Identifier: begin-gen
0096        Identifier: expr: 'iface'
0096       Identifier: end-gen
0096       FunctionCall: begin-gen
0096        FunctionCall: expr: 'mostrarEjercicioActual()'
0096       FunctionCall: end-gen
0096       Member: expr: 'self.iface.mostrarEjercicioActual()'
0096      Member: end-gen
0096      InstructionCall: line: 'self.iface.mostrarEjercicioActual()'
0096    <-Source: line: 'self.iface.mostrarEjercicioActual()'
0096   <--Function: line: 'self.iface.mostrarEjercicioActual()'
0096  <---Source: line: 'self.iface.mostrarEjercicioActual()'
0096 <----Class: line: 'self.iface.mostrarEjercicioActual()'
0096<-----Source: line: 'self.iface.mostrarEjercicioActual()'
0097     InstructionCall: end-gen
0097    Source: end-gen
0097    Function: end: 'block-def-interna_init'
0097  <-Source: end: 'block-def-interna_init'
0097 <--Class: end: 'block-def-interna_init'
0097<---Source: end: 'block-def-interna_init'
0098   Function: end-gen
0098   Function: begin-gen
0098    Function: line: 'def interna_main(self):'
0098  <-Source: line: 'def interna_main(self):'
0098 <--Class: line: 'def interna_main(self):'
0098<---Source: line: 'def interna_main(self):'
0099    Function: begin: 'block-def-interna_main'
0099  <-Source: begin: 'block-def-interna_main'
0099 <--Class: begin: 'block-def-interna_main'
0099<---Source: begin: 'block-def-interna_main'
0099    Source: begin-gen
0099     DeclarationBlock: begin-gen
0099      Variable: begin-gen
0099       Variable: expr: 'f'
0099       Variable: expr: '='
0099       Value: begin-gen
0099        New: begin-gen
0099         FunctionCall: begin-gen
0099          Value: begin-gen
0099           Constant: begin-gen
0099            Constant: ctype: 'String' -> 'empresa'
0099            Constant: expr: 'u"empresa"'
0099          <-Value: expr: 'u"empresa"'
0099           Constant: end-gen
0099          Value: end-gen
0099          FunctionCall: expr: 'FLFormSearchDB(u"empresa")'
0099        <-New: expr: 'qsatype.FLFormSearchDB(u"empresa")'
0099       <--Value: expr: 'qsatype.FLFormSearchDB(u"empresa")'
0099      <---Variable: expr: 'qsatype.FLFormSearchDB(u"empresa")'
0099         FunctionCall: end-gen
0099        New: end-gen
0099       Value: end-gen
0099      Variable: end-gen
0099      DeclarationBlock: line: 'f = qsatype.FLFormSearchDB(u"empresa")'
0099    <-Source: line: 'f = qsatype.FLFormSearchDB(u"empresa")'
0099   <--Function: line: 'f = qsatype.FLFormSearchDB(u"empresa")'
0099  <---Source: line: 'f = qsatype.FLFormSearchDB(u"empresa")'
0099 <----Class: line: 'f = qsatype.FLFormSearchDB(u"empresa")'
0099<-----Source: line: 'f = qsatype.FLFormSearchDB(u"empresa")'
0100     DeclarationBlock: end-gen
0100     DeclarationBlock: begin-gen
0100      Variable: begin-gen
0100       Variable: expr: 'cursor'
0100       Variable: expr: '='
0100       Value: begin-gen
0100        Member: begin-gen
0100         Identifier: begin-gen
0100          Identifier: expr: 'f'
0100         Identifier: end-gen
0100         FunctionCall: begin-gen
0100          FunctionCall: expr: 'cursor()'
0100         FunctionCall: end-gen
0100         Member: expr: 'f.cursor()'
0100       <-Value: expr: 'f.cursor()'
0100      <--Variable: expr: 'f.cursor()'
0100        Member: end-gen
0100       Value: end-gen
0100      Variable: end-gen
0100      DeclarationBlock: line: 'cursor = f.cursor()'
0100    <-Source: line: 'cursor = f.cursor()'
0100   <--Function: line: 'cursor = f.cursor()'
0100  <---Source: line: 'cursor = f.cursor()'
0100 <----Class: line: 'cursor = f.cursor()'
0100<-----Source: line: 'cursor = f.cursor()'
0101     DeclarationBlock: end-gen
0101     InstructionCall: begin-gen
0101      Member: begin-gen
0101       Identifier: begin-gen
0101        Identifier: expr: 'cursor'
0101       Identifier: end-gen
0101       FunctionCall: begin-gen
0101        FunctionCall: expr: 'select()'
0101       FunctionCall: end-gen
0101       Member: expr: 'cursor.select()'
0101      Member: end-gen
0101      InstructionCall: line: 'cursor.select()'
0101    <-Source: line: 'cursor.select()'
0101   <--Function: line: 'cursor.select()'
0101  <---Source: line: 'cursor.select()'
0101 <----Class: line: 'cursor.select()'
0101<-----Source: line: 'cursor.select()'
0102     InstructionCall: end-gen
0102     If: begin-gen
0102      Value: begin-gen
0102       OpUnary: begin-gen
0102        OpUnary: expr: 'not'
0102      <-Value: expr: 'not'
0102        Member: begin-gen
0102         Identifier: begin-gen
0102          Identifier: expr: 'cursor'
0102         Identifier: end-gen
0102         FunctionCall: begin-gen
0102          FunctionCall: expr: 'first()'
0102         FunctionCall: end-gen
0102         Member: expr: 'cursor.first()'
0102       <-OpUnary: expr: 'cursor.first()'
0102      <--Value: expr: 'cursor.first()'
0102        Member: end-gen
0102       OpUnary: end-gen
0102      Value: end-gen
0102      If: line: 'if not cursor.first():'
0102    <-Source: line: 'if not cursor.first():'
0102   <--Function: line: 'if not cursor.first():'
0102  <---Source: line: 'if not cursor.first():'
0102 <----Class: line: 'if not cursor.first():'
0102<-----Source: line: 'if not cursor.first():'
0103      If: begin: 'block-if'
0103    <-Source: begin: 'block-if'
0103   <--Function: begin: 'block-if'
0103  <---Source: begin: 'block-if'
0103 <----Class: begin: 'block-if'
0103<-----Source: begin: 'block-if'
0103      Source: begin-gen
0103       InstructionCall: begin-gen
0103        Member: begin-gen
0103         Identifier: begin-gen
0103          Identifier: expr: 'cursor'
0103         Identifier: end-gen
0103         FunctionCall: begin-gen
0103          Value: begin-gen
0103           Member: begin-gen
0103            Identifier: begin-gen
0103             Identifier: expr: 'cursor'
0103            Identifier: end-gen
0103            Identifier: begin-gen
0103             Identifier: expr: 'Insert'
0103            Identifier: end-gen
0103            Member: expr: 'cursor.Insert'
0103          <-Value: expr: 'cursor.Insert'
0103           Member: end-gen
0103          Value: end-gen
0103          FunctionCall: expr: 'setModeAccess(cursor.Insert)'
0103         FunctionCall: end-gen
0103         Member: expr: 'cursor.setModeAccess(cursor.Insert)'
0103        Member: end-gen
0103        InstructionCall: line: 'cursor.setModeAccess(cursor.Insert)'
0103      <-Source: line: 'cursor.setModeAccess(cursor.Insert)'
0103     <--If: line: 'cursor.setModeAccess(cursor.Insert)'
0103    <---Source: line: 'cursor.setModeAccess(cursor.Insert)'
0103   <----Function: line: 'cursor.setModeAccess(cursor.Insert)'
0103  <-----Source: line: 'cursor.setModeAccess(cursor.Insert)'
0103 <------Class: line: 'cursor.setModeAccess(cursor.Insert)'
0103<-------Source: line: 'cursor.setModeAccess(cursor.Insert)'
0104       InstructionCall: end-gen
0104      Source: end-gen
0104      If: end: 'block-if'
0104    <-Source: end: 'block-if'
0104   <--Function: end: 'block-if'
0104  <---Source: end: 'block-if'
0104 <----Class: end: 'block-if'
0104<-----Source: end: 'block-if'
0104      If: line: 'else:'
0104    <-Source: line: 'else:'
0104   <--Function: line: 'else:'
0104  <---Source: line: 'else:'
0104 <----Class: line: 'else:'
0104<-----Source: line: 'else:'
0105      If: begin: 'block-else'
0105    <-Source: begin: 'block-else'
0105   <--Function: begin: 'block-else'
0105  <---Source: begin: 'block-else'
0105 <----Class: begin: 'block-else'
0105<-----Source: begin: 'block-else'
0105      Source: begin-gen
0105       InstructionCall: begin-gen
0105        Member: begin-gen
0105         Identifier: begin-gen
0105          Identifier: expr: 'cursor'
0105         Identifier: end-gen
0105         FunctionCall: begin-gen
0105          Value: begin-gen
0105           Member: begin-gen
0105            Identifier: begin-gen
0105             Identifier: expr: 'cursor'
0105            Identifier: end-gen
0105            Identifier: begin-gen
0105             Identifier: expr: 'Edit'
0105            Identifier: end-gen
0105            Member: expr: 'cursor.Edit'
0105          <-Value: expr: 'cursor.Edit'
0105           Member: end-gen
0105          Value: end-gen
0105          FunctionCall: expr: 'setModeAccess(cursor.Edit)'
0105         FunctionCall: end-gen
0105         Member: expr: 'cursor.setModeAccess(cursor.Edit)'
0105        Member: end-gen
0105        InstructionCall: line: 'cursor.setModeAccess(cursor.Edit)'
0105      <-Source: line: 'cursor.setModeAccess(cursor.Edit)'
0105     <--If: line: 'cursor.setModeAccess(cursor.Edit)'
0105    <---Source: line: 'cursor.setModeAccess(cursor.Edit)'
0105   <----Function: line: 'cursor.setModeAccess(cursor.Edit)'
0105  <-----Source: line: 'cursor.setModeAccess(cursor.Edit)'
0105 <------Class: line: 'cursor.setModeAccess(cursor.Edit)'
0105<-------Source: line: 'cursor.setModeAccess(cursor.Edit)'
0106       InstructionCall: end-gen
0106      Source: end-gen
0106      If: end: 'block-else'
0106    <-Source: end: 'block-else'
0106   <--Function: end: 'block-else'
0106  <---Source: end: 'block-else'
0106 <----Class: end: 'block-else'
0106<-----Source: end: 'block-else'
0107     If: end-gen
0107     InstructionCall: begin-gen
0107      Member: begin-gen
0107       Identifier: begin-gen
0107        Identifier: expr: 'f'
0107       Identifier: end-gen
0107       FunctionCall: begin-gen
0107        FunctionCall: expr: 'setMainWidget()'
0107       FunctionCall: end-gen
0107       Member: expr: 'f.setMainWidget()'
0107      Member: end-gen
0107      InstructionCall: line: 'f.setMainWidget()'
0107    <-Source: line: 'f.setMainWidget()'
0107   <--Function: line: 'f.setMainWidget()'
0107  <---Source: line: 'f.setMainWidget()'
0107 <----Class: line: 'f.setMainWidget()'
0107<-----Source: line: 'f.setMainWidget()'
0108     InstructionCall: end-gen
0108     If: begin-gen
0108      Expression: begin-gen
0108       Member: begin-gen
0108        Identifier: begin-gen
0108         Identifier: expr: 'cursor'
0108        Identifier: end-gen
0108        FunctionCall: begin-gen
0108         FunctionCall: expr: 'modeAccess()'
0108        FunctionCall: end-gen
0108        Member: expr: 'cursor.modeAccess()'
0108      <-Expression: expr: 'cursor.modeAccess()'
0108       Member: end-gen
0108       Compare: begin-gen
0108        Compare: expr: '=='
0108      <-Expression: expr: '=='
0108       Compare: end-gen
0108       Member: begin-gen
0108        Identifier: begin-gen
0108         Identifier: expr: 'cursor'
0108        Identifier: end-gen
0108        Identifier: begin-gen
0108         Identifier: expr: 'Insert'
0108        Identifier: end-gen
0108        Member: expr: 'cursor.Insert'
0108      <-Expression: expr: 'cursor.Insert'
0108       Member: end-gen
0108      Expression: end-gen
0108      If: line: 'if cursor.modeAccess() == cursor.Insert:'
0108    <-Source: line: 'if cursor.modeAccess() == cursor.Insert:'
0108   <--Function: line: 'if cursor.modeAccess() == cursor.Insert:'
0108  <---Source: line: 'if cursor.modeAccess() == cursor.Insert:'
0108 <----Class: line: 'if cursor.modeAccess() == cursor.Insert:'
0108<-----Source: line: 'if cursor.modeAccess() == cursor.Insert:'
0109      If: begin: 'block-if'
0109    <-Source: begin: 'block-if'
0109   <--Function: begin: 'block-if'
0109  <---Source: begin: 'block-if'
0109 <----Class: begin: 'block-if'
0109<-----Source: begin: 'block-if'
0109      Source: begin-gen
0109       InstructionCall: begin-gen
0109        Member: begin-gen
0109         Identifier: begin-gen
0109          Identifier: expr: 'f'
0109         Identifier: end-gen
0109         FunctionCall: begin-gen
0109          Value: begin-gen
0109           Constant: begin-gen
0109            Constant: ctype: 'String' -> 'pushButtonCancel'
0109            Constant: expr: 'u"pushButtonCancel"'
0109          <-Value: expr: 'u"pushButtonCancel"'
0109           Constant: end-gen
0109          Value: end-gen
0109          FunctionCall: expr: 'child(u"pushButtonCancel")'
0109         FunctionCall: end-gen
0109         FunctionCall: begin-gen
0109          Value: begin-gen
0109           Identifier: begin-gen
0109            Identifier: expr: 'True'
0109          <-Value: expr: 'True'
0109           Identifier: end-gen
0109          Value: end-gen
0109          FunctionCall: expr: 'setDisabled(True)'
0109         FunctionCall: end-gen
0109         Member: expr: 'f.child(u"pushButtonCancel").setDisabled(True)'
0109        Member: end-gen
0109        InstructionCall: line: 'f.child(u"pushButtonCancel").setDisabled(True)'
0109      <-Source: line: 'f.child(u"pushButtonCancel").setDisabled(True)'
0109     <--If: line: 'f.child(u"pushButtonCancel").setDisabled(True)'
0109    <---Source: line: 'f.child(u"pushButtonCancel").setDisabled(True)'
0109   <----Function: line: 'f.child(u"pushButtonCancel").setDisabled(True)'
0109  <-----Source: line: 'f.child(u"pushButtonCancel").setDisabled(True)'
0109 <------Class: line: 'f.child(u"pushButtonCancel").setDisabled(True)'
0109<-------Source: line: 'f.child(u"pushButtonCancel").setDisabled(True)'
0110       InstructionCall: end-gen
0110      Source: end-gen
0110      If: end: 'block-if'
0110    <-Source: end: 'block-if'
0110   <--Function: end: 'block-if'
0110  <---Source: end: 'block-if'
0110 <----Class: end: 'block-if'
0110<-----Source: end: 'block-if'
0110     If: end-gen
0110     InstructionCall: begin-gen
0110      Member: begin-gen
0110       Identifier: begin-gen
0110        Identifier: expr: 'cursor'
0110       Identifier: end-gen
0110       FunctionCall: begin-gen
0110        FunctionCall: expr: 'refreshBuffer()'
0110       FunctionCall: end-gen
0110       Member: expr: 'cursor.refreshBuffer()'
0110      Member: end-gen
0110      InstructionCall: line: 'cursor.refreshBuffer()'
0110    <-Source: line: 'cursor.refreshBuffer()'
0110   <--Function: line: 'cursor.refreshBuffer()'
0110  <---Source: line: 'cursor.refreshBuffer()'
0110 <----Class: line: 'cursor.refreshBuffer()'
0110<-----Source: line: 'cursor.refreshBuffer()'
0111     InstructionCall: end-gen
0111     DeclarationBlock: begin-gen
0111      Variable: begin-gen
0111       Variable: expr: 'commitOk'
0111       Variable: expr: '='
0111       Value: begin-gen
0111        Identifier: begin-gen
0111         Identifier: expr: 'False'
0111       <-Value: expr: 'False'
0111      <--Variable: expr: 'False'
0111        Identifier: end-gen
0111       Value: end-gen
0111      Variable: end-gen
0111      DeclarationBlock: line: 'commitOk = False'
0111    <-Source: line: 'commitOk = False'
0111   <--Function: line: 'commitOk = False'
0111  <---Source: line: 'commitOk = False'
0111 <----Class: line: 'commitOk = False'
0111<-----Source: line: 'commitOk = False'
0112     DeclarationBlock: end-gen
0112     DeclarationBlock: begin-gen
0112      Variable: begin-gen
0112       Variable: expr: 'acpt'
0112       Variable: expr: '='
0112       Variable: expr: 'qsatype.Boolean()'
0112      Variable: end-gen
0112      DeclarationBlock: line: 'acpt = qsatype.Boolean()'
0112    <-Source: line: 'acpt = qsatype.Boolean()'
0112   <--Function: line: 'acpt = qsatype.Boolean()'
0112  <---Source: line: 'acpt = qsatype.Boolean()'
0112 <----Class: line: 'acpt = qsatype.Boolean()'
0112<-----Source: line: 'acpt = qsatype.Boolean()'
0113     DeclarationBlock: end-gen
0113     InstructionCall: begin-gen
0113      Member: begin-gen
0113       Identifier: begin-gen
0113        Identifier: expr: 'cursor'
0113       Identifier: end-gen
0113       FunctionCall: begin-gen
0113        Value: begin-gen
0113         Identifier: begin-gen
0113          Identifier: expr: 'False'
0113        <-Value: expr: 'False'
0113         Identifier: end-gen
0113        Value: end-gen
0113        FunctionCall: expr: 'transaction(False)'
0113       FunctionCall: end-gen
0113       Member: expr: 'cursor.transaction(False)'
0113      Member: end-gen
0113      InstructionCall: line: 'cursor.transaction(False)'
0113    <-Source: line: 'cursor.transaction(False)'
0113   <--Function: line: 'cursor.transaction(False)'
0113  <---Source: line: 'cursor.transaction(False)'
0113 <----Class: line: 'cursor.transaction(False)'
0113<-----Source: line: 'cursor.transaction(False)'
0114     InstructionCall: end-gen
0114     While: begin-gen
0114      Value: begin-gen
0114       OpUnary: begin-gen
0114        OpUnary: expr: 'not'
0114      <-Value: expr: 'not'
0114        Identifier: begin-gen
0114         Identifier: expr: 'commitOk'
0114       <-OpUnary: expr: 'commitOk'
0114      <--Value: expr: 'commitOk'
0114        Identifier: end-gen
0114       OpUnary: end-gen
0114      Value: end-gen
0114      While: line: 'while not commitOk:'
0114    <-Source: line: 'while not commitOk:'
0114   <--Function: line: 'while not commitOk:'
0114  <---Source: line: 'while not commitOk:'
0114 <----Class: line: 'while not commitOk:'
0114<-----Source: line: 'while not commitOk:'
0115      While: begin: 'block-while'
0115    <-Source: begin: 'block-while'
0115   <--Function: begin: 'block-while'
0115  <---Source: begin: 'block-while'
0115 <----Class: begin: 'block-while'
0115<-----Source: begin: 'block-while'
0115      Source: begin-gen
0115       InstructionUpdate: begin-gen
0115        Identifier: begin-gen
0115         Identifier: expr: 'acpt'
0115        Identifier: end-gen
0115        OpUpdate: begin-gen
0115         OpUpdate: expr: '='
0115        OpUpdate: end-gen
0115        Value: begin-gen
0115         Identifier: begin-gen
0115          Identifier: expr: 'False'
0115        <-Value: expr: 'False'
0115         Identifier: end-gen
0115        Value: end-gen
0115        InstructionUpdate: line: 'acpt = False'
0115      <-Source: line: 'acpt = False'
0115     <--While: line: 'acpt = False'
0115    <---Source: line: 'acpt = False'
0115   <----Function: line: 'acpt = False'
0115  <-----Source: line: 'acpt = False'
0115 <------Class: line: 'acpt = False'
0115<-------Source: line: 'acpt = False'
0116       InstructionUpdate: end-gen
0116       InstructionCall: begin-gen
0116        Member: begin-gen
0116         Identifier: begin-gen
0116          Identifier: expr: 'f'
0116         Identifier: end-gen
0116         FunctionCall: begin-gen
0116          Value: begin-gen
0116           Constant: begin-gen
0116            Constant: ctype: 'String' -> 'nombre'
0116            Constant: expr: 'u"nombre"'
0116          <-Value: expr: 'u"nombre"'
0116           Constant: end-gen
0116          Value: end-gen
0116          FunctionCall: expr: 'exec_(u"nombre")'
0116         FunctionCall: end-gen
0116         Member: expr: 'f.exec_(u"nombre")'
0116        Member: end-gen
0116        InstructionCall: line: 'f.exec_(u"nombre")'
0116      <-Source: line: 'f.exec_(u"nombre")'
0116     <--While: line: 'f.exec_(u"nombre")'
0116    <---Source: line: 'f.exec_(u"nombre")'
0116   <----Function: line: 'f.exec_(u"nombre")'
0116  <-----Source: line: 'f.exec_(u"nombre")'
0116 <------Class: line: 'f.exec_(u"nombre")'
0116<-------Source: line: 'f.exec_(u"nombre")'
0117       InstructionCall: end-gen
0117       InstructionUpdate: begin-gen
0117        Identifier: begin-gen
0117         Identifier: expr: 'acpt'
0117        Identifier: end-gen
0117        OpUpdate: begin-gen
0117         OpUpdate: expr: '='
0117        OpUpdate: end-gen
0117        Value: begin-gen
0117         Member: begin-gen
0117          Identifier: begin-gen
0117           Identifier: expr: 'f'
0117          Identifier: end-gen
0117          FunctionCall: begin-gen
0117           FunctionCall: expr: 'accepted()'
0117          FunctionCall: end-gen
0117          Member: expr: 'f.accepted()'
0117        <-Value: expr: 'f.accepted()'
0117         Member: end-gen
0117        Value: end-gen
0117        InstructionUpdate: line: 'acpt = f.accepted()'
0117      <-Source: line: 'acpt = f.accepted()'
0117     <--While: line: 'acpt = f.accepted()'
0117    <---Source: line: 'acpt = f.accepted()'
0117   <----Function: line: 'acpt = f.accepted()'
0117  <-----Source: line: 'acpt = f.accepted()'
0117 <------Class: line: 'acpt = f.accepted()'
0117<-------Source: line: 'acpt = f.accepted()'
0118       InstructionUpdate: end-gen
0118       If: begin-gen
0118        Value: begin-gen
0118         OpUnary: begin-gen
0118          OpUnary: expr: 'not'
0118        <-Value: expr: 'not'
0118          Identifier: begin-gen
0118           Identifier: expr: 'acpt'
0118         <-OpUnary: expr: 'acpt'
0118        <--Value: expr: 'acpt'
0118          Identifier: end-gen
0118         OpUnary: end-gen
0118        Value: end-gen
0118        If: line: 'if not acpt:'
0118      <-Source: line: 'if not acpt:'
0118     <--While: line: 'if not acpt:'
0118    <---Source: line: 'if not acpt:'
0118   <----Function: line: 'if not acpt:'
0118  <-----Source: line: 'if not acpt:'
0118 <------Class: line: 'if not acpt:'
0118<-------Source: line: 'if not acpt:'
0119        If: begin: 'block-if'
0119      <-Source: begin: 'block-if'
0119     <--While: begin: 'block-if'
0119    <---Source: begin: 'block-if'
0119   <----Function: begin: 'block-if'
0119  <-----Source: begin: 'block-if'
0119 <------Class: begin: 'block-if'
0119<-------Source: begin: 'block-if'
0119        Source: begin-gen
0119         If: begin-gen
0119          Value: begin-gen
0119           Member: begin-gen
0119            Identifier: begin-gen
0119             Identifier: expr: 'cursor'
0119            Identifier: end-gen
0119            FunctionCall: begin-gen
0119             FunctionCall: expr: 'rollback()'
0119            FunctionCall: end-gen
0119            Member: expr: 'cursor.rollback()'
0119          <-Value: expr: 'cursor.rollback()'
0119           Member: end-gen
0119          Value: end-gen
0119          If: line: 'if cursor.rollback():'
0119        <-Source: line: 'if cursor.rollback():'
0119       <--If: line: 'if cursor.rollback():'
0119      <---Source: line: 'if cursor.rollback():'
0119     <----While: line: 'if cursor.rollback():'
0119    <-----Source: line: 'if cursor.rollback():'
0119   <------Function: line: 'if cursor.rollback():'
0119  <-------Source: line: 'if cursor.rollback():'
0119 <--------Class: line: 'if cursor.rollback():'
0119<---------Source: line: 'if cursor.rollback():'
0120          If: begin: 'block-if'
0120        <-Source: begin: 'block-if'
0120       <--If: begin: 'block-if'
0120      <---Source: begin: 'block-if'
0120     <----While: begin: 'block-if'
0120    <-----Source: begin: 'block-if'
0120   <------Function: begin: 'block-if'
0120  <-------Source: begin: 'block-if'
0120 <--------Class: begin: 'block-if'
0120<---------Source: begin: 'block-if'
0120          Source: begin-gen
0120           InstructionUpdate: begin-gen
0120            Identifier: begin-gen
0120             Identifier: expr: 'commitOk'
0120            Identifier: end-gen
0120            OpUpdate: begin-gen
0120             OpUpdate: expr: '='
0120            OpUpdate: end-gen
0120            Value: begin-gen
0120             Identifier: begin-gen
0120              Identifier: expr: 'True'
0120            <-Value: expr: 'True'
0120             Identifier: end-gen
0120            Value: end-gen
0120            InstructionUpdate: line: 'commitOk = True'
0120          <-Source: line: 'commitOk = True'
0120         <--If: line: 'commitOk = True'
0120        <---Source: line: 'commitOk = True'
0120       <----If: line: 'commitOk = True'
0120      <-----Source: line: 'commitOk = True'
0120     <------While: line: 'commitOk = True'
0120    <-------Source: line: 'commitOk = True'
0120   <--------Function: line: 'commitOk = True'
0120  <---------Source: line: 'commitOk = True'
0120 <----------Class: line: 'commitOk = True'
0120<-----------Source: line: 'commitOk = True'
0121           InstructionUpdate: end-gen
0121          Source: end-gen
0121          If: end: 'block-if'
0121        <-Source: end: 'block-if'
0121       <--If: end: 'block-if'
0121      <---Source: end: 'block-if'
0121     <----While: end: 'block-if'
0121    <-----Source: end: 'block-if'
0121   <------Function: end: 'block-if'
0121  <-------Source: end: 'block-if'
0121 <--------Class: end: 'block-if'
0121<---------Source: end: 'block-if'
0121         If: end-gen
0121        Source: end-gen
0121        If: end: 'block-if'
0121      <-Source: end: 'block-if'
0121     <--While: end: 'block-if'
0121    <---Source: end: 'block-if'
0121   <----Function: end: 'block-if'
0121  <-----Source: end: 'block-if'
0121 <------Class: end: 'block-if'
0121<-------Source: end: 'block-if'
0121        If: line: 'else:'
0121      <-Source: line: 'else:'
0121     <--While: line: 'else:'
0121    <---Source: line: 'else:'
0121   <----Function: line: 'else:'
0121  <-----Source: line: 'else:'
0121 <------Class: line: 'else:'
0121<-------Source: line: 'else:'
0122        If: begin: 'block-else'
0122      <-Source: begin: 'block-else'
0122     <--While: begin: 'block-else'
0122    <---Source: begin: 'block-else'
0122   <----Function: begin: 'block-else'
0122  <-----Source: begin: 'block-else'
0122 <------Class: begin: 'block-else'
0122<-------Source: begin: 'block-else'
0122        Source: begin-gen
0122         If: begin-gen
0122          Value: begin-gen
0122           Member: begin-gen
0122            Identifier: begin-gen
0122             Identifier: expr: 'cursor'
0122            Identifier: end-gen
0122            FunctionCall: begin-gen
0122             FunctionCall: expr: 'commitBuffer()'
0122            FunctionCall: end-gen
0122            Member: expr: 'cursor.commitBuffer()'
0122          <-Value: expr: 'cursor.commitBuffer()'
0122           Member: end-gen
0122          Value: end-gen
0122          If: line: 'if cursor.commitBuffer():'
0122        <-Source: line: 'if cursor.commitBuffer():'
0122       <--If: line: 'if cursor.commitBuffer():'
0122      <---Source: line: 'if cursor.commitBuffer():'
0122     <----While: line: 'if cursor.commitBuffer():'
0122    <-----Source: line: 'if cursor.commitBuffer():'
0122   <------Function: line: 'if cursor.commitBuffer():'
0122  <-------Source: line: 'if cursor.commitBuffer():'
0122 <--------Class: line: 'if cursor.commitBuffer():'
0122<---------Source: line: 'if cursor.commitBuffer():'
0123          If: begin: 'block-if'
0123        <-Source: begin: 'block-if'
0123       <--If: begin: 'block-if'
0123      <---Source: begin: 'block-if'
0123     <----While: begin: 'block-if'
0123    <-----Source: begin: 'block-if'
0123   <------Function: begin: 'block-if'
0123  <-------Source: begin: 'block-if'
0123 <--------Class: begin: 'block-if'
0123<---------Source: begin: 'block-if'
0123          Source: begin-gen
0123           InstructionCall: begin-gen
0123            Member: begin-gen
0123             Identifier: begin-gen
0123              Identifier: expr: 'cursor'
0123             Identifier: end-gen
0123             FunctionCall: begin-gen
0123              FunctionCall: expr: 'commit()'
0123             FunctionCall: end-gen
0123             Member: expr: 'cursor.commit()'
0123            Member: end-gen
0123            InstructionCall: line: 'cursor.commit()'
0123          <-Source: line: 'cursor.commit()'
0123         <--If: line: 'cursor.commit()'
0123        <---Source: line: 'cursor.commit()'
0123       <----If: line: 'cursor.commit()'
0123      <-----Source: line: 'cursor.commit()'
0123     <------While: line: 'cursor.commit()'
0123    <-------Source: line: 'cursor.commit()'
0123   <--------Function: line: 'cursor.commit()'
0123  <---------Source: line: 'cursor.commit()'
0123 <----------Class: line: 'cursor.commit()'
0123<-----------Source: line: 'cursor.commit()'
0124           InstructionCall: end-gen
0124           InstructionUpdate: begin-gen
0124            Identifier: begin-gen
0124             Identifier: expr: 'commitOk'
0124            Identifier: end-gen
0124            OpUpdate: begin-gen
0124             OpUpdate: expr: '='
0124            OpUpdate: end-gen
0124            Value: begin-gen
0124             Identifier: begin-gen
0124              Identifier: expr: 'True'
0124            <-Value: expr: 'True'
0124             Identifier: end-gen
0124            Value: end-gen
0124            InstructionUpdate: line: 'commitOk = True'
0124          <-Source: line: 'commitOk = True'
0124         <--If: line: 'commitOk = True'
0124        <---Source: line: 'commitOk = True'
0124       <----If: line: 'commitOk = True'
0124      <-----Source: line: 'commitOk = True'
0124     <------While: line: 'commitOk = True'
0124    <-------Source: line: 'commitOk = True'
0124   <--------Function: line: 'commitOk = True'
0124  <---------Source: line: 'commitOk = True'
0124 <----------Class: line: 'commitOk = True'
0124<-----------Source: line: 'commitOk = True'
0125           InstructionUpdate: end-gen
0125          Source: end-gen
0125          If: end: 'block-if'
0125        <-Source: end: 'block-if'
0125       <--If: end: 'block-if'
0125      <---Source: end: 'block-if'
0125     <----While: end: 'block-if'
0125    <-----Source: end: 'block-if'
0125   <------Function: end: 'block-if'
0125  <-------Source: end: 'block-if'
0125 <--------Class: end: 'block-if'
0125<---------Source: end: 'block-if'
0125         If: end-gen
0125        Source: end-gen
0125        If: end: 'block-else'
0125      <-Source: end: 'block-else'
0125     <--While: end: 'block-else'
0125    <---Source: end: 'block-else'
0125   <----Function: end: 'block-else'
0125  <-----Source: end: 'block-else'
0125 <------Class: end: 'block-else'
0125<-------Source: end: 'block-else'
0126       If: end-gen
0126      Source: end-gen
0126      While: end: 'block-while'
0126    <-Source: end: 'block-while'
0126   <--Function: end: 'block-while'
0126  <---Source: end: 'block-while'
0126 <----Class: end: 'block-while'
0126<-----Source: end: 'block-while'
0126     While: end-gen
0126    Source: end-gen
0126    Function: end: 'block-def-interna_main'
0126  <-Source: end: 'block-def-interna_main'
0126 <--Class: end: 'block-def-interna_main'
0126<---Source: end: 'block-def-interna_main'
0127   Function: end-gen
0127   Function: begin-gen
0127    Function: line: 'def interna_validateForm(self):'
0127  <-Source: line: 'def interna_validateForm(self):'
0127 <--Class: line: 'def interna_validateForm(self):'
0127<---Source: line: 'def interna_validateForm(self):'
0128    Function: begin: 'block-def-interna_validateForm'
0128  <-Source: begin: 'block-def-interna_validateForm'
0128 <--Class: begin: 'block-def-interna_validateForm'
0128<---Source: begin: 'block-def-interna_validateForm'
0128    Source: begin-gen
0128     DeclarationBlock: begin-gen
0128      Variable: begin-gen
0128       Variable: expr: 'util'
0128       Variable: expr: '='
0128       Value: begin-gen
0128        New: begin-gen
0128         FunctionCall: begin-gen
0128          FunctionCall: expr: 'FLUtil()'
0128        <-New: expr: 'qsatype.FLUtil()'
0128       <--Value: expr: 'qsatype.FLUtil()'
0128      <---Variable: expr: 'qsatype.FLUtil()'
0128         FunctionCall: end-gen
0128        New: end-gen
0128       Value: end-gen
0128      Variable: end-gen
0128      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0128    <-Source: line: 'util = qsatype.FLUtil()'
0128   <--Function: line: 'util = qsatype.FLUtil()'
0128  <---Source: line: 'util = qsatype.FLUtil()'
0128 <----Class: line: 'util = qsatype.FLUtil()'
0128<-----Source: line: 'util = qsatype.FLUtil()'
0129     DeclarationBlock: end-gen
0129     If: begin-gen
0129      Expression: begin-gen
0129       OpUnary: begin-gen
0129        OpUnary: expr: 'not'
0129      <-Expression: expr: 'not'
0129        Member: begin-gen
0129         Identifier: begin-gen
0129          Identifier: expr: 'sys'
0129         Identifier: end-gen
0129         FunctionCall: begin-gen
0129          Value: begin-gen
0129           Constant: begin-gen
0129            Constant: ctype: 'String' -> 'flcontppal'
0129            Constant: expr: 'u"flcontppal"'
0129          <-Value: expr: 'u"flcontppal"'
0129           Constant: end-gen
0129          Value: end-gen
0129          FunctionCall: expr: 'isLoadedModule(u"flcontppal")'
0129         FunctionCall: end-gen
0129         Member: expr: 'sys.isLoadedModule(u"flcontppal")'
0129       <-OpUnary: expr: 'sys.isLoadedModule(u"flcontppal")'
0129      <--Expression: expr: 'sys.isLoadedModule(u"flcontppal")'
0129        Member: end-gen
0129       OpUnary: end-gen
0129       Compare: begin-gen
0129        Compare: expr: 'and'
0129      <-Expression: expr: 'and'
0129       Compare: end-gen
0129       Member: begin-gen
0129        Identifier: begin-gen
0129         Identifier: expr: 'self'
0129        Identifier: end-gen
0129        FunctionCall: begin-gen
0129         FunctionCall: expr: 'cursor()'
0129        FunctionCall: end-gen
0129        FunctionCall: begin-gen
0129         Value: begin-gen
0129          Constant: begin-gen
0129           Constant: ctype: 'String' -> 'contintegrada'
0129           Constant: expr: 'u"contintegrada"'
0129         <-Value: expr: 'u"contintegrada"'
0129          Constant: end-gen
0129         Value: end-gen
0129         FunctionCall: expr: 'valueBuffer(u"contintegrada")'
0129        FunctionCall: end-gen
0129        Member: expr: 'self.cursor().valueBuffer(u"contintegrada")'
0129      <-Expression: expr: 'self.cursor().valueBuffer(u"contintegrada")'
0129       Member: end-gen
0129       Compare: begin-gen
0129        Compare: expr: '=='
0129      <-Expression: expr: '=='
0129       Compare: end-gen
0129       Identifier: begin-gen
0129        Identifier: expr: 'True'
0129      <-Expression: expr: 'True'
0129       Identifier: end-gen
0129      Expression: end-gen
0129      If: line: 'if not sys.isLoadedModule(u"flcontppal") and self.cursor().valueBuffer(u"contintegrada") == True:'
0129    <-Source: line: 'if not sys.isLoadedModule(u"flcontppal") and self.cursor().valueBuffer(u"contintegrada") == True:'
0129   <--Function: line: 'if not sys.isLoadedModule(u"flcontppal") and self.cursor().valueBuffer(u"contintegrada") == True:'
0129  <---Source: line: 'if not sys.isLoadedModule(u"flcontppal") and self.cursor().valueBuffer(u"contintegrada") == True:'
0129 <----Class: line: 'if not sys.isLoadedModule(u"flcontppal") and self.cursor().valueBuffer(u"contintegrada") == True:'
0129<-----Source: line: 'if not sys.isLoadedModule(u"flcontppal") and self.cursor().valueBuffer(u"contintegrada") == True:'
0130      If: begin: 'block-if'
0130    <-Source: begin: 'block-if'
0130   <--Function: begin: 'block-if'
0130  <---Source: begin: 'block-if'
0130 <----Class: begin: 'block-if'
0130<-----Source: begin: 'block-if'
0130      Source: begin-gen
0130       InstructionCall: begin-gen
0130        Member: begin-gen
0130         Identifier: begin-gen
0130          Identifier: expr: 'MessageBox'
0130         Identifier: end-gen
0130         FunctionCall: begin-gen
0130          Value: begin-gen
0130           Member: begin-gen
0130            Identifier: begin-gen
0130             Identifier: expr: 'util'
0130            Identifier: end-gen
0130            FunctionCall: begin-gen
0130             Value: begin-gen
0130              Constant: begin-gen
0130               Constant: ctype: 'String' -> 'scripts'
0130               Constant: expr: 'u"scripts"'
0130             <-Value: expr: 'u"scripts"'
0130              Constant: end-gen
0130             Value: end-gen
0130             Value: begin-gen
0130              Constant: begin-gen
0130               Constant: ctype: 'String' -> 'No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad'
0130               Constant: expr: 'u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"'
0130             <-Value: expr: 'u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"'
0130              Constant: end-gen
0130             Value: end-gen
0130             FunctionCall: expr: 'translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad")'
0130            FunctionCall: end-gen
0130            Member: expr: 'util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad")'
0130          <-Value: expr: 'util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad")'
0130           Member: end-gen
0130          Value: end-gen
0130          Value: begin-gen
0130           Member: begin-gen
0130            Identifier: begin-gen
0130             Identifier: expr: 'MessageBox'
0130            Identifier: end-gen
0130            Identifier: begin-gen
0130             Identifier: expr: 'Ok'
0130            Identifier: end-gen
0130            Member: expr: 'MessageBox.Ok'
0130          <-Value: expr: 'MessageBox.Ok'
0130           Member: end-gen
0130          Value: end-gen
0130          Value: begin-gen
0130           Member: begin-gen
0130            Identifier: begin-gen
0130             Identifier: expr: 'MessageBox'
0130            Identifier: end-gen
0130            Identifier: begin-gen
0130             Identifier: expr: 'NoButton'
0130            Identifier: end-gen
0130            Member: expr: 'MessageBox.NoButton'
0130          <-Value: expr: 'MessageBox.NoButton'
0130           Member: end-gen
0130          Value: end-gen
0130          Value: begin-gen
0130           Member: begin-gen
0130            Identifier: begin-gen
0130             Identifier: expr: 'MessageBox'
0130            Identifier: end-gen
0130            Identifier: begin-gen
0130             Identifier: expr: 'NoButton'
0130            Identifier: end-gen
0130            Member: expr: 'MessageBox.NoButton'
0130          <-Value: expr: 'MessageBox.NoButton'
0130           Member: end-gen
0130          Value: end-gen
0130          FunctionCall: expr: 'warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130         FunctionCall: end-gen
0130         Member: expr: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130        Member: end-gen
0130        InstructionCall: line: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130      <-Source: line: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130     <--If: line: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130    <---Source: line: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130   <----Function: line: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130  <-----Source: line: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130 <------Class: line: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0130<-------Source: line: 'MessageBox.warning(util.translate(u"scripts", u"No puede activarse la contabilidad integrada si no está cargado el módulo principal de Contabilidad"), MessageBox.Ok, MessageBox.NoButton, MessageBox.NoButton)'
0131       InstructionCall: end-gen
0131       InstructionFlow: begin-gen
0131        Value: begin-gen
0131         Identifier: begin-gen
0131          Identifier: expr: 'False'
0131        <-Value: expr: 'False'
0131         Identifier: end-gen
0131        Value: end-gen
0131        InstructionFlow: line: 'return False'
0131      <-Source: line: 'return False'
0131     <--If: line: 'return False'
0131    <---Source: line: 'return False'
0131   <----Function: line: 'return False'
0131  <-----Source: line: 'return False'
0131 <------Class: line: 'return False'
0131<-------Source: line: 'return False'
0132       InstructionFlow: end-gen
0132      Source: end-gen
0132      If: end: 'block-if'
0132    <-Source: end: 'block-if'
0132   <--Function: end: 'block-if'
0132  <---Source: end: 'block-if'
0132 <----Class: end: 'block-if'
0132<-----Source: end: 'block-if'
0132     If: end-gen
0132     InstructionFlow: begin-gen
0132      Value: begin-gen
0132       Identifier: begin-gen
0132        Identifier: expr: 'True'
0132      <-Value: expr: 'True'
0132       Identifier: end-gen
0132      Value: end-gen
0132      InstructionFlow: line: 'return True'
0132    <-Source: line: 'return True'
0132   <--Function: line: 'return True'
0132  <---Source: line: 'return True'
0132 <----Class: line: 'return True'
0132<-----Source: line: 'return True'
0133     InstructionFlow: end-gen
0133    Source: end-gen
0133    Function: end: 'block-def-interna_validateForm'
0133  <-Source: end: 'block-def-interna_validateForm'
0133 <--Class: end: 'block-def-interna_validateForm'
0133<---Source: end: 'block-def-interna_validateForm'
0134   Function: end-gen
0134   Function: begin-gen
0134    Function: line: 'def oficial_pbnCambiarEjercicioActual_clicked(self):'
0134  <-Source: line: 'def oficial_pbnCambiarEjercicioActual_clicked(self):'
0134 <--Class: line: 'def oficial_pbnCambiarEjercicioActual_clicked(self):'
0134<---Source: line: 'def oficial_pbnCambiarEjercicioActual_clicked(self):'
0135    Function: begin: 'block-def-oficial_pbnCambiarEjercicioActual_clicked'
0135  <-Source: begin: 'block-def-oficial_pbnCambiarEjercicioActual_clicked'
0135 <--Class: begin: 'block-def-oficial_pbnCambiarEjercicioActual_clicked'
0135<---Source: begin: 'block-def-oficial_pbnCambiarEjercicioActual_clicked'
0135    Source: begin-gen
0135     If: begin-gen
0135      Value: begin-gen
0135       OpUnary: begin-gen
0135        OpUnary: expr: 'not'
0135      <-Value: expr: 'not'
0135        Member: begin-gen
0135         Identifier: begin-gen
0135          Identifier: expr: 'self'
0135         Identifier: end-gen
0135         Identifier: begin-gen
0135          Identifier: expr: 'iface'
0135         Identifier: end-gen
0135         FunctionCall: begin-gen
0135          FunctionCall: expr: 'cambiarEjercicioActual()'
0135         FunctionCall: end-gen
0135         Member: expr: 'self.iface.cambiarEjercicioActual()'
0135       <-OpUnary: expr: 'self.iface.cambiarEjercicioActual()'
0135      <--Value: expr: 'self.iface.cambiarEjercicioActual()'
0135        Member: end-gen
0135       OpUnary: end-gen
0135      Value: end-gen
0135      If: line: 'if not self.iface.cambiarEjercicioActual():'
0135    <-Source: line: 'if not self.iface.cambiarEjercicioActual():'
0135   <--Function: line: 'if not self.iface.cambiarEjercicioActual():'
0135  <---Source: line: 'if not self.iface.cambiarEjercicioActual():'
0135 <----Class: line: 'if not self.iface.cambiarEjercicioActual():'
0135<-----Source: line: 'if not self.iface.cambiarEjercicioActual():'
0136      If: begin: 'block-if'
0136    <-Source: begin: 'block-if'
0136   <--Function: begin: 'block-if'
0136  <---Source: begin: 'block-if'
0136 <----Class: begin: 'block-if'
0136<-----Source: begin: 'block-if'
0136      Source: begin-gen
0136       InstructionFlow: begin-gen
0136        InstructionFlow: line: 'return '
0136      <-Source: line: 'return '
0136     <--If: line: 'return '
0136    <---Source: line: 'return '
0136   <----Function: line: 'return '
0136  <-----Source: line: 'return '
0136 <------Class: line: 'return '
0136<-------Source: line: 'return '
0137       InstructionFlow: end-gen
0137      Source: end-gen
0137      If: end: 'block-if'
0137    <-Source: end: 'block-if'
0137   <--Function: end: 'block-if'
0137  <---Source: end: 'block-if'
0137 <----Class: end: 'block-if'
0137<-----Source: end: 'block-if'
0137     If: end-gen
0137     InstructionCall: begin-gen
0137      Member: begin-gen
0137       Identifier: begin-gen
0137        Identifier: expr: 'self'
0137       Identifier: end-gen
0137       Identifier: begin-gen
0137        Identifier: expr: 'iface'
0137       Identifier: end-gen
0137       FunctionCall: begin-gen
0137        FunctionCall: expr: 'mostrarEjercicioActual()'
0137       FunctionCall: end-gen
0137       Member: expr: 'self.iface.mostrarEjercicioActual()'
0137      Member: end-gen
0137      InstructionCall: line: 'self.iface.mostrarEjercicioActual()'
0137    <-Source: line: 'self.iface.mostrarEjercicioActual()'
0137   <--Function: line: 'self.iface.mostrarEjercicioActual()'
0137  <---Source: line: 'self.iface.mostrarEjercicioActual()'
0137 <----Class: line: 'self.iface.mostrarEjercicioActual()'
0137<-----Source: line: 'self.iface.mostrarEjercicioActual()'
0138     InstructionCall: end-gen
0138    Source: end-gen
0138    Function: end: 'block-def-oficial_pbnCambiarEjercicioActual_clicked'
0138  <-Source: end: 'block-def-oficial_pbnCambiarEjercicioActual_clicked'
0138 <--Class: end: 'block-def-oficial_pbnCambiarEjercicioActual_clicked'
0138<---Source: end: 'block-def-oficial_pbnCambiarEjercicioActual_clicked'
0139   Function: end-gen
0139   Function: begin-gen
0139    Function: line: 'def oficial_cambiarEjercicioActual(self):'
0139  <-Source: line: 'def oficial_cambiarEjercicioActual(self):'
0139 <--Class: line: 'def oficial_cambiarEjercicioActual(self):'
0139<---Source: line: 'def oficial_cambiarEjercicioActual(self):'
0140    Function: begin: 'block-def-oficial_cambiarEjercicioActual'
0140  <-Source: begin: 'block-def-oficial_cambiarEjercicioActual'
0140 <--Class: begin: 'block-def-oficial_cambiarEjercicioActual'
0140<---Source: begin: 'block-def-oficial_cambiarEjercicioActual'
0140    Source: begin-gen
0140     DeclarationBlock: begin-gen
0140      Variable: begin-gen
0140       Variable: expr: 'f'
0140       Variable: expr: '='
0140       Value: begin-gen
0140        New: begin-gen
0140         FunctionCall: begin-gen
0140          Value: begin-gen
0140           Constant: begin-gen
0140            Constant: ctype: 'String' -> 'ejercicios'
0140            Constant: expr: 'u"ejercicios"'
0140          <-Value: expr: 'u"ejercicios"'
0140           Constant: end-gen
0140          Value: end-gen
0140          FunctionCall: expr: 'FLFormSearchDB(u"ejercicios")'
0140        <-New: expr: 'qsatype.FLFormSearchDB(u"ejercicios")'
0140       <--Value: expr: 'qsatype.FLFormSearchDB(u"ejercicios")'
0140      <---Variable: expr: 'qsatype.FLFormSearchDB(u"ejercicios")'
0140         FunctionCall: end-gen
0140        New: end-gen
0140       Value: end-gen
0140      Variable: end-gen
0140      DeclarationBlock: line: 'f = qsatype.FLFormSearchDB(u"ejercicios")'
0140    <-Source: line: 'f = qsatype.FLFormSearchDB(u"ejercicios")'
0140   <--Function: line: 'f = qsatype.FLFormSearchDB(u"ejercicios")'
0140  <---Source: line: 'f = qsatype.FLFormSearchDB(u"ejercicios")'
0140 <----Class: line: 'f = qsatype.FLFormSearchDB(u"ejercicios")'
0140<-----Source: line: 'f = qsatype.FLFormSearchDB(u"ejercicios")'
0141     DeclarationBlock: end-gen
0141     InstructionCall: begin-gen
0141      Member: begin-gen
0141       Identifier: begin-gen
0141        Identifier: expr: 'f'
0141       Identifier: end-gen
0141       FunctionCall: begin-gen
0141        FunctionCall: expr: 'setMainWidget()'
0141       FunctionCall: end-gen
0141       Member: expr: 'f.setMainWidget()'
0141      Member: end-gen
0141      InstructionCall: line: 'f.setMainWidget()'
0141    <-Source: line: 'f.setMainWidget()'
0141   <--Function: line: 'f.setMainWidget()'
0141  <---Source: line: 'f.setMainWidget()'
0141 <----Class: line: 'f.setMainWidget()'
0141<-----Source: line: 'f.setMainWidget()'
0142     InstructionCall: end-gen
0142     DeclarationBlock: begin-gen
0142      Variable: begin-gen
0142       Variable: expr: 'codEjercicio'
0142       Variable: expr: '='
0142       Value: begin-gen
0142        Member: begin-gen
0142         Identifier: begin-gen
0142          Identifier: expr: 'f'
0142         Identifier: end-gen
0142         FunctionCall: begin-gen
0142          Value: begin-gen
0142           Constant: begin-gen
0142            Constant: ctype: 'String' -> 'codejercicio'
0142            Constant: expr: 'u"codejercicio"'
0142          <-Value: expr: 'u"codejercicio"'
0142           Constant: end-gen
0142          Value: end-gen
0142          FunctionCall: expr: 'exec_(u"codejercicio")'
0142         FunctionCall: end-gen
0142         Member: expr: 'f.exec_(u"codejercicio")'
0142       <-Value: expr: 'f.exec_(u"codejercicio")'
0142      <--Variable: expr: 'f.exec_(u"codejercicio")'
0142        Member: end-gen
0142       Value: end-gen
0142      Variable: end-gen
0142      DeclarationBlock: line: 'codEjercicio = f.exec_(u"codejercicio")'
0142    <-Source: line: 'codEjercicio = f.exec_(u"codejercicio")'
0142   <--Function: line: 'codEjercicio = f.exec_(u"codejercicio")'
0142  <---Source: line: 'codEjercicio = f.exec_(u"codejercicio")'
0142 <----Class: line: 'codEjercicio = f.exec_(u"codejercicio")'
0142<-----Source: line: 'codEjercicio = f.exec_(u"codejercicio")'
0143     DeclarationBlock: end-gen
0143     If: begin-gen
0143      Value: begin-gen
0143       OpUnary: begin-gen
0143        OpUnary: expr: 'not'
0143      <-Value: expr: 'not'
0143        Identifier: begin-gen
0143         Identifier: expr: 'codEjercicio'
0143       <-OpUnary: expr: 'codEjercicio'
0143      <--Value: expr: 'codEjercicio'
0143        Identifier: end-gen
0143       OpUnary: end-gen
0143      Value: end-gen
0143      If: line: 'if not codEjercicio:'
0143    <-Source: line: 'if not codEjercicio:'
0143   <--Function: line: 'if not codEjercicio:'
0143  <---Source: line: 'if not codEjercicio:'
0143 <----Class: line: 'if not codEjercicio:'
0143<-----Source: line: 'if not codEjercicio:'
0144      If: begin: 'block-if'
0144    <-Source: begin: 'block-if'
0144   <--Function: begin: 'block-if'
0144  <---Source: begin: 'block-if'
0144 <----Class: begin: 'block-if'
0144<-----Source: begin: 'block-if'
0144      Source: begin-gen
0144       InstructionFlow: begin-gen
0144        Value: begin-gen
0144         Identifier: begin-gen
0144          Identifier: expr: 'False'
0144        <-Value: expr: 'False'
0144         Identifier: end-gen
0144        Value: end-gen
0144        InstructionFlow: line: 'return False'
0144      <-Source: line: 'return False'
0144     <--If: line: 'return False'
0144    <---Source: line: 'return False'
0144   <----Function: line: 'return False'
0144  <-----Source: line: 'return False'
0144 <------Class: line: 'return False'
0144<-------Source: line: 'return False'
0145       InstructionFlow: end-gen
0145      Source: end-gen
0145      If: end: 'block-if'
0145    <-Source: end: 'block-if'
0145   <--Function: end: 'block-if'
0145  <---Source: end: 'block-if'
0145 <----Class: end: 'block-if'
0145<-----Source: end: 'block-if'
0145     If: end-gen
0145     DeclarationBlock: begin-gen
0145      Variable: begin-gen
0145       Variable: expr: 'ok'
0145       Variable: expr: '='
0145       Value: begin-gen
0145        Member: begin-gen
0145         Identifier: begin-gen
0145          Identifier: expr: 'flfactppal'
0145         Identifier: end-gen
0145         Identifier: begin-gen
0145          Identifier: expr: 'iface'
0145         Identifier: end-gen
0145         FunctionCall: begin-gen
0145          Value: begin-gen
0145           Identifier: begin-gen
0145            Identifier: expr: 'codEjercicio'
0145          <-Value: expr: 'codEjercicio'
0145           Identifier: end-gen
0145          Value: end-gen
0145          FunctionCall: expr: 'pub_cambiarEjercicioActual(codEjercicio)'
0145         FunctionCall: end-gen
0145         Member: expr: 'flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0145       <-Value: expr: 'flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0145      <--Variable: expr: 'flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0145        Member: end-gen
0145       Value: end-gen
0145      Variable: end-gen
0145      DeclarationBlock: line: 'ok = flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0145    <-Source: line: 'ok = flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0145   <--Function: line: 'ok = flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0145  <---Source: line: 'ok = flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0145 <----Class: line: 'ok = flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0145<-----Source: line: 'ok = flfactppal.iface.pub_cambiarEjercicioActual(codEjercicio)'
0146     DeclarationBlock: end-gen
0146     InstructionFlow: begin-gen
0146      Value: begin-gen
0146       Identifier: begin-gen
0146        Identifier: expr: 'ok'
0146      <-Value: expr: 'ok'
0146       Identifier: end-gen
0146      Value: end-gen
0146      InstructionFlow: line: 'return ok'
0146    <-Source: line: 'return ok'
0146   <--Function: line: 'return ok'
0146  <---Source: line: 'return ok'
0146 <----Class: line: 'return ok'
0146<-----Source: line: 'return ok'
0147     InstructionFlow: end-gen
0147    Source: end-gen
0147    Function: end: 'block-def-oficial_cambiarEjercicioActual'
0147  <-Source: end: 'block-def-oficial_cambiarEjercicioActual'
0147 <--Class: end: 'block-def-oficial_cambiarEjercicioActual'
0147<---Source: end: 'block-def-oficial_cambiarEjercicioActual'
0148   Function: end-gen
0148   Function: begin-gen
0148    Function: line: 'def oficial_mostrarEjercicioActual(self):'
0148  <-Source: line: 'def oficial_mostrarEjercicioActual(self):'
0148 <--Class: line: 'def oficial_mostrarEjercicioActual(self):'
0148<---Source: line: 'def oficial_mostrarEjercicioActual(self):'
0149    Function: begin: 'block-def-oficial_mostrarEjercicioActual'
0149  <-Source: begin: 'block-def-oficial_mostrarEjercicioActual'
0149 <--Class: begin: 'block-def-oficial_mostrarEjercicioActual'
0149<---Source: begin: 'block-def-oficial_mostrarEjercicioActual'
0149    Source: begin-gen
0149     DeclarationBlock: begin-gen
0149      Variable: begin-gen
0149       Variable: expr: 'util'
0149       Variable: expr: '='
0149       Value: begin-gen
0149        New: begin-gen
0149         FunctionCall: begin-gen
0149          FunctionCall: expr: 'FLUtil()'
0149        <-New: expr: 'qsatype.FLUtil()'
0149       <--Value: expr: 'qsatype.FLUtil()'
0149      <---Variable: expr: 'qsatype.FLUtil()'
0149         FunctionCall: end-gen
0149        New: end-gen
0149       Value: end-gen
0149      Variable: end-gen
0149      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0149    <-Source: line: 'util = qsatype.FLUtil()'
0149   <--Function: line: 'util = qsatype.FLUtil()'
0149  <---Source: line: 'util = qsatype.FLUtil()'
0149 <----Class: line: 'util = qsatype.FLUtil()'
0149<-----Source: line: 'util = qsatype.FLUtil()'
0150     DeclarationBlock: end-gen
0150     DeclarationBlock: begin-gen
0150      Variable: begin-gen
0150       Variable: expr: 'codEjercicio'
0150       Variable: expr: '='
0150       Value: begin-gen
0150        Member: begin-gen
0150         Identifier: begin-gen
0150          Identifier: expr: 'flfactppal'
0150         Identifier: end-gen
0150         Identifier: begin-gen
0150          Identifier: expr: 'iface'
0150         Identifier: end-gen
0150         FunctionCall: begin-gen
0150          FunctionCall: expr: 'pub_ejercicioActual()'
0150         FunctionCall: end-gen
0150         Member: expr: 'flfactppal.iface.pub_ejercicioActual()'
0150       <-Value: expr: 'flfactppal.iface.pub_ejercicioActual()'
0150      <--Variable: expr: 'flfactppal.iface.pub_ejercicioActual()'
0150        Member: end-gen
0150       Value: end-gen
0150      Variable: end-gen
0150      DeclarationBlock: line: 'codEjercicio = flfactppal.iface.pub_ejercicioActual()'
0150    <-Source: line: 'codEjercicio = flfactppal.iface.pub_ejercicioActual()'
0150   <--Function: line: 'codEjercicio = flfactppal.iface.pub_ejercicioActual()'
0150  <---Source: line: 'codEjercicio = flfactppal.iface.pub_ejercicioActual()'
0150 <----Class: line: 'codEjercicio = flfactppal.iface.pub_ejercicioActual()'
0150<-----Source: line: 'codEjercicio = flfactppal.iface.pub_ejercicioActual()'
0151     DeclarationBlock: end-gen
0151     DeclarationBlock: begin-gen
0151      Variable: begin-gen
0151       Variable: expr: 'nombreEjercicio'
0151       Variable: expr: '='
0151       Value: begin-gen
0151        Member: begin-gen
0151         Identifier: begin-gen
0151          Identifier: expr: 'util'
0151         Identifier: end-gen
0151         FunctionCall: begin-gen
0151          Value: begin-gen
0151           Constant: begin-gen
0151            Constant: ctype: 'String' -> 'ejercicios'
0151            Constant: expr: 'u"ejercicios"'
0151          <-Value: expr: 'u"ejercicios"'
0151           Constant: end-gen
0151          Value: end-gen
0151          Value: begin-gen
0151           Constant: begin-gen
0151            Constant: ctype: 'String' -> 'nombre'
0151            Constant: expr: 'u"nombre"'
0151          <-Value: expr: 'u"nombre"'
0151           Constant: end-gen
0151          Value: end-gen
0151          Expression: begin-gen
0151           Expression: expr: 'ustr('
0151           Constant: begin-gen
0151            Constant: ctype: 'String' -> "codejercicio='"
0151            Constant: expr: 'u"codejercicio=\'"'
0151          <-Expression: expr: 'u"codejercicio=\'"'
0151           Constant: end-gen
0151           Expression: expr: ','
0151           Identifier: begin-gen
0151            Identifier: expr: 'codEjercicio'
0151          <-Expression: expr: 'codEjercicio'
0151           Identifier: end-gen
0151           Expression: expr: ','
0151           Constant: begin-gen
0151            Constant: ctype: 'String' -> "'"
0151            Constant: expr: 'u"\'"'
0151          <-Expression: expr: 'u"\'"'
0151           Constant: end-gen
0151           Expression: expr: ')'
0151          Expression: end-gen
0151          FunctionCall: expr: 'sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151         FunctionCall: end-gen
0151         Member: expr: 'util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151       <-Value: expr: 'util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151      <--Variable: expr: 'util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151        Member: end-gen
0151       Value: end-gen
0151      Variable: end-gen
0151      DeclarationBlock: line: 'nombreEjercicio = util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151    <-Source: line: 'nombreEjercicio = util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151   <--Function: line: 'nombreEjercicio = util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151  <---Source: line: 'nombreEjercicio = util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151 <----Class: line: 'nombreEjercicio = util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0151<-----Source: line: 'nombreEjercicio = util.sqlSelect(u"ejercicios", u"nombre", ustr( u"codejercicio=\'" , codEjercicio , u"\'" ))'
0152     DeclarationBlock: end-gen
0152     TryCatch: begin-gen
0152      TryCatch: line: 'try:'
0152    <-Source: line: 'try:'
0152   <--Function: line: 'try:'
0152  <---Source: line: 'try:'
0152 <----Class: line: 'try:'
0152<-----Source: line: 'try:'
0153      TryCatch: begin: 'block-try'
0153    <-Source: begin: 'block-try'
0153   <--Function: begin: 'block-try'
0153  <---Source: begin: 'block-try'
0153 <----Class: begin: 'block-try'
0153<-----Source: begin: 'block-try'
0153      Source: begin-gen
0153       InstructionCall: begin-gen
0153        Member: begin-gen
0153         Identifier: begin-gen
0153          Identifier: expr: 'sys'
0153         Identifier: end-gen
0153         FunctionCall: begin-gen
0153          Value: begin-gen
0153           Identifier: begin-gen
0153            Identifier: expr: 'nombreEjercicio'
0153          <-Value: expr: 'nombreEjercicio'
0153           Identifier: end-gen
0153          Value: end-gen
0153          FunctionCall: expr: 'setCaptionMainWidget(nombreEjercicio)'
0153         FunctionCall: end-gen
0153         Member: expr: 'sys.setCaptionMainWidget(nombreEjercicio)'
0153        Member: end-gen
0153        InstructionCall: line: 'sys.setCaptionMainWidget(nombreEjercicio)'
0153      <-Source: line: 'sys.setCaptionMainWidget(nombreEjercicio)'
0153     <--TryCatch: line: 'sys.setCaptionMainWidget(nombreEjercicio)'
0153    <---Source: line: 'sys.setCaptionMainWidget(nombreEjercicio)'
0153   <----Function: line: 'sys.setCaptionMainWidget(nombreEjercicio)'
0153  <-----Source: line: 'sys.setCaptionMainWidget(nombreEjercicio)'
0153 <------Class: line: 'sys.setCaptionMainWidget(nombreEjercicio)'
0153<-------Source: line: 'sys.setCaptionMainWidget(nombreEjercicio)'
0154       InstructionCall: end-gen
0154       InstructionUpdate: begin-gen
0154        Member: begin-gen
0154         Identifier: begin-gen
0154          Identifier: expr: 'self'
0154         Identifier: end-gen
0154         FunctionCall: begin-gen
0154          Value: begin-gen
0154           Constant: begin-gen
0154            Constant: ctype: 'String' -> 'lblValEjercicioActual'
0154            Constant: expr: 'u"lblValEjercicioActual"'
0154          <-Value: expr: 'u"lblValEjercicioActual"'
0154           Constant: end-gen
0154          Value: end-gen
0154          FunctionCall: expr: 'child(u"lblValEjercicioActual")'
0154         FunctionCall: end-gen
0154         Identifier: begin-gen
0154          Identifier: expr: 'text'
0154         Identifier: end-gen
0154         Member: expr: 'self.child(u"lblValEjercicioActual").text'
0154        Member: end-gen
0154        OpUpdate: begin-gen
0154         OpUpdate: expr: '='
0154        OpUpdate: end-gen
0154        Expression: begin-gen
0154         Expression: expr: 'ustr('
0154         Identifier: begin-gen
0154          Identifier: expr: 'codEjercicio'
0154        <-Expression: expr: 'codEjercicio'
0154         Identifier: end-gen
0154         Expression: expr: ','
0154         Constant: begin-gen
0154          Constant: ctype: 'String' -> ' - '
0154          Constant: expr: 'u" - "'
0154        <-Expression: expr: 'u" - "'
0154         Constant: end-gen
0154         Expression: expr: ','
0154         Identifier: begin-gen
0154          Identifier: expr: 'nombreEjercicio'
0154        <-Expression: expr: 'nombreEjercicio'
0154         Identifier: end-gen
0154         Expression: expr: ')'
0154        Expression: end-gen
0154        InstructionUpdate: line: 'self.child(u"lblValEjercicioActual").text = ustr( codEjercicio , u" - " , nombreEjercicio )'
0154      <-Source: line: 'self.child(u"lblValEjercicioActual").text = ustr( codEjercicio , u" - " , nombreEjercicio )'
0154     <--TryCatch: line: 'self.child(u"lblValEjercicioActual").text = ustr( codEjercicio , u" - " , nombreEjercicio )'
0154    <---Source: line: 'self.child(u"lblValEjercicioActual").text = ustr( codEjercicio , u" - " , nombreEjercicio )'
0154   <----Function: line: 'self.child(u"lblValEjercicioActual").text = ustr( codEjercicio , u" - " , nombreEjercicio )'
0154  <-----Source: line: 'self.child(u"lblValEjercicioActual").text = ustr( codEjercicio , u" - " , nombreEjercicio )'
0154 <------Class: line: 'self.child(u"lblValEjercicioActual").text = ustr( codEjercicio , u" - " , nombreEjercicio )'
0154<-------Source: line: 'self.child(u"lblValEjercicioActual").text = ustr( codEjercicio , u" - " , nombreEjercicio )'
0155       InstructionUpdate: end-gen
0155       InstructionUpdate: begin-gen
0155        Member: begin-gen
0155         Identifier: begin-gen
0155          Identifier: expr: 'self'
0155         Identifier: end-gen
0155         FunctionCall: begin-gen
0155          Value: begin-gen
0155           Constant: begin-gen
0155            Constant: ctype: 'String' -> 'lblEjercicioActual'
0155            Constant: expr: 'u"lblEjercicioActual"'
0155          <-Value: expr: 'u"lblEjercicioActual"'
0155           Constant: end-gen
0155          Value: end-gen
0155          FunctionCall: expr: 'child(u"lblEjercicioActual")'
0155         FunctionCall: end-gen
0155         Identifier: begin-gen
0155          Identifier: expr: 'text'
0155         Identifier: end-gen
0155         Member: expr: 'self.child(u"lblEjercicioActual").text'
0155        Member: end-gen
0155        OpUpdate: begin-gen
0155         OpUpdate: expr: '='
0155        OpUpdate: end-gen
0155        Expression: begin-gen
0155         Expression: expr: 'ustr('
0155         Member: begin-gen
0155          Identifier: begin-gen
0155           Identifier: expr: 'util'
0155          Identifier: end-gen
0155          FunctionCall: begin-gen
0155           Value: begin-gen
0155            Constant: begin-gen
0155             Constant: ctype: 'String' -> 'scripts'
0155             Constant: expr: 'u"scripts"'
0155           <-Value: expr: 'u"scripts"'
0155            Constant: end-gen
0155           Value: end-gen
0155           Value: begin-gen
0155            Constant: begin-gen
0155             Constant: ctype: 'String' -> 'Ejercicio actual para '
0155             Constant: expr: 'u"Ejercicio actual para "'
0155           <-Value: expr: 'u"Ejercicio actual para "'
0155            Constant: end-gen
0155           Value: end-gen
0155           FunctionCall: expr: 'translate(u"scripts", u"Ejercicio actual para ")'
0155          FunctionCall: end-gen
0155          Member: expr: 'util.translate(u"scripts", u"Ejercicio actual para ")'
0155        <-Expression: expr: 'util.translate(u"scripts", u"Ejercicio actual para ")'
0155         Member: end-gen
0155         Expression: expr: ','
0155         Member: begin-gen
0155          Identifier: begin-gen
0155           Identifier: expr: 'sys'
0155          Identifier: end-gen
0155          FunctionCall: begin-gen
0155           FunctionCall: expr: 'nameUser()'
0155          FunctionCall: end-gen
0155          Member: expr: 'sys.nameUser()'
0155        <-Expression: expr: 'sys.nameUser()'
0155         Member: end-gen
0155         Expression: expr: ','
0155         Constant: begin-gen
0155          Constant: ctype: 'String' -> ':'
0155          Constant: expr: 'u":"'
0155        <-Expression: expr: 'u":"'
0155         Constant: end-gen
0155         Expression: expr: ')'
0155        Expression: end-gen
0155        InstructionUpdate: line: 'self.child(u"lblEjercicioActual").text = ustr( util.translate(u"scripts", u"Ejercicio actual para ") , sys.nameUser() , u":" )'
0155      <-Source: line: 'self.child(u"lblEjercicioActual").text = ustr( util.translate(u"scripts", u"Ejercicio actual para ") , sys.nameUser() , u":" )'
0155     <--TryCatch: line: 'self.child(u"lblEjercicioActual").text = ustr( util.translate(u"scripts", u"Ejercicio actual para ") , sys.nameUser() , u":" )'
0155    <---Source: line: 'self.child(u"lblEjercicioActual").text = ustr( util.translate(u"scripts", u"Ejercicio actual para ") , sys.nameUser() , u":" )'
0155   <----Function: line: 'self.child(u"lblEjercicioActual").text = ustr( util.translate(u"scripts", u"Ejercicio actual para ") , sys.nameUser() , u":" )'
0155  <-----Source: line: 'self.child(u"lblEjercicioActual").text = ustr( util.translate(u"scripts", u"Ejercicio actual para ") , sys.nameUser() , u":" )'
0155 <------Class: line: 'self.child(u"lblEjercicioActual").text = ustr( util.translate(u"scripts", u"Ejercicio actual para ") , sys.nameUser() , u":" )'
0155<-------Source: line: 'self.child(u"lblEjercicioActual").text = ustr( util.translate(u"scripts", u"Ejercicio actual para ") , sys.nameUser() , u":" )'
0156       InstructionUpdate: end-gen
0156      Source: end-gen
0156      TryCatch: end: 'block-try'
0156    <-Source: end: 'block-try'
0156   <--Function: end: 'block-try'
0156  <---Source: end: 'block-try'
0156 <----Class: end: 'block-try'
0156<-----Source: end: 'block-try'
0156      Identifier: begin-gen
0156       Identifier: expr: 'e'
0156      Identifier: end-gen
0156      TryCatch: line: 'except Exception as e:'
0156    <-Source: line: 'except Exception as e:'
0156   <--Function: line: 'except Exception as e:'
0156  <---Source: line: 'except Exception as e:'
0156 <----Class: line: 'except Exception as e:'
0156<-----Source: line: 'except Exception as e:'
0157      TryCatch: begin: 'block-except'
0157    <-Source: begin: 'block-except'
0157   <--Function: begin: 'block-except'
0157  <---Source: begin: 'block-except'
0157 <----Class: begin: 'block-except'
0157<-----Source: begin: 'block-except'
0157      TryCatch: line: 'e = traceback.format_exc()'
0157    <-Source: line: 'e = traceback.format_exc()'
0157   <--Function: line: 'e = traceback.format_exc()'
0157  <---Source: line: 'e = traceback.format_exc()'
0157 <----Class: line: 'e = traceback.format_exc()'
0157<-----Source: line: 'e = traceback.format_exc()'
0158      Source: begin-gen
0158      Source: end-gen
0158      TryCatch: end: 'block-except'
0158    <-Source: end: 'block-except'
0158   <--Function: end: 'block-except'
0158  <---Source: end: 'block-except'
0158 <----Class: end: 'block-except'
0158<-----Source: end: 'block-except'
0159     TryCatch: end-gen
0159    Source: end-gen
0159    Function: end: 'block-def-oficial_mostrarEjercicioActual'
0159  <-Source: end: 'block-def-oficial_mostrarEjercicioActual'
0159 <--Class: end: 'block-def-oficial_mostrarEjercicioActual'
0159<---Source: end: 'block-def-oficial_mostrarEjercicioActual'
0160   Function: end-gen
0160   Function: begin-gen
0160    Variable: begin-gen
0160     Variable: expr: 'fN'
0160    Variable: end-gen
0160    Function: line: 'def oficial_bufferChanged(self, fN = None):'
0160  <-Source: line: 'def oficial_bufferChanged(self, fN = None):'
0160 <--Class: line: 'def oficial_bufferChanged(self, fN = None):'
0160<---Source: line: 'def oficial_bufferChanged(self, fN = None):'
0161    Function: begin: 'block-def-oficial_bufferChanged'
0161  <-Source: begin: 'block-def-oficial_bufferChanged'
0161 <--Class: begin: 'block-def-oficial_bufferChanged'
0161<---Source: begin: 'block-def-oficial_bufferChanged'
0161    Source: begin-gen
0161     DeclarationBlock: begin-gen
0161      Variable: begin-gen
0161       Variable: expr: 'util'
0161       Variable: expr: '='
0161       Value: begin-gen
0161        New: begin-gen
0161         Identifier: begin-gen
0161          Identifier: expr: 'FLUtil'
0161        <-New: expr: 'qsatype.FLUtil()'
0161       <--Value: expr: 'qsatype.FLUtil()'
0161      <---Variable: expr: 'qsatype.FLUtil()'
0161         Identifier: end-gen
0161        New: end-gen
0161       Value: end-gen
0161      Variable: end-gen
0161      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0161    <-Source: line: 'util = qsatype.FLUtil()'
0161   <--Function: line: 'util = qsatype.FLUtil()'
0161  <---Source: line: 'util = qsatype.FLUtil()'
0161 <----Class: line: 'util = qsatype.FLUtil()'
0161<-----Source: line: 'util = qsatype.FLUtil()'
0162     DeclarationBlock: end-gen
0162     DeclarationBlock: begin-gen
0162      Variable: begin-gen
0162       Variable: expr: 'cursor'
0162       Variable: expr: '='
0162       Value: begin-gen
0162        Member: begin-gen
0162         Identifier: begin-gen
0162          Identifier: expr: 'self'
0162         Identifier: end-gen
0162         FunctionCall: begin-gen
0162          FunctionCall: expr: 'cursor()'
0162         FunctionCall: end-gen
0162         Member: expr: 'self.cursor()'
0162       <-Value: expr: 'self.cursor()'
0162      <--Variable: expr: 'self.cursor()'
0162        Member: end-gen
0162       Value: end-gen
0162      Variable: end-gen
0162      DeclarationBlock: line: 'cursor = self.cursor()'
0162    <-Source: line: 'cursor = self.cursor()'
0162   <--Function: line: 'cursor = self.cursor()'
0162  <---Source: line: 'cursor = self.cursor()'
0162 <----Class: line: 'cursor = self.cursor()'
0162<-----Source: line: 'cursor = self.cursor()'
0163     DeclarationBlock: end-gen
0163     Switch: begin-gen
0163      Value: begin-gen
0163       Identifier: begin-gen
0163        Identifier: expr: 'fN'
0163      <-Value: expr: 'fN'
0163       Identifier: end-gen
0163      Value: end-gen
0163      Switch: line: 'sb2_when = fN'
0163    <-Source: line: 'sb2_when = fN'
0163   <--Function: line: 'sb2_when = fN'
0163  <---Source: line: 'sb2_when = fN'
0163 <----Class: line: 'sb2_when = fN'
0163<-----Source: line: 'sb2_when = fN'
0164      Switch: line: 'sb2_do_work,sb2_work_done = False,False'
0164    <-Source: line: 'sb2_do_work,sb2_work_done = False,False'
0164   <--Function: line: 'sb2_do_work,sb2_work_done = False,False'
0164  <---Source: line: 'sb2_do_work,sb2_work_done = False,False'
0164 <----Class: line: 'sb2_do_work,sb2_work_done = False,False'
0164<-----Source: line: 'sb2_do_work,sb2_work_done = False,False'
0165      Value: begin-gen
0165       Constant: begin-gen
0165        Constant: ctype: 'String' -> 'provincia'
0165        Constant: expr: 'u"provincia"'
0165      <-Value: expr: 'u"provincia"'
0165       Constant: end-gen
0165      Value: end-gen
0165      Switch: line: 'if sb2_when == u"provincia": sb2_do_work,sb2_work_done = True,True'
0165    <-Source: line: 'if sb2_when == u"provincia": sb2_do_work,sb2_work_done = True,True'
0165   <--Function: line: 'if sb2_when == u"provincia": sb2_do_work,sb2_work_done = True,True'
0165  <---Source: line: 'if sb2_when == u"provincia": sb2_do_work,sb2_work_done = True,True'
0165 <----Class: line: 'if sb2_when == u"provincia": sb2_do_work,sb2_work_done = True,True'
0165<-----Source: line: 'if sb2_when == u"provincia": sb2_do_work,sb2_work_done = True,True'
0166      Switch: line: 'if sb2_do_work:'
0166    <-Source: line: 'if sb2_do_work:'
0166   <--Function: line: 'if sb2_do_work:'
0166  <---Source: line: 'if sb2_do_work:'
0166 <----Class: line: 'if sb2_do_work:'
0166<-----Source: line: 'if sb2_do_work:'
0167      Switch: begin: 'block-if'
0167    <-Source: begin: 'block-if'
0167   <--Function: begin: 'block-if'
0167  <---Source: begin: 'block-if'
0167 <----Class: begin: 'block-if'
0167<-----Source: begin: 'block-if'
0167      Source: begin-gen
0167       If: begin-gen
0167        Value: begin-gen
0167         OpUnary: begin-gen
0167          OpUnary: expr: 'not'
0167        <-Value: expr: 'not'
0167          Member: begin-gen
0167           Identifier: begin-gen
0167            Identifier: expr: 'self'
0167           Identifier: end-gen
0167           Identifier: begin-gen
0167            Identifier: expr: 'iface'
0167           Identifier: end-gen
0167           Identifier: begin-gen
0167            Identifier: expr: 'bloqueoProvincia'
0167           Identifier: end-gen
0167           Member: expr: 'self.iface.bloqueoProvincia'
0167         <-OpUnary: expr: 'self.iface.bloqueoProvincia'
0167        <--Value: expr: 'self.iface.bloqueoProvincia'
0167          Member: end-gen
0167         OpUnary: end-gen
0167        Value: end-gen
0167        If: line: 'if not self.iface.bloqueoProvincia:'
0167      <-Source: line: 'if not self.iface.bloqueoProvincia:'
0167     <--Switch: line: 'if not self.iface.bloqueoProvincia:'
0167    <---Source: line: 'if not self.iface.bloqueoProvincia:'
0167   <----Function: line: 'if not self.iface.bloqueoProvincia:'
0167  <-----Source: line: 'if not self.iface.bloqueoProvincia:'
0167 <------Class: line: 'if not self.iface.bloqueoProvincia:'
0167<-------Source: line: 'if not self.iface.bloqueoProvincia:'
0168        If: begin: 'block-if'
0168      <-Source: begin: 'block-if'
0168     <--Switch: begin: 'block-if'
0168    <---Source: begin: 'block-if'
0168   <----Function: begin: 'block-if'
0168  <-----Source: begin: 'block-if'
0168 <------Class: begin: 'block-if'
0168<-------Source: begin: 'block-if'
0168        Source: begin-gen
0168         InstructionUpdate: begin-gen
0168          Member: begin-gen
0168           Identifier: begin-gen
0168            Identifier: expr: 'self'
0168           Identifier: end-gen
0168           Identifier: begin-gen
0168            Identifier: expr: 'iface'
0168           Identifier: end-gen
0168           Identifier: begin-gen
0168            Identifier: expr: 'bloqueoProvincia'
0168           Identifier: end-gen
0168           Member: expr: 'self.iface.bloqueoProvincia'
0168          Member: end-gen
0168          OpUpdate: begin-gen
0168           OpUpdate: expr: '='
0168          OpUpdate: end-gen
0168          Value: begin-gen
0168           Identifier: begin-gen
0168            Identifier: expr: 'True'
0168          <-Value: expr: 'True'
0168           Identifier: end-gen
0168          Value: end-gen
0168          InstructionUpdate: line: 'self.iface.bloqueoProvincia = True'
0168        <-Source: line: 'self.iface.bloqueoProvincia = True'
0168       <--If: line: 'self.iface.bloqueoProvincia = True'
0168      <---Source: line: 'self.iface.bloqueoProvincia = True'
0168     <----Switch: line: 'self.iface.bloqueoProvincia = True'
0168    <-----Source: line: 'self.iface.bloqueoProvincia = True'
0168   <------Function: line: 'self.iface.bloqueoProvincia = True'
0168  <-------Source: line: 'self.iface.bloqueoProvincia = True'
0168 <--------Class: line: 'self.iface.bloqueoProvincia = True'
0168<---------Source: line: 'self.iface.bloqueoProvincia = True'
0169         InstructionUpdate: end-gen
0169         InstructionCall: begin-gen
0169          Member: begin-gen
0169           Identifier: begin-gen
0169            Identifier: expr: 'flfactppal'
0169           Identifier: end-gen
0169           Identifier: begin-gen
0169            Identifier: expr: 'iface'
0169           Identifier: end-gen
0169           FunctionCall: begin-gen
0169            Value: begin-gen
0169             Identifier: begin-gen
0169              Identifier: expr: 'self'
0169            <-Value: expr: 'self'
0169             Identifier: end-gen
0169            Value: end-gen
0169            FunctionCall: expr: 'pub_obtenerProvincia(self)'
0169           FunctionCall: end-gen
0169           Member: expr: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169          Member: end-gen
0169          InstructionCall: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169        <-Source: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169       <--If: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169      <---Source: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169     <----Switch: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169    <-----Source: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169   <------Function: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169  <-------Source: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169 <--------Class: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0169<---------Source: line: 'flfactppal.iface.pub_obtenerProvincia(self)'
0170         InstructionCall: end-gen
0170         InstructionUpdate: begin-gen
0170          Member: begin-gen
0170           Identifier: begin-gen
0170            Identifier: expr: 'self'
0170           Identifier: end-gen
0170           Identifier: begin-gen
0170            Identifier: expr: 'iface'
0170           Identifier: end-gen
0170           Identifier: begin-gen
0170            Identifier: expr: 'bloqueoProvincia'
0170           Identifier: end-gen
0170           Member: expr: 'self.iface.bloqueoProvincia'
0170          Member: end-gen
0170          OpUpdate: begin-gen
0170           OpUpdate: expr: '='
0170          OpUpdate: end-gen
0170          Value: begin-gen
0170           Identifier: begin-gen
0170            Identifier: expr: 'False'
0170          <-Value: expr: 'False'
0170           Identifier: end-gen
0170          Value: end-gen
0170          InstructionUpdate: line: 'self.iface.bloqueoProvincia = False'
0170        <-Source: line: 'self.iface.bloqueoProvincia = False'
0170       <--If: line: 'self.iface.bloqueoProvincia = False'
0170      <---Source: line: 'self.iface.bloqueoProvincia = False'
0170     <----Switch: line: 'self.iface.bloqueoProvincia = False'
0170    <-----Source: line: 'self.iface.bloqueoProvincia = False'
0170   <------Function: line: 'self.iface.bloqueoProvincia = False'
0170  <-------Source: line: 'self.iface.bloqueoProvincia = False'
0170 <--------Class: line: 'self.iface.bloqueoProvincia = False'
0170<---------Source: line: 'self.iface.bloqueoProvincia = False'
0171         InstructionUpdate: end-gen
0171        Source: end-gen
0171        If: end: 'block-if'
0171      <-Source: end: 'block-if'
0171     <--Switch: end: 'block-if'
0171    <---Source: end: 'block-if'
0171   <----Function: end: 'block-if'
0171  <-----Source: end: 'block-if'
0171 <------Class: end: 'block-if'
0171<-------Source: end: 'block-if'
0171       If: end-gen
0171       InstructionFlow: begin-gen
0171        InstructionFlow: break: 'break '
0171      <-Source: break: 'break '
0171     <--Switch: line: 'sb2_do_work = False # BREAK'
0171    <---Source: line: 'sb2_do_work = False # BREAK'
0171   <----Function: line: 'sb2_do_work = False # BREAK'
0171  <-----Source: line: 'sb2_do_work = False # BREAK'
0171 <------Class: line: 'sb2_do_work = False # BREAK'
0171<-------Source: line: 'sb2_do_work = False # BREAK'
0172       InstructionFlow: end-gen
0172      Source: end-gen
0172      Switch: end: 'block-if'
0172    <-Source: end: 'block-if'
0172   <--Function: end: 'block-if'
0172  <---Source: end: 'block-if'
0172 <----Class: end: 'block-if'
0172<-----Source: end: 'block-if'
0172     Switch: end-gen
0172    Source: end-gen
0172    Function: end: 'block-def-oficial_bufferChanged'
0172  <-Source: end: 'block-def-oficial_bufferChanged'
0172 <--Class: end: 'block-def-oficial_bufferChanged'
0172<---Source: end: 'block-def-oficial_bufferChanged'
0173   Function: end-gen
0173   Function: begin-gen
0173    Function: line: 'def navegador_init(self):'
0173  <-Source: line: 'def navegador_init(self):'
0173 <--Class: line: 'def navegador_init(self):'
0173<---Source: line: 'def navegador_init(self):'
0174    Function: begin: 'block-def-navegador_init'
0174  <-Source: begin: 'block-def-navegador_init'
0174 <--Class: begin: 'block-def-navegador_init'
0174<---Source: begin: 'block-def-navegador_init'
0174    Source: begin-gen
0174     InstructionCall: begin-gen
0174      Member: begin-gen
0174       Identifier: begin-gen
0174        Identifier: expr: 'self'
0174       Identifier: end-gen
0174       Identifier: begin-gen
0174        Identifier: expr: 'iface'
0174       Identifier: end-gen
0174       FunctionCall: begin-gen
0174        FunctionCall: expr: '__init()'
0174       FunctionCall: end-gen
0174       Member: expr: 'super(navegador, self.iface).init()'
0174      Member: end-gen
0174      InstructionCall: line: 'super(navegador, self.iface).init()'
0174    <-Source: line: 'super(navegador, self.iface).init()'
0174   <--Function: line: 'super(navegador, self.iface).init()'
0174  <---Source: line: 'super(navegador, self.iface).init()'
0174 <----Class: line: 'super(navegador, self.iface).init()'
0174<-----Source: line: 'super(navegador, self.iface).init()'
0175     InstructionCall: end-gen
0175     DeclarationBlock: begin-gen
0175      Variable: begin-gen
0175       Variable: expr: 'util'
0175       Variable: expr: '='
0175       Value: begin-gen
0175        New: begin-gen
0175         FunctionCall: begin-gen
0175          FunctionCall: expr: 'FLUtil()'
0175        <-New: expr: 'qsatype.FLUtil()'
0175       <--Value: expr: 'qsatype.FLUtil()'
0175      <---Variable: expr: 'qsatype.FLUtil()'
0175         FunctionCall: end-gen
0175        New: end-gen
0175       Value: end-gen
0175      Variable: end-gen
0175      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0175    <-Source: line: 'util = qsatype.FLUtil()'
0175   <--Function: line: 'util = qsatype.FLUtil()'
0175  <---Source: line: 'util = qsatype.FLUtil()'
0175 <----Class: line: 'util = qsatype.FLUtil()'
0175<-----Source: line: 'util = qsatype.FLUtil()'
0176     DeclarationBlock: end-gen
0176     InstructionUpdate: begin-gen
0176      Member: begin-gen
0176       Identifier: begin-gen
0176        Identifier: expr: 'self'
0176       Identifier: end-gen
0176       FunctionCall: begin-gen
0176        Value: begin-gen
0176         Constant: begin-gen
0176          Constant: ctype: 'String' -> 'lblNombreNavegador'
0176          Constant: expr: 'u"lblNombreNavegador"'
0176        <-Value: expr: 'u"lblNombreNavegador"'
0176         Constant: end-gen
0176        Value: end-gen
0176        FunctionCall: expr: 'child(u"lblNombreNavegador")'
0176       FunctionCall: end-gen
0176       Identifier: begin-gen
0176        Identifier: expr: 'text'
0176       Identifier: end-gen
0176       Member: expr: 'self.child(u"lblNombreNavegador").text'
0176      Member: end-gen
0176      OpUpdate: begin-gen
0176       OpUpdate: expr: '='
0176      OpUpdate: end-gen
0176      Value: begin-gen
0176       Member: begin-gen
0176        Identifier: begin-gen
0176         Identifier: expr: 'util'
0176        Identifier: end-gen
0176        FunctionCall: begin-gen
0176         Value: begin-gen
0176          Constant: begin-gen
0176           Constant: ctype: 'String' -> 'scripts/flfactinfo/nombrenavegador'
0176           Constant: expr: 'u"scripts/flfactinfo/nombrenavegador"'
0176         <-Value: expr: 'u"scripts/flfactinfo/nombrenavegador"'
0176          Constant: end-gen
0176         Value: end-gen
0176         FunctionCall: expr: 'readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0176        FunctionCall: end-gen
0176        Member: expr: 'util.readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0176      <-Value: expr: 'util.readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0176       Member: end-gen
0176      Value: end-gen
0176      InstructionUpdate: line: 'self.child(u"lblNombreNavegador").text = util.readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0176    <-Source: line: 'self.child(u"lblNombreNavegador").text = util.readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0176   <--Function: line: 'self.child(u"lblNombreNavegador").text = util.readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0176  <---Source: line: 'self.child(u"lblNombreNavegador").text = util.readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0176 <----Class: line: 'self.child(u"lblNombreNavegador").text = util.readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0176<-----Source: line: 'self.child(u"lblNombreNavegador").text = util.readSettingEntry(u"scripts/flfactinfo/nombrenavegador")'
0177     InstructionUpdate: end-gen
0177     InstructionCall: begin-gen
0177      FunctionCall: begin-gen
0177       Value: begin-gen
0177        Member: begin-gen
0177         Identifier: begin-gen
0177          Identifier: expr: 'self'
0177         Identifier: end-gen
0177         FunctionCall: begin-gen
0177          Value: begin-gen
0177           Constant: begin-gen
0177            Constant: ctype: 'String' -> 'pbnCambiarNavegador'
0177            Constant: expr: 'u"pbnCambiarNavegador"'
0177          <-Value: expr: 'u"pbnCambiarNavegador"'
0177           Constant: end-gen
0177          Value: end-gen
0177          FunctionCall: expr: 'child(u"pbnCambiarNavegador")'
0177         FunctionCall: end-gen
0177         Member: expr: 'self.child(u"pbnCambiarNavegador")'
0177       <-Value: expr: 'self.child(u"pbnCambiarNavegador")'
0177        Member: end-gen
0177       Value: end-gen
0177       Value: begin-gen
0177        Constant: begin-gen
0177         Constant: ctype: 'String' -> 'clicked()'
0177         Constant: expr: 'u"clicked()"'
0177       <-Value: expr: 'u"clicked()"'
0177        Constant: end-gen
0177       Value: end-gen
0177       Value: begin-gen
0177        Identifier: begin-gen
0177         Identifier: expr: 'self'
0177       <-Value: expr: 'self'
0177        Identifier: end-gen
0177       Value: end-gen
0177       Value: begin-gen
0177        Constant: begin-gen
0177         Constant: ctype: 'String' -> 'iface.cambiarNavegador'
0177         Constant: expr: 'u"iface.cambiarNavegador"'
0177       <-Value: expr: 'u"iface.cambiarNavegador"'
0177        Constant: end-gen
0177       Value: end-gen
0177       FunctionCall: expr: 'connect(self.child(u"pbnCambiarNavegador"), u"clicked()", self, u"iface.cambiarNavegador")'
0177      FunctionCall: end-gen
0177      InstructionCall: line: 'connect(self.child(u"pbnCambiarNavegador"), u"clicked()", self, u"iface.cambiarNavegador")'
0177    <-Source: line: 'connect(self.child(u"pbnCambiarNavegador"), u"clicked()", self, u"iface.cambiarNavegador")'
0177   <--Function: line: 'connect(self.child(u"pbnCambiarNavegador"), u"clicked()", self, u"iface.cambiarNavegador")'
0177  <---Source: line: 'connect(self.child(u"pbnCambiarNavegador"), u"clicked()", self, u"iface.cambiarNavegador")'
0177 <----Class: line: 'connect(self.child(u"pbnCambiarNavegador"), u"clicked()", self, u"iface.cambiarNavegador")'
0177<-----Source: line: 'connect(self.child(u"pbnCambiarNavegador"), u"clicked()", self, u"iface.cambiarNavegador")'
0178     InstructionCall: end-gen
0178    Source: end-gen
0178    Function: end: 'block-def-navegador_init'
0178  <-Source: end: 'block-def-navegador_init'
0178 <--Class: end: 'block-def-navegador_init'
0178<---Source: end: 'block-def-navegador_init'
0179   Function: end-gen
0179   Function: begin-gen
0179    Function: line: 'def navegador_cambiarNavegador(self):'
0179  <-Source: line: 'def navegador_cambiarNavegador(self):'
0179 <--Class: line: 'def navegador_cambiarNavegador(self):'
0179<---Source: line: 'def navegador_cambiarNavegador(self):'
0180    Function: begin: 'block-def-navegador_cambiarNavegador'
0180  <-Source: begin: 'block-def-navegador_cambiarNavegador'
0180 <--Class: begin: 'block-def-navegador_cambiarNavegador'
0180<---Source: begin: 'block-def-navegador_cambiarNavegador'
0180    Source: begin-gen
0180     DeclarationBlock: begin-gen
0180      Variable: begin-gen
0180       Variable: expr: 'util'
0180       Variable: expr: '='
0180       Value: begin-gen
0180        New: begin-gen
0180         FunctionCall: begin-gen
0180          FunctionCall: expr: 'FLUtil()'
0180        <-New: expr: 'qsatype.FLUtil()'
0180       <--Value: expr: 'qsatype.FLUtil()'
0180      <---Variable: expr: 'qsatype.FLUtil()'
0180         FunctionCall: end-gen
0180        New: end-gen
0180       Value: end-gen
0180      Variable: end-gen
0180      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0180    <-Source: line: 'util = qsatype.FLUtil()'
0180   <--Function: line: 'util = qsatype.FLUtil()'
0180  <---Source: line: 'util = qsatype.FLUtil()'
0180 <----Class: line: 'util = qsatype.FLUtil()'
0180<-----Source: line: 'util = qsatype.FLUtil()'
0181     DeclarationBlock: end-gen
0181     DeclarationBlock: begin-gen
0181      Variable: begin-gen
0181       Variable: expr: 'nombreNavegador'
0181       Variable: expr: '='
0181       Value: begin-gen
0181        Member: begin-gen
0181         Identifier: begin-gen
0181          Identifier: expr: 'Input'
0181         Identifier: end-gen
0181         FunctionCall: begin-gen
0181          Value: begin-gen
0181           Member: begin-gen
0181            Identifier: begin-gen
0181             Identifier: expr: 'util'
0181            Identifier: end-gen
0181            FunctionCall: begin-gen
0181             Value: begin-gen
0181              Constant: begin-gen
0181               Constant: ctype: 'String' -> 'scripts'
0181               Constant: expr: 'u"scripts"'
0181             <-Value: expr: 'u"scripts"'
0181              Constant: end-gen
0181             Value: end-gen
0181             Value: begin-gen
0181              Constant: begin-gen
0181               Constant: ctype: 'String' -> 'Nombre del navegador o ruta de acceso:'
0181               Constant: expr: 'u"Nombre del navegador o ruta de acceso:"'
0181             <-Value: expr: 'u"Nombre del navegador o ruta de acceso:"'
0181              Constant: end-gen
0181             Value: end-gen
0181             FunctionCall: expr: 'translate(u"scripts", u"Nombre del navegador o ruta de acceso:")'
0181            FunctionCall: end-gen
0181            Member: expr: 'util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:")'
0181          <-Value: expr: 'util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:")'
0181           Member: end-gen
0181          Value: end-gen
0181          FunctionCall: expr: 'getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181         FunctionCall: end-gen
0181         Member: expr: 'Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181       <-Value: expr: 'Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181      <--Variable: expr: 'Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181        Member: end-gen
0181       Value: end-gen
0181      Variable: end-gen
0181      DeclarationBlock: line: 'nombreNavegador = Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181    <-Source: line: 'nombreNavegador = Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181   <--Function: line: 'nombreNavegador = Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181  <---Source: line: 'nombreNavegador = Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181 <----Class: line: 'nombreNavegador = Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0181<-----Source: line: 'nombreNavegador = Input.getText(util.translate(u"scripts", u"Nombre del navegador o ruta de acceso:"))'
0182     DeclarationBlock: end-gen
0182     If: begin-gen
0182      Value: begin-gen
0182       OpUnary: begin-gen
0182        OpUnary: expr: 'not'
0182      <-Value: expr: 'not'
0182        Identifier: begin-gen
0182         Identifier: expr: 'nombreNavegador'
0182       <-OpUnary: expr: 'nombreNavegador'
0182      <--Value: expr: 'nombreNavegador'
0182        Identifier: end-gen
0182       OpUnary: end-gen
0182      Value: end-gen
0182      If: line: 'if not nombreNavegador:'
0182    <-Source: line: 'if not nombreNavegador:'
0182   <--Function: line: 'if not nombreNavegador:'
0182  <---Source: line: 'if not nombreNavegador:'
0182 <----Class: line: 'if not nombreNavegador:'
0182<-----Source: line: 'if not nombreNavegador:'
0183      If: begin: 'block-if'
0183    <-Source: begin: 'block-if'
0183   <--Function: begin: 'block-if'
0183  <---Source: begin: 'block-if'
0183 <----Class: begin: 'block-if'
0183<-----Source: begin: 'block-if'
0183      Source: begin-gen
0183       InstructionFlow: begin-gen
0183        InstructionFlow: line: 'return '
0183      <-Source: line: 'return '
0183     <--If: line: 'return '
0183    <---Source: line: 'return '
0183   <----Function: line: 'return '
0183  <-----Source: line: 'return '
0183 <------Class: line: 'return '
0183<-------Source: line: 'return '
0184       InstructionFlow: end-gen
0184      Source: end-gen
0184      If: end: 'block-if'
0184    <-Source: end: 'block-if'
0184   <--Function: end: 'block-if'
0184  <---Source: end: 'block-if'
0184 <----Class: end: 'block-if'
0184<-----Source: end: 'block-if'
0184     If: end-gen
0184     InstructionUpdate: begin-gen
0184      Member: begin-gen
0184       Identifier: begin-gen
0184        Identifier: expr: 'self'
0184       Identifier: end-gen
0184       FunctionCall: begin-gen
0184        Value: begin-gen
0184         Constant: begin-gen
0184          Constant: ctype: 'String' -> 'lblNombreNavegador'
0184          Constant: expr: 'u"lblNombreNavegador"'
0184        <-Value: expr: 'u"lblNombreNavegador"'
0184         Constant: end-gen
0184        Value: end-gen
0184        FunctionCall: expr: 'child(u"lblNombreNavegador")'
0184       FunctionCall: end-gen
0184       Identifier: begin-gen
0184        Identifier: expr: 'text'
0184       Identifier: end-gen
0184       Member: expr: 'self.child(u"lblNombreNavegador").text'
0184      Member: end-gen
0184      OpUpdate: begin-gen
0184       OpUpdate: expr: '='
0184      OpUpdate: end-gen
0184      Value: begin-gen
0184       Identifier: begin-gen
0184        Identifier: expr: 'nombreNavegador'
0184      <-Value: expr: 'nombreNavegador'
0184       Identifier: end-gen
0184      Value: end-gen
0184      InstructionUpdate: line: 'self.child(u"lblNombreNavegador").text = nombreNavegador'
0184    <-Source: line: 'self.child(u"lblNombreNavegador").text = nombreNavegador'
0184   <--Function: line: 'self.child(u"lblNombreNavegador").text = nombreNavegador'
0184  <---Source: line: 'self.child(u"lblNombreNavegador").text = nombreNavegador'
0184 <----Class: line: 'self.child(u"lblNombreNavegador").text = nombreNavegador'
0184<-----Source: line: 'self.child(u"lblNombreNavegador").text = nombreNavegador'
0185     InstructionUpdate: end-gen
0185     InstructionCall: begin-gen
0185      Member: begin-gen
0185       Identifier: begin-gen
0185        Identifier: expr: 'util'
0185       Identifier: end-gen
0185       FunctionCall: begin-gen
0185        Value: begin-gen
0185         Constant: begin-gen
0185          Constant: ctype: 'String' -> 'scripts/flfactinfo/nombrenavegador'
0185          Constant: expr: 'u"scripts/flfactinfo/nombrenavegador"'
0185        <-Value: expr: 'u"scripts/flfactinfo/nombrenavegador"'
0185         Constant: end-gen
0185        Value: end-gen
0185        Value: begin-gen
0185         Identifier: begin-gen
0185          Identifier: expr: 'nombreNavegador'
0185        <-Value: expr: 'nombreNavegador'
0185         Identifier: end-gen
0185        Value: end-gen
0185        FunctionCall: expr: 'writeSettingEntry(u"scripts/flfactinfo/nombrenavegador", nombreNavegador)'
0185       FunctionCall: end-gen
0185       Member: expr: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrenavegador", nombreNavegador)'
0185      Member: end-gen
0185      InstructionCall: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrenavegador", nombreNavegador)'
0185    <-Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrenavegador", nombreNavegador)'
0185   <--Function: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrenavegador", nombreNavegador)'
0185  <---Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrenavegador", nombreNavegador)'
0185 <----Class: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrenavegador", nombreNavegador)'
0185<-----Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrenavegador", nombreNavegador)'
0186     InstructionCall: end-gen
0186    Source: end-gen
0186    Function: end: 'block-def-navegador_cambiarNavegador'
0186  <-Source: end: 'block-def-navegador_cambiarNavegador'
0186 <--Class: end: 'block-def-navegador_cambiarNavegador'
0186<---Source: end: 'block-def-navegador_cambiarNavegador'
0187   Function: end-gen
0187   Function: begin-gen
0187    Function: line: 'def envioMail_init(self):'
0187  <-Source: line: 'def envioMail_init(self):'
0187 <--Class: line: 'def envioMail_init(self):'
0187<---Source: line: 'def envioMail_init(self):'
0188    Function: begin: 'block-def-envioMail_init'
0188  <-Source: begin: 'block-def-envioMail_init'
0188 <--Class: begin: 'block-def-envioMail_init'
0188<---Source: begin: 'block-def-envioMail_init'
0188    Source: begin-gen
0188     InstructionCall: begin-gen
0188      Member: begin-gen
0188       Identifier: begin-gen
0188        Identifier: expr: 'self'
0188       Identifier: end-gen
0188       Identifier: begin-gen
0188        Identifier: expr: 'iface'
0188       Identifier: end-gen
0188       FunctionCall: begin-gen
0188        FunctionCall: expr: '__init()'
0188       FunctionCall: end-gen
0188       Member: expr: 'super(envioMail, self.iface).init()'
0188      Member: end-gen
0188      InstructionCall: line: 'super(envioMail, self.iface).init()'
0188    <-Source: line: 'super(envioMail, self.iface).init()'
0188   <--Function: line: 'super(envioMail, self.iface).init()'
0188  <---Source: line: 'super(envioMail, self.iface).init()'
0188 <----Class: line: 'super(envioMail, self.iface).init()'
0188<-----Source: line: 'super(envioMail, self.iface).init()'
0189     InstructionCall: end-gen
0189     DeclarationBlock: begin-gen
0189      Variable: begin-gen
0189       Variable: expr: 'util'
0189       Variable: expr: '='
0189       Value: begin-gen
0189        New: begin-gen
0189         FunctionCall: begin-gen
0189          FunctionCall: expr: 'FLUtil()'
0189        <-New: expr: 'qsatype.FLUtil()'
0189       <--Value: expr: 'qsatype.FLUtil()'
0189      <---Variable: expr: 'qsatype.FLUtil()'
0189         FunctionCall: end-gen
0189        New: end-gen
0189       Value: end-gen
0189      Variable: end-gen
0189      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0189    <-Source: line: 'util = qsatype.FLUtil()'
0189   <--Function: line: 'util = qsatype.FLUtil()'
0189  <---Source: line: 'util = qsatype.FLUtil()'
0189 <----Class: line: 'util = qsatype.FLUtil()'
0189<-----Source: line: 'util = qsatype.FLUtil()'
0190     DeclarationBlock: end-gen
0190     InstructionUpdate: begin-gen
0190      Member: begin-gen
0190       Identifier: begin-gen
0190        Identifier: expr: 'self'
0190       Identifier: end-gen
0190       FunctionCall: begin-gen
0190        Value: begin-gen
0190         Constant: begin-gen
0190          Constant: ctype: 'String' -> 'lblClienteCorreo'
0190          Constant: expr: 'u"lblClienteCorreo"'
0190        <-Value: expr: 'u"lblClienteCorreo"'
0190         Constant: end-gen
0190        Value: end-gen
0190        FunctionCall: expr: 'child(u"lblClienteCorreo")'
0190       FunctionCall: end-gen
0190       Identifier: begin-gen
0190        Identifier: expr: 'text'
0190       Identifier: end-gen
0190       Member: expr: 'self.child(u"lblClienteCorreo").text'
0190      Member: end-gen
0190      OpUpdate: begin-gen
0190       OpUpdate: expr: '='
0190      OpUpdate: end-gen
0190      Value: begin-gen
0190       Member: begin-gen
0190        Identifier: begin-gen
0190         Identifier: expr: 'util'
0190        Identifier: end-gen
0190        FunctionCall: begin-gen
0190         Value: begin-gen
0190          Constant: begin-gen
0190           Constant: ctype: 'String' -> 'scripts/flfactinfo/clientecorreo'
0190           Constant: expr: 'u"scripts/flfactinfo/clientecorreo"'
0190         <-Value: expr: 'u"scripts/flfactinfo/clientecorreo"'
0190          Constant: end-gen
0190         Value: end-gen
0190         FunctionCall: expr: 'readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0190        FunctionCall: end-gen
0190        Member: expr: 'util.readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0190      <-Value: expr: 'util.readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0190       Member: end-gen
0190      Value: end-gen
0190      InstructionUpdate: line: 'self.child(u"lblClienteCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0190    <-Source: line: 'self.child(u"lblClienteCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0190   <--Function: line: 'self.child(u"lblClienteCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0190  <---Source: line: 'self.child(u"lblClienteCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0190 <----Class: line: 'self.child(u"lblClienteCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0190<-----Source: line: 'self.child(u"lblClienteCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/clientecorreo")'
0191     InstructionUpdate: end-gen
0191     InstructionUpdate: begin-gen
0191      Member: begin-gen
0191       Identifier: begin-gen
0191        Identifier: expr: 'self'
0191       Identifier: end-gen
0191       FunctionCall: begin-gen
0191        Value: begin-gen
0191         Constant: begin-gen
0191          Constant: ctype: 'String' -> 'lblNombreCorreo'
0191          Constant: expr: 'u"lblNombreCorreo"'
0191        <-Value: expr: 'u"lblNombreCorreo"'
0191         Constant: end-gen
0191        Value: end-gen
0191        FunctionCall: expr: 'child(u"lblNombreCorreo")'
0191       FunctionCall: end-gen
0191       Identifier: begin-gen
0191        Identifier: expr: 'text'
0191       Identifier: end-gen
0191       Member: expr: 'self.child(u"lblNombreCorreo").text'
0191      Member: end-gen
0191      OpUpdate: begin-gen
0191       OpUpdate: expr: '='
0191      OpUpdate: end-gen
0191      Value: begin-gen
0191       Member: begin-gen
0191        Identifier: begin-gen
0191         Identifier: expr: 'util'
0191        Identifier: end-gen
0191        FunctionCall: begin-gen
0191         Value: begin-gen
0191          Constant: begin-gen
0191           Constant: ctype: 'String' -> 'scripts/flfactinfo/nombrecorreo'
0191           Constant: expr: 'u"scripts/flfactinfo/nombrecorreo"'
0191         <-Value: expr: 'u"scripts/flfactinfo/nombrecorreo"'
0191          Constant: end-gen
0191         Value: end-gen
0191         FunctionCall: expr: 'readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0191        FunctionCall: end-gen
0191        Member: expr: 'util.readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0191      <-Value: expr: 'util.readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0191       Member: end-gen
0191      Value: end-gen
0191      InstructionUpdate: line: 'self.child(u"lblNombreCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0191    <-Source: line: 'self.child(u"lblNombreCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0191   <--Function: line: 'self.child(u"lblNombreCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0191  <---Source: line: 'self.child(u"lblNombreCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0191 <----Class: line: 'self.child(u"lblNombreCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0191<-----Source: line: 'self.child(u"lblNombreCorreo").text = util.readSettingEntry(u"scripts/flfactinfo/nombrecorreo")'
0192     InstructionUpdate: end-gen
0192     InstructionUpdate: begin-gen
0192      Member: begin-gen
0192       Identifier: begin-gen
0192        Identifier: expr: 'self'
0192       Identifier: end-gen
0192       FunctionCall: begin-gen
0192        Value: begin-gen
0192         Constant: begin-gen
0192          Constant: ctype: 'String' -> 'lblDirIntermedia'
0192          Constant: expr: 'u"lblDirIntermedia"'
0192        <-Value: expr: 'u"lblDirIntermedia"'
0192         Constant: end-gen
0192        Value: end-gen
0192        FunctionCall: expr: 'child(u"lblDirIntermedia")'
0192       FunctionCall: end-gen
0192       Identifier: begin-gen
0192        Identifier: expr: 'text'
0192       Identifier: end-gen
0192       Member: expr: 'self.child(u"lblDirIntermedia").text'
0192      Member: end-gen
0192      OpUpdate: begin-gen
0192       OpUpdate: expr: '='
0192      OpUpdate: end-gen
0192      Value: begin-gen
0192       Member: begin-gen
0192        Identifier: begin-gen
0192         Identifier: expr: 'util'
0192        Identifier: end-gen
0192        FunctionCall: begin-gen
0192         Value: begin-gen
0192          Constant: begin-gen
0192           Constant: ctype: 'String' -> 'scripts/flfactinfo/dirCorreo'
0192           Constant: expr: 'u"scripts/flfactinfo/dirCorreo"'
0192         <-Value: expr: 'u"scripts/flfactinfo/dirCorreo"'
0192          Constant: end-gen
0192         Value: end-gen
0192         FunctionCall: expr: 'readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0192        FunctionCall: end-gen
0192        Member: expr: 'util.readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0192      <-Value: expr: 'util.readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0192       Member: end-gen
0192      Value: end-gen
0192      InstructionUpdate: line: 'self.child(u"lblDirIntermedia").text = util.readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0192    <-Source: line: 'self.child(u"lblDirIntermedia").text = util.readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0192   <--Function: line: 'self.child(u"lblDirIntermedia").text = util.readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0192  <---Source: line: 'self.child(u"lblDirIntermedia").text = util.readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0192 <----Class: line: 'self.child(u"lblDirIntermedia").text = util.readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0192<-----Source: line: 'self.child(u"lblDirIntermedia").text = util.readSettingEntry(u"scripts/flfactinfo/dirCorreo")'
0193     InstructionUpdate: end-gen
0193     InstructionCall: begin-gen
0193      FunctionCall: begin-gen
0193       Value: begin-gen
0193        Member: begin-gen
0193         Identifier: begin-gen
0193          Identifier: expr: 'self'
0193         Identifier: end-gen
0193         FunctionCall: begin-gen
0193          Value: begin-gen
0193           Constant: begin-gen
0193            Constant: ctype: 'String' -> 'pbnCambiarClienteCorreo'
0193            Constant: expr: 'u"pbnCambiarClienteCorreo"'
0193          <-Value: expr: 'u"pbnCambiarClienteCorreo"'
0193           Constant: end-gen
0193          Value: end-gen
0193          FunctionCall: expr: 'child(u"pbnCambiarClienteCorreo")'
0193         FunctionCall: end-gen
0193         Member: expr: 'self.child(u"pbnCambiarClienteCorreo")'
0193       <-Value: expr: 'self.child(u"pbnCambiarClienteCorreo")'
0193        Member: end-gen
0193       Value: end-gen
0193       Value: begin-gen
0193        Constant: begin-gen
0193         Constant: ctype: 'String' -> 'clicked()'
0193         Constant: expr: 'u"clicked()"'
0193       <-Value: expr: 'u"clicked()"'
0193        Constant: end-gen
0193       Value: end-gen
0193       Value: begin-gen
0193        Identifier: begin-gen
0193         Identifier: expr: 'self'
0193       <-Value: expr: 'self'
0193        Identifier: end-gen
0193       Value: end-gen
0193       Value: begin-gen
0193        Constant: begin-gen
0193         Constant: ctype: 'String' -> 'iface.cambiarClienteCorreo'
0193         Constant: expr: 'u"iface.cambiarClienteCorreo"'
0193       <-Value: expr: 'u"iface.cambiarClienteCorreo"'
0193        Constant: end-gen
0193       Value: end-gen
0193       FunctionCall: expr: 'connect(self.child(u"pbnCambiarClienteCorreo"), u"clicked()", self, u"iface.cambiarClienteCorreo")'
0193      FunctionCall: end-gen
0193      InstructionCall: line: 'connect(self.child(u"pbnCambiarClienteCorreo"), u"clicked()", self, u"iface.cambiarClienteCorreo")'
0193    <-Source: line: 'connect(self.child(u"pbnCambiarClienteCorreo"), u"clicked()", self, u"iface.cambiarClienteCorreo")'
0193   <--Function: line: 'connect(self.child(u"pbnCambiarClienteCorreo"), u"clicked()", self, u"iface.cambiarClienteCorreo")'
0193  <---Source: line: 'connect(self.child(u"pbnCambiarClienteCorreo"), u"clicked()", self, u"iface.cambiarClienteCorreo")'
0193 <----Class: line: 'connect(self.child(u"pbnCambiarClienteCorreo"), u"clicked()", self, u"iface.cambiarClienteCorreo")'
0193<-----Source: line: 'connect(self.child(u"pbnCambiarClienteCorreo"), u"clicked()", self, u"iface.cambiarClienteCorreo")'
0194     InstructionCall: end-gen
0194     InstructionCall: begin-gen
0194      FunctionCall: begin-gen
0194       Value: begin-gen
0194        Member: begin-gen
0194         Identifier: begin-gen
0194          Identifier: expr: 'self'
0194         Identifier: end-gen
0194         FunctionCall: begin-gen
0194          Value: begin-gen
0194           Constant: begin-gen
0194            Constant: ctype: 'String' -> 'pbnCambiarNombreCorreo'
0194            Constant: expr: 'u"pbnCambiarNombreCorreo"'
0194          <-Value: expr: 'u"pbnCambiarNombreCorreo"'
0194           Constant: end-gen
0194          Value: end-gen
0194          FunctionCall: expr: 'child(u"pbnCambiarNombreCorreo")'
0194         FunctionCall: end-gen
0194         Member: expr: 'self.child(u"pbnCambiarNombreCorreo")'
0194       <-Value: expr: 'self.child(u"pbnCambiarNombreCorreo")'
0194        Member: end-gen
0194       Value: end-gen
0194       Value: begin-gen
0194        Constant: begin-gen
0194         Constant: ctype: 'String' -> 'clicked()'
0194         Constant: expr: 'u"clicked()"'
0194       <-Value: expr: 'u"clicked()"'
0194        Constant: end-gen
0194       Value: end-gen
0194       Value: begin-gen
0194        Identifier: begin-gen
0194         Identifier: expr: 'self'
0194       <-Value: expr: 'self'
0194        Identifier: end-gen
0194       Value: end-gen
0194       Value: begin-gen
0194        Constant: begin-gen
0194         Constant: ctype: 'String' -> 'iface.cambiarNombreCorreo'
0194         Constant: expr: 'u"iface.cambiarNombreCorreo"'
0194       <-Value: expr: 'u"iface.cambiarNombreCorreo"'
0194        Constant: end-gen
0194       Value: end-gen
0194       FunctionCall: expr: 'connect(self.child(u"pbnCambiarNombreCorreo"), u"clicked()", self, u"iface.cambiarNombreCorreo")'
0194      FunctionCall: end-gen
0194      InstructionCall: line: 'connect(self.child(u"pbnCambiarNombreCorreo"), u"clicked()", self, u"iface.cambiarNombreCorreo")'
0194    <-Source: line: 'connect(self.child(u"pbnCambiarNombreCorreo"), u"clicked()", self, u"iface.cambiarNombreCorreo")'
0194   <--Function: line: 'connect(self.child(u"pbnCambiarNombreCorreo"), u"clicked()", self, u"iface.cambiarNombreCorreo")'
0194  <---Source: line: 'connect(self.child(u"pbnCambiarNombreCorreo"), u"clicked()", self, u"iface.cambiarNombreCorreo")'
0194 <----Class: line: 'connect(self.child(u"pbnCambiarNombreCorreo"), u"clicked()", self, u"iface.cambiarNombreCorreo")'
0194<-----Source: line: 'connect(self.child(u"pbnCambiarNombreCorreo"), u"clicked()", self, u"iface.cambiarNombreCorreo")'
0195     InstructionCall: end-gen
0195     InstructionCall: begin-gen
0195      FunctionCall: begin-gen
0195       Value: begin-gen
0195        Member: begin-gen
0195         Identifier: begin-gen
0195          Identifier: expr: 'self'
0195         Identifier: end-gen
0195         FunctionCall: begin-gen
0195          Value: begin-gen
0195           Constant: begin-gen
0195            Constant: ctype: 'String' -> 'pbnCambiarDirIntermedia'
0195            Constant: expr: 'u"pbnCambiarDirIntermedia"'
0195          <-Value: expr: 'u"pbnCambiarDirIntermedia"'
0195           Constant: end-gen
0195          Value: end-gen
0195          FunctionCall: expr: 'child(u"pbnCambiarDirIntermedia")'
0195         FunctionCall: end-gen
0195         Member: expr: 'self.child(u"pbnCambiarDirIntermedia")'
0195       <-Value: expr: 'self.child(u"pbnCambiarDirIntermedia")'
0195        Member: end-gen
0195       Value: end-gen
0195       Value: begin-gen
0195        Constant: begin-gen
0195         Constant: ctype: 'String' -> 'clicked()'
0195         Constant: expr: 'u"clicked()"'
0195       <-Value: expr: 'u"clicked()"'
0195        Constant: end-gen
0195       Value: end-gen
0195       Value: begin-gen
0195        Identifier: begin-gen
0195         Identifier: expr: 'self'
0195       <-Value: expr: 'self'
0195        Identifier: end-gen
0195       Value: end-gen
0195       Value: begin-gen
0195        Constant: begin-gen
0195         Constant: ctype: 'String' -> 'iface.cambiarDirIntermedia'
0195         Constant: expr: 'u"iface.cambiarDirIntermedia"'
0195       <-Value: expr: 'u"iface.cambiarDirIntermedia"'
0195        Constant: end-gen
0195       Value: end-gen
0195       FunctionCall: expr: 'connect(self.child(u"pbnCambiarDirIntermedia"), u"clicked()", self, u"iface.cambiarDirIntermedia")'
0195      FunctionCall: end-gen
0195      InstructionCall: line: 'connect(self.child(u"pbnCambiarDirIntermedia"), u"clicked()", self, u"iface.cambiarDirIntermedia")'
0195    <-Source: line: 'connect(self.child(u"pbnCambiarDirIntermedia"), u"clicked()", self, u"iface.cambiarDirIntermedia")'
0195   <--Function: line: 'connect(self.child(u"pbnCambiarDirIntermedia"), u"clicked()", self, u"iface.cambiarDirIntermedia")'
0195  <---Source: line: 'connect(self.child(u"pbnCambiarDirIntermedia"), u"clicked()", self, u"iface.cambiarDirIntermedia")'
0195 <----Class: line: 'connect(self.child(u"pbnCambiarDirIntermedia"), u"clicked()", self, u"iface.cambiarDirIntermedia")'
0195<-----Source: line: 'connect(self.child(u"pbnCambiarDirIntermedia"), u"clicked()", self, u"iface.cambiarDirIntermedia")'
0196     InstructionCall: end-gen
0196    Source: end-gen
0196    Function: end: 'block-def-envioMail_init'
0196  <-Source: end: 'block-def-envioMail_init'
0196 <--Class: end: 'block-def-envioMail_init'
0196<---Source: end: 'block-def-envioMail_init'
0197   Function: end-gen
0197   Function: begin-gen
0197    Function: line: 'def envioMail_cambiarClienteCorreo(self):'
0197  <-Source: line: 'def envioMail_cambiarClienteCorreo(self):'
0197 <--Class: line: 'def envioMail_cambiarClienteCorreo(self):'
0197<---Source: line: 'def envioMail_cambiarClienteCorreo(self):'
0198    Function: begin: 'block-def-envioMail_cambiarClienteCorreo'
0198  <-Source: begin: 'block-def-envioMail_cambiarClienteCorreo'
0198 <--Class: begin: 'block-def-envioMail_cambiarClienteCorreo'
0198<---Source: begin: 'block-def-envioMail_cambiarClienteCorreo'
0198    Source: begin-gen
0198     DeclarationBlock: begin-gen
0198      Variable: begin-gen
0198       Variable: expr: 'util'
0198       Variable: expr: '='
0198       Value: begin-gen
0198        New: begin-gen
0198         FunctionCall: begin-gen
0198          FunctionCall: expr: 'FLUtil()'
0198        <-New: expr: 'qsatype.FLUtil()'
0198       <--Value: expr: 'qsatype.FLUtil()'
0198      <---Variable: expr: 'qsatype.FLUtil()'
0198         FunctionCall: end-gen
0198        New: end-gen
0198       Value: end-gen
0198      Variable: end-gen
0198      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0198    <-Source: line: 'util = qsatype.FLUtil()'
0198   <--Function: line: 'util = qsatype.FLUtil()'
0198  <---Source: line: 'util = qsatype.FLUtil()'
0198 <----Class: line: 'util = qsatype.FLUtil()'
0198<-----Source: line: 'util = qsatype.FLUtil()'
0199     DeclarationBlock: end-gen
0199     DeclarationBlock: begin-gen
0199      Variable: begin-gen
0199       Variable: expr: 'opciones'
0199       Variable: expr: '='
0199       Value: begin-gen
0199        Constant: begin-gen
0199         Constant: ctype: None -> None
0199         Value: begin-gen
0199          Constant: begin-gen
0199           Constant: ctype: 'String' -> 'KMail'
0199           Constant: expr: 'u"KMail"'
0199         <-Value: expr: 'u"KMail"'
0199          Constant: end-gen
0199         Value: end-gen
0199         Value: begin-gen
0199          Constant: begin-gen
0199           Constant: ctype: 'String' -> 'Thunderbird'
0199           Constant: expr: 'u"Thunderbird"'
0199         <-Value: expr: 'u"Thunderbird"'
0199          Constant: end-gen
0199         Value: end-gen
0199         Value: begin-gen
0199          Constant: begin-gen
0199           Constant: ctype: 'String' -> 'Outlook'
0199           Constant: expr: 'u"Outlook"'
0199         <-Value: expr: 'u"Outlook"'
0199          Constant: end-gen
0199         Value: end-gen
0199         Constant: expr: 'qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0199       <-Value: expr: 'qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0199      <--Variable: expr: 'qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0199        Constant: end-gen
0199       Value: end-gen
0199      Variable: end-gen
0199      DeclarationBlock: line: 'opciones = qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0199    <-Source: line: 'opciones = qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0199   <--Function: line: 'opciones = qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0199  <---Source: line: 'opciones = qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0199 <----Class: line: 'opciones = qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0199<-----Source: line: 'opciones = qsatype.Array([u"KMail", u"Thunderbird", u"Outlook"])'
0200     DeclarationBlock: end-gen
0200     DeclarationBlock: begin-gen
0200      Variable: begin-gen
0200       Variable: expr: 'codClienteCorreo'
0200       Variable: expr: '='
0200       Value: begin-gen
0200        Member: begin-gen
0200         Identifier: begin-gen
0200          Identifier: expr: 'Input'
0200         Identifier: end-gen
0200         FunctionCall: begin-gen
0200          Value: begin-gen
0200           Member: begin-gen
0200            Identifier: begin-gen
0200             Identifier: expr: 'util'
0200            Identifier: end-gen
0200            FunctionCall: begin-gen
0200             Value: begin-gen
0200              Constant: begin-gen
0200               Constant: ctype: 'String' -> 'scripts'
0200               Constant: expr: 'u"scripts"'
0200             <-Value: expr: 'u"scripts"'
0200              Constant: end-gen
0200             Value: end-gen
0200             Value: begin-gen
0200              Constant: begin-gen
0200               Constant: ctype: 'String' -> 'Cliente de correo:'
0200               Constant: expr: 'u"Cliente de correo:"'
0200             <-Value: expr: 'u"Cliente de correo:"'
0200              Constant: end-gen
0200             Value: end-gen
0200             FunctionCall: expr: 'translate(u"scripts", u"Cliente de correo:")'
0200            FunctionCall: end-gen
0200            Member: expr: 'util.translate(u"scripts", u"Cliente de correo:")'
0200          <-Value: expr: 'util.translate(u"scripts", u"Cliente de correo:")'
0200           Member: end-gen
0200          Value: end-gen
0200          Value: begin-gen
0200           Identifier: begin-gen
0200            Identifier: expr: 'opciones'
0200          <-Value: expr: 'opciones'
0200           Identifier: end-gen
0200          Value: end-gen
0200          Value: begin-gen
0200           Constant: begin-gen
0200            Constant: ctype: 'String' -> 'KMail'
0200            Constant: expr: 'u"KMail"'
0200          <-Value: expr: 'u"KMail"'
0200           Constant: end-gen
0200          Value: end-gen
0200          Value: begin-gen
0200           Identifier: begin-gen
0200            Identifier: expr: 'False'
0200          <-Value: expr: 'False'
0200           Identifier: end-gen
0200          Value: end-gen
0200          FunctionCall: expr: 'getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200         FunctionCall: end-gen
0200         Member: expr: 'Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200       <-Value: expr: 'Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200      <--Variable: expr: 'Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200        Member: end-gen
0200       Value: end-gen
0200      Variable: end-gen
0200      DeclarationBlock: line: 'codClienteCorreo = Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200    <-Source: line: 'codClienteCorreo = Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200   <--Function: line: 'codClienteCorreo = Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200  <---Source: line: 'codClienteCorreo = Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200 <----Class: line: 'codClienteCorreo = Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0200<-----Source: line: 'codClienteCorreo = Input.getItem(util.translate(u"scripts", u"Cliente de correo:"), opciones, u"KMail", False)'
0201     DeclarationBlock: end-gen
0201     If: begin-gen
0201      Value: begin-gen
0201       OpUnary: begin-gen
0201        OpUnary: expr: 'not'
0201      <-Value: expr: 'not'
0201        Identifier: begin-gen
0201         Identifier: expr: 'codClienteCorreo'
0201       <-OpUnary: expr: 'codClienteCorreo'
0201      <--Value: expr: 'codClienteCorreo'
0201        Identifier: end-gen
0201       OpUnary: end-gen
0201      Value: end-gen
0201      If: line: 'if not codClienteCorreo:'
0201    <-Source: line: 'if not codClienteCorreo:'
0201   <--Function: line: 'if not codClienteCorreo:'
0201  <---Source: line: 'if not codClienteCorreo:'
0201 <----Class: line: 'if not codClienteCorreo:'
0201<-----Source: line: 'if not codClienteCorreo:'
0202      If: begin: 'block-if'
0202    <-Source: begin: 'block-if'
0202   <--Function: begin: 'block-if'
0202  <---Source: begin: 'block-if'
0202 <----Class: begin: 'block-if'
0202<-----Source: begin: 'block-if'
0202      Source: begin-gen
0202       InstructionFlow: begin-gen
0202        InstructionFlow: line: 'return '
0202      <-Source: line: 'return '
0202     <--If: line: 'return '
0202    <---Source: line: 'return '
0202   <----Function: line: 'return '
0202  <-----Source: line: 'return '
0202 <------Class: line: 'return '
0202<-------Source: line: 'return '
0203       InstructionFlow: end-gen
0203      Source: end-gen
0203      If: end: 'block-if'
0203    <-Source: end: 'block-if'
0203   <--Function: end: 'block-if'
0203  <---Source: end: 'block-if'
0203 <----Class: end: 'block-if'
0203<-----Source: end: 'block-if'
0203     If: end-gen
0203     InstructionUpdate: begin-gen
0203      Member: begin-gen
0203       Identifier: begin-gen
0203        Identifier: expr: 'self'
0203       Identifier: end-gen
0203       FunctionCall: begin-gen
0203        Value: begin-gen
0203         Constant: begin-gen
0203          Constant: ctype: 'String' -> 'lblClienteCorreo'
0203          Constant: expr: 'u"lblClienteCorreo"'
0203        <-Value: expr: 'u"lblClienteCorreo"'
0203         Constant: end-gen
0203        Value: end-gen
0203        FunctionCall: expr: 'child(u"lblClienteCorreo")'
0203       FunctionCall: end-gen
0203       Identifier: begin-gen
0203        Identifier: expr: 'text'
0203       Identifier: end-gen
0203       Member: expr: 'self.child(u"lblClienteCorreo").text'
0203      Member: end-gen
0203      OpUpdate: begin-gen
0203       OpUpdate: expr: '='
0203      OpUpdate: end-gen
0203      Value: begin-gen
0203       Identifier: begin-gen
0203        Identifier: expr: 'codClienteCorreo'
0203      <-Value: expr: 'codClienteCorreo'
0203       Identifier: end-gen
0203      Value: end-gen
0203      InstructionUpdate: line: 'self.child(u"lblClienteCorreo").text = codClienteCorreo'
0203    <-Source: line: 'self.child(u"lblClienteCorreo").text = codClienteCorreo'
0203   <--Function: line: 'self.child(u"lblClienteCorreo").text = codClienteCorreo'
0203  <---Source: line: 'self.child(u"lblClienteCorreo").text = codClienteCorreo'
0203 <----Class: line: 'self.child(u"lblClienteCorreo").text = codClienteCorreo'
0203<-----Source: line: 'self.child(u"lblClienteCorreo").text = codClienteCorreo'
0204     InstructionUpdate: end-gen
0204     InstructionCall: begin-gen
0204      Member: begin-gen
0204       Identifier: begin-gen
0204        Identifier: expr: 'util'
0204       Identifier: end-gen
0204       FunctionCall: begin-gen
0204        Value: begin-gen
0204         Constant: begin-gen
0204          Constant: ctype: 'String' -> 'scripts/flfactinfo/clientecorreo'
0204          Constant: expr: 'u"scripts/flfactinfo/clientecorreo"'
0204        <-Value: expr: 'u"scripts/flfactinfo/clientecorreo"'
0204         Constant: end-gen
0204        Value: end-gen
0204        Value: begin-gen
0204         Identifier: begin-gen
0204          Identifier: expr: 'codClienteCorreo'
0204        <-Value: expr: 'codClienteCorreo'
0204         Identifier: end-gen
0204        Value: end-gen
0204        FunctionCall: expr: 'writeSettingEntry(u"scripts/flfactinfo/clientecorreo", codClienteCorreo)'
0204       FunctionCall: end-gen
0204       Member: expr: 'util.writeSettingEntry(u"scripts/flfactinfo/clientecorreo", codClienteCorreo)'
0204      Member: end-gen
0204      InstructionCall: line: 'util.writeSettingEntry(u"scripts/flfactinfo/clientecorreo", codClienteCorreo)'
0204    <-Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/clientecorreo", codClienteCorreo)'
0204   <--Function: line: 'util.writeSettingEntry(u"scripts/flfactinfo/clientecorreo", codClienteCorreo)'
0204  <---Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/clientecorreo", codClienteCorreo)'
0204 <----Class: line: 'util.writeSettingEntry(u"scripts/flfactinfo/clientecorreo", codClienteCorreo)'
0204<-----Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/clientecorreo", codClienteCorreo)'
0205     InstructionCall: end-gen
0205     DeclarationBlock: begin-gen
0205      Variable: begin-gen
0205       Variable: expr: 'nombreCorreo'
0205       Variable: expr: '='
0205       Value: begin-gen
0205        Constant: begin-gen
0205         Constant: ctype: 'String' -> ''
0205         Constant: expr: 'u""'
0205       <-Value: expr: 'u""'
0205      <--Variable: expr: 'u""'
0205        Constant: end-gen
0205       Value: end-gen
0205      Variable: end-gen
0205      DeclarationBlock: line: 'nombreCorreo = u""'
0205    <-Source: line: 'nombreCorreo = u""'
0205   <--Function: line: 'nombreCorreo = u""'
0205  <---Source: line: 'nombreCorreo = u""'
0205 <----Class: line: 'nombreCorreo = u""'
0205<-----Source: line: 'nombreCorreo = u""'
0206     DeclarationBlock: end-gen
0206     Switch: begin-gen
0206      Value: begin-gen
0206       Identifier: begin-gen
0206        Identifier: expr: 'codClienteCorreo'
0206      <-Value: expr: 'codClienteCorreo'
0206       Identifier: end-gen
0206      Value: end-gen
0206      Switch: line: 's3d_when = codClienteCorreo'
0206    <-Source: line: 's3d_when = codClienteCorreo'
0206   <--Function: line: 's3d_when = codClienteCorreo'
0206  <---Source: line: 's3d_when = codClienteCorreo'
0206 <----Class: line: 's3d_when = codClienteCorreo'
0206<-----Source: line: 's3d_when = codClienteCorreo'
0207      Switch: line: 's3d_do_work,s3d_work_done = False,False'
0207    <-Source: line: 's3d_do_work,s3d_work_done = False,False'
0207   <--Function: line: 's3d_do_work,s3d_work_done = False,False'
0207  <---Source: line: 's3d_do_work,s3d_work_done = False,False'
0207 <----Class: line: 's3d_do_work,s3d_work_done = False,False'
0207<-----Source: line: 's3d_do_work,s3d_work_done = False,False'
0208      Value: begin-gen
0208       Constant: begin-gen
0208        Constant: ctype: 'String' -> 'KMail'
0208        Constant: expr: 'u"KMail"'
0208      <-Value: expr: 'u"KMail"'
0208       Constant: end-gen
0208      Value: end-gen
0208      Switch: line: 'if s3d_when == u"KMail": s3d_do_work,s3d_work_done = True,True'
0208    <-Source: line: 'if s3d_when == u"KMail": s3d_do_work,s3d_work_done = True,True'
0208   <--Function: line: 'if s3d_when == u"KMail": s3d_do_work,s3d_work_done = True,True'
0208  <---Source: line: 'if s3d_when == u"KMail": s3d_do_work,s3d_work_done = True,True'
0208 <----Class: line: 'if s3d_when == u"KMail": s3d_do_work,s3d_work_done = True,True'
0208<-----Source: line: 'if s3d_when == u"KMail": s3d_do_work,s3d_work_done = True,True'
0209      Switch: line: 'if s3d_do_work:'
0209    <-Source: line: 'if s3d_do_work:'
0209   <--Function: line: 'if s3d_do_work:'
0209  <---Source: line: 'if s3d_do_work:'
0209 <----Class: line: 'if s3d_do_work:'
0209<-----Source: line: 'if s3d_do_work:'
0210      Switch: begin: 'block-if'
0210    <-Source: begin: 'block-if'
0210   <--Function: begin: 'block-if'
0210  <---Source: begin: 'block-if'
0210 <----Class: begin: 'block-if'
0210<-----Source: begin: 'block-if'
0210      Source: begin-gen
0210       InstructionUpdate: begin-gen
0210        Identifier: begin-gen
0210         Identifier: expr: 'nombreCorreo'
0210        Identifier: end-gen
0210        OpUpdate: begin-gen
0210         OpUpdate: expr: '='
0210        OpUpdate: end-gen
0210        Value: begin-gen
0210         Constant: begin-gen
0210          Constant: ctype: 'String' -> 'kmail'
0210          Constant: expr: 'u"kmail"'
0210        <-Value: expr: 'u"kmail"'
0210         Constant: end-gen
0210        Value: end-gen
0210        InstructionUpdate: line: 'nombreCorreo = u"kmail"'
0210      <-Source: line: 'nombreCorreo = u"kmail"'
0210     <--Switch: line: 'nombreCorreo = u"kmail"'
0210    <---Source: line: 'nombreCorreo = u"kmail"'
0210   <----Function: line: 'nombreCorreo = u"kmail"'
0210  <-----Source: line: 'nombreCorreo = u"kmail"'
0210 <------Class: line: 'nombreCorreo = u"kmail"'
0210<-------Source: line: 'nombreCorreo = u"kmail"'
0211       InstructionUpdate: end-gen
0211       InstructionFlow: begin-gen
0211        InstructionFlow: break: 'break '
0211      <-Source: break: 'break '
0211     <--Switch: line: 's3d_do_work = False # BREAK'
0211    <---Source: line: 's3d_do_work = False # BREAK'
0211   <----Function: line: 's3d_do_work = False # BREAK'
0211  <-----Source: line: 's3d_do_work = False # BREAK'
0211 <------Class: line: 's3d_do_work = False # BREAK'
0211<-------Source: line: 's3d_do_work = False # BREAK'
0212       InstructionFlow: end-gen
0212      Source: end-gen
0212      Switch: end: 'block-if'
0212    <-Source: end: 'block-if'
0212   <--Function: end: 'block-if'
0212  <---Source: end: 'block-if'
0212 <----Class: end: 'block-if'
0212<-----Source: end: 'block-if'
0212      Value: begin-gen
0212       Constant: begin-gen
0212        Constant: ctype: 'String' -> 'Thunderbird'
0212        Constant: expr: 'u"Thunderbird"'
0212      <-Value: expr: 'u"Thunderbird"'
0212       Constant: end-gen
0212      Value: end-gen
0212      Switch: line: 'if s3d_when == u"Thunderbird": s3d_do_work,s3d_work_done = True,True'
0212    <-Source: line: 'if s3d_when == u"Thunderbird": s3d_do_work,s3d_work_done = True,True'
0212   <--Function: line: 'if s3d_when == u"Thunderbird": s3d_do_work,s3d_work_done = True,True'
0212  <---Source: line: 'if s3d_when == u"Thunderbird": s3d_do_work,s3d_work_done = True,True'
0212 <----Class: line: 'if s3d_when == u"Thunderbird": s3d_do_work,s3d_work_done = True,True'
0212<-----Source: line: 'if s3d_when == u"Thunderbird": s3d_do_work,s3d_work_done = True,True'
0213      Switch: line: 'if s3d_do_work:'
0213    <-Source: line: 'if s3d_do_work:'
0213   <--Function: line: 'if s3d_do_work:'
0213  <---Source: line: 'if s3d_do_work:'
0213 <----Class: line: 'if s3d_do_work:'
0213<-----Source: line: 'if s3d_do_work:'
0214      Switch: begin: 'block-if'
0214    <-Source: begin: 'block-if'
0214   <--Function: begin: 'block-if'
0214  <---Source: begin: 'block-if'
0214 <----Class: begin: 'block-if'
0214<-----Source: begin: 'block-if'
0214      Source: begin-gen
0214       InstructionUpdate: begin-gen
0214        Identifier: begin-gen
0214         Identifier: expr: 'nombreCorreo'
0214        Identifier: end-gen
0214        OpUpdate: begin-gen
0214         OpUpdate: expr: '='
0214        OpUpdate: end-gen
0214        Value: begin-gen
0214         Constant: begin-gen
0214          Constant: ctype: 'String' -> 'thunderbird'
0214          Constant: expr: 'u"thunderbird"'
0214        <-Value: expr: 'u"thunderbird"'
0214         Constant: end-gen
0214        Value: end-gen
0214        InstructionUpdate: line: 'nombreCorreo = u"thunderbird"'
0214      <-Source: line: 'nombreCorreo = u"thunderbird"'
0214     <--Switch: line: 'nombreCorreo = u"thunderbird"'
0214    <---Source: line: 'nombreCorreo = u"thunderbird"'
0214   <----Function: line: 'nombreCorreo = u"thunderbird"'
0214  <-----Source: line: 'nombreCorreo = u"thunderbird"'
0214 <------Class: line: 'nombreCorreo = u"thunderbird"'
0214<-------Source: line: 'nombreCorreo = u"thunderbird"'
0215       InstructionUpdate: end-gen
0215       InstructionFlow: begin-gen
0215        InstructionFlow: break: 'break '
0215      <-Source: break: 'break '
0215     <--Switch: line: 's3d_do_work = False # BREAK'
0215    <---Source: line: 's3d_do_work = False # BREAK'
0215   <----Function: line: 's3d_do_work = False # BREAK'
0215  <-----Source: line: 's3d_do_work = False # BREAK'
0215 <------Class: line: 's3d_do_work = False # BREAK'
0215<-------Source: line: 's3d_do_work = False # BREAK'
0216       InstructionFlow: end-gen
0216      Source: end-gen
0216      Switch: end: 'block-if'
0216    <-Source: end: 'block-if'
0216   <--Function: end: 'block-if'
0216  <---Source: end: 'block-if'
0216 <----Class: end: 'block-if'
0216<-----Source: end: 'block-if'
0216      Value: begin-gen
0216       Constant: begin-gen
0216        Constant: ctype: 'String' -> 'Outlook'
0216        Constant: expr: 'u"Outlook"'
0216      <-Value: expr: 'u"Outlook"'
0216       Constant: end-gen
0216      Value: end-gen
0216      Switch: line: 'if s3d_when == u"Outlook": s3d_do_work,s3d_work_done = True,True'
0216    <-Source: line: 'if s3d_when == u"Outlook": s3d_do_work,s3d_work_done = True,True'
0216   <--Function: line: 'if s3d_when == u"Outlook": s3d_do_work,s3d_work_done = True,True'
0216  <---Source: line: 'if s3d_when == u"Outlook": s3d_do_work,s3d_work_done = True,True'
0216 <----Class: line: 'if s3d_when == u"Outlook": s3d_do_work,s3d_work_done = True,True'
0216<-----Source: line: 'if s3d_when == u"Outlook": s3d_do_work,s3d_work_done = True,True'
0217      Switch: line: 'if s3d_do_work:'
0217    <-Source: line: 'if s3d_do_work:'
0217   <--Function: line: 'if s3d_do_work:'
0217  <---Source: line: 'if s3d_do_work:'
0217 <----Class: line: 'if s3d_do_work:'
0217<-----Source: line: 'if s3d_do_work:'
0218      Switch: begin: 'block-if'
0218    <-Source: begin: 'block-if'
0218   <--Function: begin: 'block-if'
0218  <---Source: begin: 'block-if'
0218 <----Class: begin: 'block-if'
0218<-----Source: begin: 'block-if'
0218      Source: begin-gen
0218       InstructionUpdate: begin-gen
0218        Identifier: begin-gen
0218         Identifier: expr: 'nombreCorreo'
0218        Identifier: end-gen
0218        OpUpdate: begin-gen
0218         OpUpdate: expr: '='
0218        OpUpdate: end-gen
0218        Value: begin-gen
0218         Constant: begin-gen
0218          Constant: ctype: 'String' -> 'outlook.exe'
0218          Constant: expr: 'u"outlook.exe"'
0218        <-Value: expr: 'u"outlook.exe"'
0218         Constant: end-gen
0218        Value: end-gen
0218        InstructionUpdate: line: 'nombreCorreo = u"outlook.exe"'
0218      <-Source: line: 'nombreCorreo = u"outlook.exe"'
0218     <--Switch: line: 'nombreCorreo = u"outlook.exe"'
0218    <---Source: line: 'nombreCorreo = u"outlook.exe"'
0218   <----Function: line: 'nombreCorreo = u"outlook.exe"'
0218  <-----Source: line: 'nombreCorreo = u"outlook.exe"'
0218 <------Class: line: 'nombreCorreo = u"outlook.exe"'
0218<-------Source: line: 'nombreCorreo = u"outlook.exe"'
0219       InstructionUpdate: end-gen
0219       InstructionFlow: begin-gen
0219        InstructionFlow: break: 'break '
0219      <-Source: break: 'break '
0219     <--Switch: line: 's3d_do_work = False # BREAK'
0219    <---Source: line: 's3d_do_work = False # BREAK'
0219   <----Function: line: 's3d_do_work = False # BREAK'
0219  <-----Source: line: 's3d_do_work = False # BREAK'
0219 <------Class: line: 's3d_do_work = False # BREAK'
0219<-------Source: line: 's3d_do_work = False # BREAK'
0220       InstructionFlow: end-gen
0220      Source: end-gen
0220      Switch: end: 'block-if'
0220    <-Source: end: 'block-if'
0220   <--Function: end: 'block-if'
0220  <---Source: end: 'block-if'
0220 <----Class: end: 'block-if'
0220<-----Source: end: 'block-if'
0220     Switch: end-gen
0220     If: begin-gen
0220      Expression: begin-gen
0220       Identifier: begin-gen
0220        Identifier: expr: 'nombreCorreo'
0220      <-Expression: expr: 'nombreCorreo'
0220       Identifier: end-gen
0220       Compare: begin-gen
0220        Compare: expr: '!='
0220      <-Expression: expr: '!='
0220       Compare: end-gen
0220       Constant: begin-gen
0220        Constant: ctype: 'String' -> ''
0220        Constant: expr: 'u""'
0220      <-Expression: expr: 'u""'
0220       Constant: end-gen
0220      Expression: end-gen
0220      If: line: 'if nombreCorreo != u"":'
0220    <-Source: line: 'if nombreCorreo != u"":'
0220   <--Function: line: 'if nombreCorreo != u"":'
0220  <---Source: line: 'if nombreCorreo != u"":'
0220 <----Class: line: 'if nombreCorreo != u"":'
0220<-----Source: line: 'if nombreCorreo != u"":'
0221      If: begin: 'block-if'
0221    <-Source: begin: 'block-if'
0221   <--Function: begin: 'block-if'
0221  <---Source: begin: 'block-if'
0221 <----Class: begin: 'block-if'
0221<-----Source: begin: 'block-if'
0221      Source: begin-gen
0221       InstructionUpdate: begin-gen
0221        Member: begin-gen
0221         Identifier: begin-gen
0221          Identifier: expr: 'self'
0221         Identifier: end-gen
0221         FunctionCall: begin-gen
0221          Value: begin-gen
0221           Constant: begin-gen
0221            Constant: ctype: 'String' -> 'lblNombreCorreo'
0221            Constant: expr: 'u"lblNombreCorreo"'
0221          <-Value: expr: 'u"lblNombreCorreo"'
0221           Constant: end-gen
0221          Value: end-gen
0221          FunctionCall: expr: 'child(u"lblNombreCorreo")'
0221         FunctionCall: end-gen
0221         Identifier: begin-gen
0221          Identifier: expr: 'text'
0221         Identifier: end-gen
0221         Member: expr: 'self.child(u"lblNombreCorreo").text'
0221        Member: end-gen
0221        OpUpdate: begin-gen
0221         OpUpdate: expr: '='
0221        OpUpdate: end-gen
0221        Value: begin-gen
0221         Identifier: begin-gen
0221          Identifier: expr: 'nombreCorreo'
0221        <-Value: expr: 'nombreCorreo'
0221         Identifier: end-gen
0221        Value: end-gen
0221        InstructionUpdate: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0221      <-Source: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0221     <--If: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0221    <---Source: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0221   <----Function: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0221  <-----Source: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0221 <------Class: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0221<-------Source: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0222       InstructionUpdate: end-gen
0222       InstructionCall: begin-gen
0222        Member: begin-gen
0222         Identifier: begin-gen
0222          Identifier: expr: 'util'
0222         Identifier: end-gen
0222         FunctionCall: begin-gen
0222          Value: begin-gen
0222           Constant: begin-gen
0222            Constant: ctype: 'String' -> 'scripts/flfactinfo/nombrecorreo'
0222            Constant: expr: 'u"scripts/flfactinfo/nombrecorreo"'
0222          <-Value: expr: 'u"scripts/flfactinfo/nombrecorreo"'
0222           Constant: end-gen
0222          Value: end-gen
0222          Value: begin-gen
0222           Identifier: begin-gen
0222            Identifier: expr: 'nombreCorreo'
0222          <-Value: expr: 'nombreCorreo'
0222           Identifier: end-gen
0222          Value: end-gen
0222          FunctionCall: expr: 'writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222         FunctionCall: end-gen
0222         Member: expr: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222        Member: end-gen
0222        InstructionCall: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222      <-Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222     <--If: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222    <---Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222   <----Function: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222  <-----Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222 <------Class: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0222<-------Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0223       InstructionCall: end-gen
0223      Source: end-gen
0223      If: end: 'block-if'
0223    <-Source: end: 'block-if'
0223   <--Function: end: 'block-if'
0223  <---Source: end: 'block-if'
0223 <----Class: end: 'block-if'
0223<-----Source: end: 'block-if'
0223     If: end-gen
0223    Source: end-gen
0223    Function: end: 'block-def-envioMail_cambiarClienteCorreo'
0223  <-Source: end: 'block-def-envioMail_cambiarClienteCorreo'
0223 <--Class: end: 'block-def-envioMail_cambiarClienteCorreo'
0223<---Source: end: 'block-def-envioMail_cambiarClienteCorreo'
0224   Function: end-gen
0224   Function: begin-gen
0224    Function: line: 'def envioMail_cambiarNombreCorreo(self):'
0224  <-Source: line: 'def envioMail_cambiarNombreCorreo(self):'
0224 <--Class: line: 'def envioMail_cambiarNombreCorreo(self):'
0224<---Source: line: 'def envioMail_cambiarNombreCorreo(self):'
0225    Function: begin: 'block-def-envioMail_cambiarNombreCorreo'
0225  <-Source: begin: 'block-def-envioMail_cambiarNombreCorreo'
0225 <--Class: begin: 'block-def-envioMail_cambiarNombreCorreo'
0225<---Source: begin: 'block-def-envioMail_cambiarNombreCorreo'
0225    Source: begin-gen
0225     DeclarationBlock: begin-gen
0225      Variable: begin-gen
0225       Variable: expr: 'util'
0225       Variable: expr: '='
0225       Value: begin-gen
0225        New: begin-gen
0225         FunctionCall: begin-gen
0225          FunctionCall: expr: 'FLUtil()'
0225        <-New: expr: 'qsatype.FLUtil()'
0225       <--Value: expr: 'qsatype.FLUtil()'
0225      <---Variable: expr: 'qsatype.FLUtil()'
0225         FunctionCall: end-gen
0225        New: end-gen
0225       Value: end-gen
0225      Variable: end-gen
0225      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0225    <-Source: line: 'util = qsatype.FLUtil()'
0225   <--Function: line: 'util = qsatype.FLUtil()'
0225  <---Source: line: 'util = qsatype.FLUtil()'
0225 <----Class: line: 'util = qsatype.FLUtil()'
0225<-----Source: line: 'util = qsatype.FLUtil()'
0226     DeclarationBlock: end-gen
0226     DeclarationBlock: begin-gen
0226      Variable: begin-gen
0226       Variable: expr: 'nombreCorreo'
0226       Variable: expr: '='
0226       Value: begin-gen
0226        Member: begin-gen
0226         Identifier: begin-gen
0226          Identifier: expr: 'Input'
0226         Identifier: end-gen
0226         FunctionCall: begin-gen
0226          Value: begin-gen
0226           Member: begin-gen
0226            Identifier: begin-gen
0226             Identifier: expr: 'util'
0226            Identifier: end-gen
0226            FunctionCall: begin-gen
0226             Value: begin-gen
0226              Constant: begin-gen
0226               Constant: ctype: 'String' -> 'scripts'
0226               Constant: expr: 'u"scripts"'
0226             <-Value: expr: 'u"scripts"'
0226              Constant: end-gen
0226             Value: end-gen
0226             Value: begin-gen
0226              Constant: begin-gen
0226               Constant: ctype: 'String' -> 'Ejecutable para correo:'
0226               Constant: expr: 'u"Ejecutable para correo:"'
0226             <-Value: expr: 'u"Ejecutable para correo:"'
0226              Constant: end-gen
0226             Value: end-gen
0226             FunctionCall: expr: 'translate(u"scripts", u"Ejecutable para correo:")'
0226            FunctionCall: end-gen
0226            Member: expr: 'util.translate(u"scripts", u"Ejecutable para correo:")'
0226          <-Value: expr: 'util.translate(u"scripts", u"Ejecutable para correo:")'
0226           Member: end-gen
0226          Value: end-gen
0226          FunctionCall: expr: 'getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226         FunctionCall: end-gen
0226         Member: expr: 'Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226       <-Value: expr: 'Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226      <--Variable: expr: 'Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226        Member: end-gen
0226       Value: end-gen
0226      Variable: end-gen
0226      DeclarationBlock: line: 'nombreCorreo = Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226    <-Source: line: 'nombreCorreo = Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226   <--Function: line: 'nombreCorreo = Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226  <---Source: line: 'nombreCorreo = Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226 <----Class: line: 'nombreCorreo = Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0226<-----Source: line: 'nombreCorreo = Input.getText(util.translate(u"scripts", u"Ejecutable para correo:"))'
0227     DeclarationBlock: end-gen
0227     If: begin-gen
0227      Value: begin-gen
0227       OpUnary: begin-gen
0227        OpUnary: expr: 'not'
0227      <-Value: expr: 'not'
0227        Identifier: begin-gen
0227         Identifier: expr: 'nombreCorreo'
0227       <-OpUnary: expr: 'nombreCorreo'
0227      <--Value: expr: 'nombreCorreo'
0227        Identifier: end-gen
0227       OpUnary: end-gen
0227      Value: end-gen
0227      If: line: 'if not nombreCorreo:'
0227    <-Source: line: 'if not nombreCorreo:'
0227   <--Function: line: 'if not nombreCorreo:'
0227  <---Source: line: 'if not nombreCorreo:'
0227 <----Class: line: 'if not nombreCorreo:'
0227<-----Source: line: 'if not nombreCorreo:'
0228      If: begin: 'block-if'
0228    <-Source: begin: 'block-if'
0228   <--Function: begin: 'block-if'
0228  <---Source: begin: 'block-if'
0228 <----Class: begin: 'block-if'
0228<-----Source: begin: 'block-if'
0228      Source: begin-gen
0228       InstructionFlow: begin-gen
0228        InstructionFlow: line: 'return '
0228      <-Source: line: 'return '
0228     <--If: line: 'return '
0228    <---Source: line: 'return '
0228   <----Function: line: 'return '
0228  <-----Source: line: 'return '
0228 <------Class: line: 'return '
0228<-------Source: line: 'return '
0229       InstructionFlow: end-gen
0229      Source: end-gen
0229      If: end: 'block-if'
0229    <-Source: end: 'block-if'
0229   <--Function: end: 'block-if'
0229  <---Source: end: 'block-if'
0229 <----Class: end: 'block-if'
0229<-----Source: end: 'block-if'
0229     If: end-gen
0229     InstructionUpdate: begin-gen
0229      Member: begin-gen
0229       Identifier: begin-gen
0229        Identifier: expr: 'self'
0229       Identifier: end-gen
0229       FunctionCall: begin-gen
0229        Value: begin-gen
0229         Constant: begin-gen
0229          Constant: ctype: 'String' -> 'lblNombreCorreo'
0229          Constant: expr: 'u"lblNombreCorreo"'
0229        <-Value: expr: 'u"lblNombreCorreo"'
0229         Constant: end-gen
0229        Value: end-gen
0229        FunctionCall: expr: 'child(u"lblNombreCorreo")'
0229       FunctionCall: end-gen
0229       Identifier: begin-gen
0229        Identifier: expr: 'text'
0229       Identifier: end-gen
0229       Member: expr: 'self.child(u"lblNombreCorreo").text'
0229      Member: end-gen
0229      OpUpdate: begin-gen
0229       OpUpdate: expr: '='
0229      OpUpdate: end-gen
0229      Value: begin-gen
0229       Identifier: begin-gen
0229        Identifier: expr: 'nombreCorreo'
0229      <-Value: expr: 'nombreCorreo'
0229       Identifier: end-gen
0229      Value: end-gen
0229      InstructionUpdate: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0229    <-Source: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0229   <--Function: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0229  <---Source: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0229 <----Class: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0229<-----Source: line: 'self.child(u"lblNombreCorreo").text = nombreCorreo'
0230     InstructionUpdate: end-gen
0230     InstructionCall: begin-gen
0230      Member: begin-gen
0230       Identifier: begin-gen
0230        Identifier: expr: 'util'
0230       Identifier: end-gen
0230       FunctionCall: begin-gen
0230        Value: begin-gen
0230         Constant: begin-gen
0230          Constant: ctype: 'String' -> 'scripts/flfactinfo/nombrecorreo'
0230          Constant: expr: 'u"scripts/flfactinfo/nombrecorreo"'
0230        <-Value: expr: 'u"scripts/flfactinfo/nombrecorreo"'
0230         Constant: end-gen
0230        Value: end-gen
0230        Value: begin-gen
0230         Identifier: begin-gen
0230          Identifier: expr: 'nombreCorreo'
0230        <-Value: expr: 'nombreCorreo'
0230         Identifier: end-gen
0230        Value: end-gen
0230        FunctionCall: expr: 'writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0230       FunctionCall: end-gen
0230       Member: expr: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0230      Member: end-gen
0230      InstructionCall: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0230    <-Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0230   <--Function: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0230  <---Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0230 <----Class: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0230<-----Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/nombrecorreo", nombreCorreo)'
0231     InstructionCall: end-gen
0231    Source: end-gen
0231    Function: end: 'block-def-envioMail_cambiarNombreCorreo'
0231  <-Source: end: 'block-def-envioMail_cambiarNombreCorreo'
0231 <--Class: end: 'block-def-envioMail_cambiarNombreCorreo'
0231<---Source: end: 'block-def-envioMail_cambiarNombreCorreo'
0232   Function: end-gen
0232   Function: begin-gen
0232    Function: line: 'def envioMail_cambiarDirIntermedia(self):'
0232  <-Source: line: 'def envioMail_cambiarDirIntermedia(self):'
0232 <--Class: line: 'def envioMail_cambiarDirIntermedia(self):'
0232<---Source: line: 'def envioMail_cambiarDirIntermedia(self):'
0233    Function: begin: 'block-def-envioMail_cambiarDirIntermedia'
0233  <-Source: begin: 'block-def-envioMail_cambiarDirIntermedia'
0233 <--Class: begin: 'block-def-envioMail_cambiarDirIntermedia'
0233<---Source: begin: 'block-def-envioMail_cambiarDirIntermedia'
0233    Source: begin-gen
0233     DeclarationBlock: begin-gen
0233      Variable: begin-gen
0233       Variable: expr: 'util'
0233       Variable: expr: '='
0233       Value: begin-gen
0233        New: begin-gen
0233         FunctionCall: begin-gen
0233          FunctionCall: expr: 'FLUtil()'
0233        <-New: expr: 'qsatype.FLUtil()'
0233       <--Value: expr: 'qsatype.FLUtil()'
0233      <---Variable: expr: 'qsatype.FLUtil()'
0233         FunctionCall: end-gen
0233        New: end-gen
0233       Value: end-gen
0233      Variable: end-gen
0233      DeclarationBlock: line: 'util = qsatype.FLUtil()'
0233    <-Source: line: 'util = qsatype.FLUtil()'
0233   <--Function: line: 'util = qsatype.FLUtil()'
0233  <---Source: line: 'util = qsatype.FLUtil()'
0233 <----Class: line: 'util = qsatype.FLUtil()'
0233<-----Source: line: 'util = qsatype.FLUtil()'
0234     DeclarationBlock: end-gen
0234     DeclarationBlock: begin-gen
0234      Variable: begin-gen
0234       Variable: expr: 'ruta'
0234       Variable: expr: '='
0234       Value: begin-gen
0234        Member: begin-gen
0234         Identifier: begin-gen
0234          Identifier: expr: 'FileDialog'
0234         Identifier: end-gen
0234         FunctionCall: begin-gen
0234          Value: begin-gen
0234           Member: begin-gen
0234            Identifier: begin-gen
0234             Identifier: expr: 'util'
0234            Identifier: end-gen
0234            FunctionCall: begin-gen
0234             Value: begin-gen
0234              Constant: begin-gen
0234               Constant: ctype: 'String' -> 'scripts'
0234               Constant: expr: 'u"scripts"'
0234             <-Value: expr: 'u"scripts"'
0234              Constant: end-gen
0234             Value: end-gen
0234             Value: begin-gen
0234              Constant: begin-gen
0234               Constant: ctype: 'String' -> ''
0234               Constant: expr: 'u""'
0234             <-Value: expr: 'u""'
0234              Constant: end-gen
0234             Value: end-gen
0234             FunctionCall: expr: 'translate(u"scripts", u"")'
0234            FunctionCall: end-gen
0234            Member: expr: 'util.translate(u"scripts", u"")'
0234          <-Value: expr: 'util.translate(u"scripts", u"")'
0234           Member: end-gen
0234          Value: end-gen
0234          Value: begin-gen
0234           Member: begin-gen
0234            Identifier: begin-gen
0234             Identifier: expr: 'util'
0234            Identifier: end-gen
0234            FunctionCall: begin-gen
0234             Value: begin-gen
0234              Constant: begin-gen
0234               Constant: ctype: 'String' -> 'scripts'
0234               Constant: expr: 'u"scripts"'
0234             <-Value: expr: 'u"scripts"'
0234              Constant: end-gen
0234             Value: end-gen
0234             Value: begin-gen
0234              Constant: begin-gen
0234               Constant: ctype: 'String' -> 'RUTA INTERMEDIA'
0234               Constant: expr: 'u"RUTA INTERMEDIA"'
0234             <-Value: expr: 'u"RUTA INTERMEDIA"'
0234              Constant: end-gen
0234             Value: end-gen
0234             FunctionCall: expr: 'translate(u"scripts", u"RUTA INTERMEDIA")'
0234            FunctionCall: end-gen
0234            Member: expr: 'util.translate(u"scripts", u"RUTA INTERMEDIA")'
0234          <-Value: expr: 'util.translate(u"scripts", u"RUTA INTERMEDIA")'
0234           Member: end-gen
0234          Value: end-gen
0234          FunctionCall: expr: 'getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234         FunctionCall: end-gen
0234         Member: expr: 'FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234       <-Value: expr: 'FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234      <--Variable: expr: 'FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234        Member: end-gen
0234       Value: end-gen
0234      Variable: end-gen
0234      DeclarationBlock: line: 'ruta = FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234    <-Source: line: 'ruta = FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234   <--Function: line: 'ruta = FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234  <---Source: line: 'ruta = FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234 <----Class: line: 'ruta = FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0234<-----Source: line: 'ruta = FileDialog.getExistingDirectory(util.translate(u"scripts", u""), util.translate(u"scripts", u"RUTA INTERMEDIA"))'
0235     DeclarationBlock: end-gen
0235     If: begin-gen
0235      Value: begin-gen
0235       OpUnary: begin-gen
0235        OpUnary: expr: 'not'
0235      <-Value: expr: 'not'
0235        Member: begin-gen
0235         Identifier: begin-gen
0235          Identifier: expr: 'qsatype.File'
0235         Identifier: end-gen
0235         FunctionCall: begin-gen
0235          Value: begin-gen
0235           Identifier: begin-gen
0235            Identifier: expr: 'ruta'
0235          <-Value: expr: 'ruta'
0235           Identifier: end-gen
0235          Value: end-gen
0235          FunctionCall: expr: 'isDir(ruta)'
0235         FunctionCall: end-gen
0235         Member: expr: 'qsatype.File.isDir(ruta)'
0235       <-OpUnary: expr: 'qsatype.File.isDir(ruta)'
0235      <--Value: expr: 'qsatype.File.isDir(ruta)'
0235        Member: end-gen
0235       OpUnary: end-gen
0235      Value: end-gen
0235      If: line: 'if not qsatype.File.isDir(ruta):'
0235    <-Source: line: 'if not qsatype.File.isDir(ruta):'
0235   <--Function: line: 'if not qsatype.File.isDir(ruta):'
0235  <---Source: line: 'if not qsatype.File.isDir(ruta):'
0235 <----Class: line: 'if not qsatype.File.isDir(ruta):'
0235<-----Source: line: 'if not qsatype.File.isDir(ruta):'
0236      If: begin: 'block-if'
0236    <-Source: begin: 'block-if'
0236   <--Function: begin: 'block-if'
0236  <---Source: begin: 'block-if'
0236 <----Class: begin: 'block-if'
0236<-----Source: begin: 'block-if'
0236      Source: begin-gen
0236       InstructionCall: begin-gen
0236        Member: begin-gen
0236         Identifier: begin-gen
0236          Identifier: expr: 'MessageBox'
0236         Identifier: end-gen
0236         FunctionCall: begin-gen
0236          Value: begin-gen
0236           Member: begin-gen
0236            Identifier: begin-gen
0236             Identifier: expr: 'util'
0236            Identifier: end-gen
0236            FunctionCall: begin-gen
0236             Value: begin-gen
0236              Constant: begin-gen
0236               Constant: ctype: 'String' -> 'scripts'
0236               Constant: expr: 'u"scripts"'
0236             <-Value: expr: 'u"scripts"'
0236              Constant: end-gen
0236             Value: end-gen
0236             Value: begin-gen
0236              Constant: begin-gen
0236               Constant: ctype: 'String' -> 'Ruta errÃ³nea'
0236               Constant: expr: 'u"Ruta errÃ³nea"'
0236             <-Value: expr: 'u"Ruta errÃ³nea"'
0236              Constant: end-gen
0236             Value: end-gen
0236             FunctionCall: expr: 'translate(u"scripts", u"Ruta errÃ³nea")'
0236            FunctionCall: end-gen
0236            Member: expr: 'util.translate(u"scripts", u"Ruta errÃ³nea")'
0236          <-Value: expr: 'util.translate(u"scripts", u"Ruta errÃ³nea")'
0236           Member: end-gen
0236          Value: end-gen
0236          Value: begin-gen
0236           Member: begin-gen
0236            Identifier: begin-gen
0236             Identifier: expr: 'MessageBox'
0236            Identifier: end-gen
0236            Identifier: begin-gen
0236             Identifier: expr: 'Ok'
0236            Identifier: end-gen
0236            Member: expr: 'MessageBox.Ok'
0236          <-Value: expr: 'MessageBox.Ok'
0236           Member: end-gen
0236          Value: end-gen
0236          Value: begin-gen
0236           Member: begin-gen
0236            Identifier: begin-gen
0236             Identifier: expr: 'MessageBox'
0236            Identifier: end-gen
0236            Identifier: begin-gen
0236             Identifier: expr: 'NoButton'
0236            Identifier: end-gen
0236            Member: expr: 'MessageBox.NoButton'
0236          <-Value: expr: 'MessageBox.NoButton'
0236           Member: end-gen
0236          Value: end-gen
0236          FunctionCall: expr: 'information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236         FunctionCall: end-gen
0236         Member: expr: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236        Member: end-gen
0236        InstructionCall: line: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236      <-Source: line: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236     <--If: line: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236    <---Source: line: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236   <----Function: line: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236  <-----Source: line: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236 <------Class: line: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0236<-------Source: line: 'MessageBox.information(util.translate(u"scripts", u"Ruta errÃ³nea"), MessageBox.Ok, MessageBox.NoButton)'
0237       InstructionCall: end-gen
0237       InstructionFlow: begin-gen
0237        InstructionFlow: line: 'return '
0237      <-Source: line: 'return '
0237     <--If: line: 'return '
0237    <---Source: line: 'return '
0237   <----Function: line: 'return '
0237  <-----Source: line: 'return '
0237 <------Class: line: 'return '
0237<-------Source: line: 'return '
0238       InstructionFlow: end-gen
0238      Source: end-gen
0238      If: end: 'block-if'
0238    <-Source: end: 'block-if'
0238   <--Function: end: 'block-if'
0238  <---Source: end: 'block-if'
0238 <----Class: end: 'block-if'
0238<-----Source: end: 'block-if'
0238     If: end-gen
0238     InstructionUpdate: begin-gen
0238      Member: begin-gen
0238       Identifier: begin-gen
0238        Identifier: expr: 'self'
0238       Identifier: end-gen
0238       FunctionCall: begin-gen
0238        Value: begin-gen
0238         Constant: begin-gen
0238          Constant: ctype: 'String' -> 'lblDirIntermedia'
0238          Constant: expr: 'u"lblDirIntermedia"'
0238        <-Value: expr: 'u"lblDirIntermedia"'
0238         Constant: end-gen
0238        Value: end-gen
0238        FunctionCall: expr: 'child(u"lblDirIntermedia")'
0238       FunctionCall: end-gen
0238       Identifier: begin-gen
0238        Identifier: expr: 'text'
0238       Identifier: end-gen
0238       Member: expr: 'self.child(u"lblDirIntermedia").text'
0238      Member: end-gen
0238      OpUpdate: begin-gen
0238       OpUpdate: expr: '='
0238      OpUpdate: end-gen
0238      Value: begin-gen
0238       Identifier: begin-gen
0238        Identifier: expr: 'ruta'
0238      <-Value: expr: 'ruta'
0238       Identifier: end-gen
0238      Value: end-gen
0238      InstructionUpdate: line: 'self.child(u"lblDirIntermedia").text = ruta'
0238    <-Source: line: 'self.child(u"lblDirIntermedia").text = ruta'
0238   <--Function: line: 'self.child(u"lblDirIntermedia").text = ruta'
0238  <---Source: line: 'self.child(u"lblDirIntermedia").text = ruta'
0238 <----Class: line: 'self.child(u"lblDirIntermedia").text = ruta'
0238<-----Source: line: 'self.child(u"lblDirIntermedia").text = ruta'
0239     InstructionUpdate: end-gen
0239     InstructionCall: begin-gen
0239      Member: begin-gen
0239       Identifier: begin-gen
0239        Identifier: expr: 'util'
0239       Identifier: end-gen
0239       FunctionCall: begin-gen
0239        Value: begin-gen
0239         Constant: begin-gen
0239          Constant: ctype: 'String' -> 'scripts/flfactinfo/dirCorreo'
0239          Constant: expr: 'u"scripts/flfactinfo/dirCorreo"'
0239        <-Value: expr: 'u"scripts/flfactinfo/dirCorreo"'
0239         Constant: end-gen
0239        Value: end-gen
0239        Value: begin-gen
0239         Identifier: begin-gen
0239          Identifier: expr: 'ruta'
0239        <-Value: expr: 'ruta'
0239         Identifier: end-gen
0239        Value: end-gen
0239        FunctionCall: expr: 'writeSettingEntry(u"scripts/flfactinfo/dirCorreo", ruta)'
0239       FunctionCall: end-gen
0239       Member: expr: 'util.writeSettingEntry(u"scripts/flfactinfo/dirCorreo", ruta)'
0239      Member: end-gen
0239      InstructionCall: line: 'util.writeSettingEntry(u"scripts/flfactinfo/dirCorreo", ruta)'
0239    <-Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/dirCorreo", ruta)'
0239   <--Function: line: 'util.writeSettingEntry(u"scripts/flfactinfo/dirCorreo", ruta)'
0239  <---Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/dirCorreo", ruta)'
0239 <----Class: line: 'util.writeSettingEntry(u"scripts/flfactinfo/dirCorreo", ruta)'
0239<-----Source: line: 'util.writeSettingEntry(u"scripts/flfactinfo/dirCorreo", ruta)'
0240     InstructionCall: end-gen
0240    Source: end-gen
0240    Function: end: 'block-def-envioMail_cambiarDirIntermedia'
0240  <-Source: end: 'block-def-envioMail_cambiarDirIntermedia'
0240 <--Class: end: 'block-def-envioMail_cambiarDirIntermedia'
0240<---Source: end: 'block-def-envioMail_cambiarDirIntermedia'
0241   Function: end-gen
0241  Source: end-gen
0241  Class: end: 'block-class-FormInternalObj'
0241<-Source: end: 'block-class-FormInternalObj'
0242 Class: end-gen
0242Source: end-gen
