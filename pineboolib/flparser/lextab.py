# lextab.py. This file automatically created by PLY (version 3.7). Don't edit!
_tabversion   = '3.5'
_lextokens    = {'LNOT', 'TIMES', 'WHILE', 'OR', 'CONTINUE', 'MOD', 'NEQ', 'LOR', 'THROW', 'RETURN', 'TYPEOF', 'GT', 'DOCSTRINGOPEN', 'XOR', 'LBRACE', 'CATCH', 'CONDITIONAL1', 'RBRACKET', 'ID', 'COLON', 'PERIOD', 'RSHIFT', 'EXTENDS', 'LSHIFT', 'PLUSPLUS', 'LBRACKET', 'DIVEQUAL', 'AND', 'IF', 'VAR', 'FOR', 'DO', 'ICONST', 'FUNCTION', 'ELSE', 'EQ', 'CLASS', 'DELETE', 'DQOUTE', 'GE', 'SWITCH', 'BACKSLASH', 'SEMI', 'RPAREN', 'SCONST', 'MINUSMINUS', 'AT', 'DOLLAR', 'SQOUTE', 'LAND', 'PLUS', 'DEFAULT', 'EQQ', 'BREAK', 'EQUALS', 'LT', 'NEW', 'TIMESEQUAL', 'MODEQUAL', 'COMMA', 'IN', 'COMMENTCLOSE', 'RBRACE', 'MINUS', 'NE', 'WITH', 'TRY', 'CCONST', 'PLUSEQUAL', 'LE', 'MINUSEQUAL', 'FCONST', 'CONST', 'CASE', 'STATIC', 'LPAREN', 'DIVIDE'}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_NEWLINE>\\n+)|(?P<t_ID>[A-Za-z_]+[\\w_]*)|(?P<t_comment>(/\\*( |\\*\\*)(.|\\n)*?\\*/)|(//.*))|(?P<t_DOCSTRINGOPEN>/\\*\\*[ ]+)|(?P<t_preprocessor>\\#(.)*?\\n)|(?P<t_FCONST>((\\d+)(\\.\\d+)(e(\\+|-)?(\\d+))? | (\\d+)e(\\+|-)?(\\d+))([lL]|[fF])?)|(?P<t_ICONST>\\d+([uU]|[lL]|[uU][lL]|[lL][uU])?)|(?P<t_CCONST>\\\'([^\\\'\\\\\\n]|(\\\\.)|\\\\\\n)*?\\\')|(?P<t_SCONST>\\"([^\\"\\\\\\n]|(\\\\.)|\\\\\\n)*?\\")|(?P<t_PLUSPLUS>\\+\\+)|(?P<t_LOR>\\|\\|)|(?P<t_EQQ>===)|(?P<t_NEQ>!==)|(?P<t_TIMESEQUAL>\\*=)|(?P<t_PLUSEQUAL>\\+=)|(?P<t_COMMENTCLOSE>\\*/)|(?P<t_XOR>\\^)|(?P<t_MINUSMINUS>--)|(?P<t_LAND>&&)|(?P<t_GE>>=)|(?P<t_PLUS>\\+)|(?P<t_BACKSLASH>\\\\)|(?P<t_TIMES>\\*)|(?P<t_LPAREN>\\()|(?P<t_NE>!=)|(?P<t_LBRACE>\\{)|(?P<t_MINUSEQUAL>-=)|(?P<t_RPAREN>\\))|(?P<t_EQ>==)|(?P<t_PERIOD>\\.)|(?P<t_OR>\\|)|(?P<t_DOLLAR>\\$)|(?P<t_LE><=)|(?P<t_LBRACKET>\\[)|(?P<t_RSHIFT>>>)|(?P<t_MODEQUAL>%=)|(?P<t_CONDITIONAL1>\\?)|(?P<t_DIVEQUAL>/=)|(?P<t_RBRACKET>\\])|(?P<t_LSHIFT><<)|(?P<t_RBRACE>\\})|(?P<t_AT>@)|(?P<t_DIVIDE>/)|(?P<t_AND>&)|(?P<t_EQUALS>=)|(?P<t_GT>>)|(?P<t_SQOUTE>\')|(?P<t_LNOT>!)|(?P<t_LT><)|(?P<t_MOD>%)|(?P<t_COMMA>,)|(?P<t_SEMI>;)|(?P<t_DQOUTE>")|(?P<t_MINUS>-)|(?P<t_COLON>:)', [None, ('t_NEWLINE', 'NEWLINE'), ('t_ID', 'ID'), ('t_comment', 'comment'), None, None, None, None, ('t_DOCSTRINGOPEN', 'DOCSTRINGOPEN'), ('t_preprocessor', 'preprocessor'), None, (None, 'FCONST'), None, None, None, None, None, None, None, None, None, None, (None, 'ICONST'), None, (None, 'CCONST'), None, None, (None, 'SCONST'), None, None, (None, 'PLUSPLUS'), (None, 'LOR'), (None, 'EQQ'), (None, 'NEQ'), (None, 'TIMESEQUAL'), (None, 'PLUSEQUAL'), (None, 'COMMENTCLOSE'), (None, 'XOR'), (None, 'MINUSMINUS'), (None, 'LAND'), (None, 'GE'), (None, 'PLUS'), (None, 'BACKSLASH'), (None, 'TIMES'), (None, 'LPAREN'), (None, 'NE'), (None, 'LBRACE'), (None, 'MINUSEQUAL'), (None, 'RPAREN'), (None, 'EQ'), (None, 'PERIOD'), (None, 'OR'), (None, 'DOLLAR'), (None, 'LE'), (None, 'LBRACKET'), (None, 'RSHIFT'), (None, 'MODEQUAL'), (None, 'CONDITIONAL1'), (None, 'DIVEQUAL'), (None, 'RBRACKET'), (None, 'LSHIFT'), (None, 'RBRACE'), (None, 'AT'), (None, 'DIVIDE'), (None, 'AND'), (None, 'EQUALS'), (None, 'GT'), (None, 'SQOUTE'), (None, 'LNOT'), (None, 'LT'), (None, 'MOD'), (None, 'COMMA'), (None, 'SEMI'), (None, 'DQOUTE'), (None, 'MINUS'), (None, 'COLON')])]}
_lexstateignore = {'INITIAL': ' \r\t\x0c'}
_lexstateerrorf = {'INITIAL': 't_error'}
_lexstateeoff = {}
